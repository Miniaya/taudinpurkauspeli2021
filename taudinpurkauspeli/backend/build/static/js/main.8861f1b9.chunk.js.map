{"version":3,"sources":["utils/Helper.js","App/case/casesService.js","App/case/casesReducer.js","i18n/config.js","App/navigation/Navbar.js","App/navigation/Sidebar.js","App/case/components/NewCaseForm.js","utils/MessageBanner.js","App/case/components/NewCase.js","App/differential/services/differentialsUnderCases.js","App/procedure/proceduresUnderCaseService.js","App/differential/services/differentialGroupsUnderCases.js","App/case/components/CopyCase.js","App/case/components/RemoveCase.js","App/case/components/CaseCard.js","App/frontpage/Search.js","App/frontpage/Frontpage.js","App/instructions/HowToPlay.js","App/users/Profile.js","App/users/Users.js","App/procedure/components/NewProcedureForm.js","App/procedure/proceduresService.js","App/procedure/proceduresUnderCasesReducer.js","App/procedure/proceduresReducer.js","App/procedure/components/NewProcedure.js","App/procedure/components/EditProcedure.js","App/procedure/components/ProcedureList.js","App/procedure/components/Procedures.js","App/differential/components/Differential.js","App/differential/components/DifferentialList.js","App/differential/components/AddDifferentialForm.js","App/differential/components/SelectDifferentialForm.js","App/differential/reducers/differentialsUnderCasesReducer.js","App/differential/services/differentials.js","App/differential/reducers/differentialsReducer.js","App/differential/components/NewDifferential.js","App/differential/components/differentialGroup/DifferentialGroup.js","App/differential/components/differentialGroup/DifferentialGroupList.js","App/differential/components/differentialGroup/AddDifferentialGroupForm.js","App/differential/components/differentialGroup/SelectDifferentialGroupForm.js","App/differential/reducers/differentialGroupsUnderCasesReducer.js","App/differential/services/differentialGroups.js","App/differential/reducers/differentialGroupsReducer.js","App/differential/components/differentialGroup/NewDifferentialGroup.js","App/differential/components/Differentials.js","App/case/components/HideCase.js","App/case/components/UpdateCaseTitle.js","App/anamnesis/UpdateAnamnesis.js","App/anamnesis/Anamnesis.js","App/subprocedure/services/subProceduresService.js","App/subprocedure/reducers/subProceduresReducer.js","App/subprocedure/services/optionGroupsService.js","App/subprocedure/services/optionGroupsUnderSubProceduresService.js","App/subprocedure/reducers/optionGroupsUnderSubProceduresReducer.js","App/subprocedure/reducers/optionGroupsReducer.js","App/subprocedure/services/optionsService.js","App/subprocedure/services/optionsUnderSubProceduresService.js","App/subprocedure/reducers/optionsUnderSubProceduresReducer.js","App/subprocedure/reducers/optionReducer.js","App/case/components/Case.js","utils/AddUpdateModal.js","utils/CustomTypeaheadSelect.js","App/subprocedure/components/interviewSubProcedure/NewOptionGroupForm.js","App/subprocedure/components/interviewSubProcedure/Option.js","App/subprocedure/components/interviewSubProcedure/OptionList.js","App/subprocedure/components/interviewSubProcedure/NewOptionForm.js","App/subprocedure/components/interviewSubProcedure/OptionGroup.js","App/subprocedure/components/interviewSubProcedure/OptionGroupList.js","App/subprocedure/components/interviewSubProcedure/InterviewSubProcedure.js","App/subprocedure/components/textSubProcedure/UpdateTextSubProcedureForm.js","App/subprocedure/components/textSubProcedure/UpdateTextSubProcedure.js","App/subprocedure/components/textSubProcedure/TextSubProcedure.js","App/subprocedure/components/SubProcedure.js","App/subprocedure/components/SubProcedureList.js","App/subprocedure/components/textSubProcedure/AddTextSubProcedure.js","App/subprocedure/components/interviewSubProcedure/AddInterviewSubProcedure.js","App/procedure/components/Procedure.js","App/files/FileBank.js","App/navigation/Routing.js","App.js","App/users/reducers/userReducer.js","store.js","serviceWorker.js","index.js"],"names":["token","getConfig","headers","Authorization","getLanguage","localStorage","getItem","baseUrl","axios","get","then","response","data","newObject","post","put","id","delete","casesReducer","state","action","type","filter","c","map","i18n","use","LanguageDetector","init","initReactI18next","fallbackLng","lng","resources","fi","translations","require","en","ns","defaultNS","languages","Navigationbar","admin","useSelector","t","useTranslation","changeLanguage","language","window","location","reload","Navbar","collapseOnSelect","expand","variant","sticky","Brand","as","Link","to","Toggle","Collapse","Nav","className","NavDropdown","title","Item","onClick","eventKey","NavLink","href","Sidebar","newCaseForm","addCase","formik","useFormik","initialValues","anamnesis","hidden","validationSchema","Yup","min","max","required","onSubmit","values","Form","noValidate","handleSubmit","spellCheck","Group","controlId","Label","Control","getFieldProps","isInvalid","errors","Feedback","rows","Check","label","Button","setError","message","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","setSuccess","success","MessageBanner","newestOnTop","rtl","pauseOnFocusLoss","NewCase","dispatch","useDispatch","useState","show","setShow","toggleVisibility","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","NewCaseForm","newCase","content","a","casesService","console","log","diffGroupCaseId","caseId","copyCase","caseToBeCopied","createProcedures","oldCaseId","newCopyId","size","event","preventDefault","caseObject","caseService","copy","ducGroupService","res","newCaseId","result","duckling","forEach","element","differentialGroupId","ducService","result2","element2","did","plaa","differentialId","description","copyTheDamnThing","pucService","removeCase","caseToBeRemoved","deleteCase","CaseCard","Card","style","width","cursor","Text","Footer","ProgressBar","now","CopyCase","createDifferentials","copyId","i","length","procedureId","priority","RemoveCase","confirm","Search","newSearch","searchCases","htmlFor","value","onChange","Frontpage","setNewSearch","cases","casesToShow","toLowerCase","includes","target","Row","xs","md","Col","HowToPlay","Profile","Users","newProcedureForm","addProcedure","name","getProceduresUnderCase","proceduresUnderCasesService","proceduresUnderCase","createProcedureUnderCase","newProcedureUnderCase","updateProcedurePriority","procedure","procedureCaseId","proceduresReducer","p","newProcedure","NewProcedureForm","procedureObject","proceduresService","createProcedure","Number","EditProcedure","editProcedureFunc","setNewPriority","setNewProcedureTitle","useHistory","editProcedure","procedureToBeUpdated","updateProcedure","margin","e","defaultValue","DragNDropList","proceduresHook","handleDragStart","handleDragEnd","handleDragEnter","submitForm","index","onDragStart","onDragEnd","onDragEnter","ProcedureList","draggingItem","useRef","dragOverItem","setProceduresHook","procedureToEdit","setProcedureToEdit","initialProcedures","sort","b","useEffect","current","procedures","Promise","all","listCopy","draggingItemContent","splice","handleEditId","Procedures","useParams","NewProcedure","Differential","Accordion","DifferentialList","diffGroupDiffs","differentialsUnderCase","d","AddDifferentialForm","addDifferential","placeholder","role","SelectDifferentialForm","selectDifferential","selectedDiff","setSelectedDiff","setDescription","differentials","differential","labelKey","options","selected","createDifferentialUnderCase","differentialsUnderCasesService","newDifferentialUnderCase","differentialsUnderCasesReducer","differentialsReducer","NewDifferential","Tabs","defaultActiveKey","Tab","ducObject","differentialObject","differentialsService","newDifferential","createDifferential","DifferentialGroup","DifferentialGroupList","caseDifferentialGroups","differentialGroupsUnderCase","AddDifferentialGroupForm","addDifferentialGroup","SelectDifferentialGroupForm","selectDifferentialGroup","differentialGroups","differentialGroup","createDifferentialGroupUnderCase","differentialGroupsUnderCasesService","newDifferentialGroupUnderCase","differentialGroupsUnderCasesReducer","differentialGroupsReducer","NewDifferentialGroup","differentialGroupObject","differentialGroupsService","newDifferentialGroup","createDifferentialGroup","Differentials","HideCase","hideCase","newHidden","setNewHidden","UpdateCaseTitle","updateCaseTitle","UpdateAnamnesis","updateAnamnesis","Anamnesis","find","handleCaseUpdate","updatedCase","subProceduresReducer","createOptionGroupUnderSubProcedure","service","newOptionGroupUnderSubProcedure","optionGroupsUnderSubProceduresReducer","optionGroupsReducer","createOptionUnderSubProcedure","newOption","optionsUnderSubProceduresReducer","optionsReducer","Case","subProceduresService","subprocedures","optionGroupsService","returnedOptionGroups","getOptionGroupsUnderSubProcedures","returnedOptions","getOptionsUnderSubProcedures","returnedDifferentials","returnedDifferentialsUnderCase","getDifferentialsUnderCase","returnedDifferentialGroups","returnedDifferentialGroupsUnderCase","getDifferentialGroupsUnderCase","ButtonGroup","marginBottom","disabled","path","AddUpdateModal","forwardRef","props","ref","useImperativeHandle","buttonLabel","titleLabel","children","CustomTypeaheadSelect","useField","meta","helper","multiple","setValue","onInputChange","text","onBlur","setTouched","allowNew","emptyLabel","touched","NewOptionGroupForm","addOptionGroup","AddCheckSchema","shape","optionGroups","group","r","Option","optionObject","isRequired","OptionList","optionGroupSubProcedureId","optionsUnderSubProcedure","o","NewOptionForm","addOption","integer","option","handleChange","setFieldValue","defaultChecked","checked","OptionGroup","modalRef","optionId","createOption","OptionGroupList","subProcedureId","subProcedureOptionGroups","optionGroupsUnderSubProcedure","InterviewSubProcedure","optionGroup","newOptionGroup","optionGroupId","createOptionGroup","UpdateTextSubProcedureForm","handleTextSubProcedureUpdate","UpdateTextSubProcedure","updatedObject","subProcedureObject","TextSubProcedure","SubProcedure","SubProcedureList","listedProcedures","subProcedures","AddTextSubProcedure","handleSubProcedureAdd","AddInterviewSubProcedure","positive","Procedure","showWhenVisible","display","newSubProcedure","addedSubprocedure","FileBank","Routing","App","React","user","newToken","userReducer","persistConfig","key","storage","reducer","combineReducers","proceduresUnderCasesReducer","persistedReducer","persistReducer","Boolean","hostname","match","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4yWAAIA,EAAQ,KAMCC,EAAY,iBAAO,CAAEC,QAAS,CAAEC,cAAeH,KAE/CI,EAAc,kBAAOC,aAAaC,QAAQ,eAAiB,MCJlEC,EAAU,aAmBD,EAjBA,WAEb,OADgBC,IAAMC,IAAN,UAAaF,EAAb,YAAwBH,KAAiBH,KAC1CS,MAAK,SAACC,GAAD,OAAcA,EAASC,SAe9B,EAZA,SAACC,GAEd,OADgBL,IAAMM,KAAN,UAAcP,EAAd,YAAyBH,KAAiBS,EAAWZ,KACtDS,MAAK,SAACC,GAAD,OAAcA,EAASC,SAU9B,EAPA,SAACC,GAAD,OAAeL,IAAMO,IAAN,UAAaR,EAAb,YAAwBM,EAAUG,GAAlC,YAAwCZ,KAAiBS,EAAWZ,MAOnF,EALA,SAACe,GAEd,OADgBR,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BS,GAAMf,KAClCS,MAAK,SAACC,GAAD,OAAcA,EAASC,SCuC9BM,EAxDM,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAC3C,OAAQA,EAAOC,MACb,IAAK,mBACH,OAAOD,EAAOR,KAChB,IAAK,WACH,MAAM,GAAN,mBAAWO,GAAX,CAAkBC,EAAOR,OAC3B,IAAK,cACH,OAAOO,EAAMG,QAAO,SAACC,GAAD,OAAOA,EAAEP,KAAOI,EAAOR,QAC7C,IAAK,cACH,OAAOO,EAAMK,KAAI,SAACD,GAAD,OAAQA,EAAEP,KAAOI,EAAOR,KAAKI,GAC1CO,EACAH,EAAOR,QACb,QACE,OAAOO,I,uECRbM,IAAKC,IAAIC,KAAkBC,OAE3BH,IAAKC,IAAIG,KAAkBD,KAAK,CAC9BE,YAAa,KAGbC,IAAK1B,aAAaC,QAAQ,eAAiB,KAC3C0B,UAAW,CACTC,GAAI,CAEFC,aAAcC,EAAQ,MAExBC,GAAI,CAEFF,aAAcC,EAAQ,OAG1BE,GAAI,CAAC,gBACLC,UAAW,iBAGbb,IAAKc,UAAY,CAAC,KAAM,MAETd,QAAf,E,OC6Bee,EA7CO,WACpB,IAAMC,EAAQC,aAAY,SAACvB,GAAD,OAAWA,EAAMsB,SACnCE,EAAMC,cAAND,EAGFE,EAAiB,SAACC,GACtBrB,EAAKoB,eAAeC,GACpBC,OAAOC,SAASC,QAAO,IAGzB,OACE,eAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,QAAQ,OAAOC,OAAO,MAA3D,UACE,cAACJ,EAAA,EAAOK,MAAR,CAAcC,GAAIC,IAAMC,GAAG,IAA3B,SAAgCf,EAAE,mBAClC,cAACO,EAAA,EAAOS,OAAR,CAAe,gBAAc,0BAC7B,cAACT,EAAA,EAAOU,SAAR,CAAiB5C,GAAG,wBAApB,SACE,eAAC6C,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,eAACC,EAAA,EAAD,CAAaC,MAAOrB,EAAE,kBAAmB3B,GAAG,iBAAiB8C,UAAU,WAAvE,UACE,cAACC,EAAA,EAAYE,KAAb,CAAkBC,QAAS,kBAAMrB,EAAe,OAAOsB,SAAS,KAAhE,SAAsExB,EAAE,qBACxE,cAACoB,EAAA,EAAYE,KAAb,CAAkBC,QAAS,kBAAMrB,EAAe,OAAOsB,SAAS,KAAhE,SAAsExB,EAAE,wBAExEF,GACF,cAACoB,EAAA,EAAII,KAAL,UACE,cAACG,EAAA,EAAD,CAASZ,GAAIC,IAAMC,GAAG,SAASI,UAAU,WAAzC,SAAqDnB,EAAE,uBAGvDF,GACF,cAACoB,EAAA,EAAII,KAAL,UACE,cAACG,EAAA,EAAD,CAASZ,GAAIC,IAAMC,GAAG,SAASI,UAAU,WAAzC,SAAqDnB,EAAE,gBAGzD,cAACkB,EAAA,EAAII,KAAL,UACE,cAACG,EAAA,EAAD,CAASZ,GAAIC,IAAMC,GAAG,aAAaI,UAAU,WAA7C,SAAyDnB,EAAE,iBAE7D,cAACkB,EAAA,EAAII,KAAL,UACE,cAACG,EAAA,EAAD,CAASZ,GAAIC,IAAMC,GAAG,WAAWI,UAAU,WAA3C,SAAuDnB,EAAE,mBAE3D,cAACkB,EAAA,EAAII,KAAL,UACE,cAACG,EAAA,EAAD,CAASC,KAAK,2GAA2GP,UAAU,WAAnI,SAA+InB,EAAE,uBC7C9I2B,EAJC,kBACd,qBAAKtD,GAAG,a,qFC6DKuD,EA1DK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACb7B,EAAMC,cAAND,EAEF8B,EAASC,YAAU,CACvBC,cAAe,CACbX,MAAO,GACPY,UAAW,GACXC,QAAQ,GAEVC,iBAAkBC,IAAW,CAC3Bf,MAAOe,MACJC,IAAI,EAAGrC,EAAE,iBACTsC,IAAI,IAAKtC,EAAE,gBACXuC,SAASvC,EAAE,oBACdiC,UAAWG,MACXF,OAAQE,QAEVI,SAAU,SAACC,GACTZ,EAAQ,CACNR,MAAOoB,EAAOpB,MACdY,UAAWQ,EAAOR,UAClBC,OAAQO,EAAOP,YAKrB,OACE,eAACQ,EAAA,EAAD,CAAMC,YAAU,EAACH,SAAUV,EAAOc,aAAcC,WAAW,QAA3D,UACE,eAACH,EAAA,EAAKI,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UAAahD,EAAE,eACf,cAAC0C,EAAA,EAAKO,QAAN,yBACEvE,KAAK,QACDoD,EAAOoB,cAAc,UAF3B,IAGEC,YAAarB,EAAOsB,OAAO/B,SAE7B,cAACqB,EAAA,EAAKO,QAAQI,SAAd,CAAuB3E,KAAK,UAA5B,SACGoD,EAAOsB,OAAO/B,WAGnB,eAACqB,EAAA,EAAKI,MAAN,CAAYC,UAAU,YAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UAAahD,EAAE,mBACf,cAAC0C,EAAA,EAAKO,QAAN,aACEpC,GAAG,WACHyC,KAAM,GACFxB,EAAOoB,cAAc,kBAG7B,cAACR,EAAA,EAAKI,MAAN,CAAYC,UAAU,SAAtB,SACE,cAACL,EAAA,EAAKa,MAAN,aACEC,MAAOxD,EAAE,aACL8B,EAAOoB,cAAc,cAG7B,cAACO,EAAA,EAAD,CAAQtC,UAAU,eAAezC,KAAK,SAAtC,SAAgDsB,EAAE,6B,SCvC3C0D,G,OAAW,SAACC,GACvBC,IAAMC,MAAMF,EAAS,CACnBG,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,MAIDC,EAAa,SAACX,GACzBC,IAAMW,QAAQZ,EAAS,CACrBG,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,KAICG,EAtCO,kBACpB,cAAC,IAAD,CACEV,SAAS,aACTC,UAAW,IACXC,iBAAe,EACfS,aAAa,EACbR,cAAY,EACZS,KAAK,EACLC,kBAAkB,EAClBR,WAAW,EACXD,cAAY,KCsCDU,EA3CC,WACd,IAAQ5E,EAAMC,cAAND,EACF6E,EAAWC,cAEjB,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAmB,kBAAMD,GAASD,IAexC,OACE,gCACE,cAACvB,EAAA,EAAD,CAAQtC,UAAU,YAAYI,QAAS2D,EAAkB7G,GAAG,SAA5D,SACG2B,EAAE,mBAEL,eAACmF,EAAA,EAAD,CACEH,KAAMA,EACNI,OAAQF,EACRG,SAAS,SACTC,UAAU,EAJZ,UAME,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMM,MAAP,UAAczF,EAAE,eAElB,cAACmF,EAAA,EAAMO,KAAP,UACE,cAACC,EAAD,CAAa9D,QA3BC,SAAC+D,GACrBV,IACA,IACEL,GNWqBgB,EMXDD,ENWA,uCAAa,WAAOf,GAAP,eAAAiB,EAAA,sEACfC,EAAoBF,GADL,OAC/BD,EAD+B,OAErCf,EAAS,CACPnG,KAAM,WACNT,KAAM2H,IAJ6B,2CAAb,wDMVpBtB,EAAWtE,EAAE,mBACb,MAAO6D,GAEPmC,QAAQC,IAAIpC,GACZH,EAAS1D,EAAE,iBNMS,IAAC6F,c,mBO/BrBjI,GAAU,+BAcD,GAZA,SAACsI,GAEd,OADgBrI,IAAMC,IAAN,UAAaF,GAAb,YAAwBsI,EAAxB,YAA2CzI,KAAiBH,KAC7DS,MAAK,SAACC,GAAD,OAAcA,EAASC,SAU9B,GAPA,SAACC,GAEd,OADgBL,IAAMM,KAAN,UAAcP,GAAd,YAAyBH,KAAiBS,EAAWZ,KACtDS,MAAK,SAACC,GAAD,OAAcA,EAASC,SCTvCL,GAAU,4BAcD,GAZA,SAACuI,GAEd,OADgBtI,IAAMC,IAAN,UAAaF,GAAb,YAAwBuI,EAAxB,YAAkC1I,KAAiBH,KACpDS,MAAK,SAACC,GAAD,OAAcA,EAASC,SAU9B,GAPA,SAACC,GAEd,OADgBL,IAAMM,KAAN,UAAcP,GAAd,YAAyBH,KAAiBS,EAAWZ,KACtDS,MAAK,SAACC,GAAD,OAAcA,EAASC,SAK9B,GAFA,SAACI,EAAIH,GAAL,OAAmBL,IAAMO,IAAN,UAAaR,GAAb,YAAwBS,GAAMH,EAAWZ,MCZrEM,GAAU,oCAYD,GAVA,SAACuI,GAEd,OADgBtI,IAAMC,IAAN,UAAaF,GAAb,YAAwBuI,EAAxB,YAAkC1I,KAAiBH,KACpDS,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ9B,GALA,SAACC,GAEd,OADgBL,IAAMM,KAAN,UAAcP,GAAd,YAAyBH,KAAiBS,EAAWZ,KACtDS,MAAK,SAACC,GAAD,OAAcA,EAASC,SCgE9BmI,GAhEE,SAAC,GAEX,IADLC,EACI,EADJA,eAAgBC,EACZ,EADYA,iBAERtG,EAAMC,cAAND,EACFuG,EAAYF,EAAehI,GAE7BmI,EAAY,EAqDhB,OACE,cAAC/C,EAAA,EAAD,CAAQ/C,QAAQ,UAAU+F,KAAK,KAAKlF,QA1BnB,SAACmF,GAClBA,EAAMC,iBACN,IAAMC,EAAc,CAClBvF,MAAOgF,EAAehF,MACtBY,UAAWoE,EAAepE,UAC1BC,OAAQmE,EAAenE,QAEzB2E,EAAmBD,GAChB7I,MAAK,SAAC+I,GACLN,EAAYM,EAAKzI,MAElBN,MAAK,WACJgJ,GAAuBR,GACpBxI,MAAK,SAACiJ,IAtCU,SAACC,EAAWC,GACnC,IAAIC,EAAW,GACfD,EAAOE,SAAQ,SAACC,GACdF,EAAW,CACThB,OAAQc,EACRK,oBAAqBD,EAAQhJ,IAE/B0I,GAAuBI,GAAUpJ,MAAK,SAACiJ,GACrCO,GAAkBF,EAAQnB,iBACvBnI,MAAK,SAACyJ,GACLA,EAAQJ,SAAQ,SAACK,GACf,IAAMC,EAAMD,EAASpJ,GACfsJ,EAAO,CACXzB,gBAAiBc,EAAI3I,GACrBuJ,eAAgBF,EAChBG,YAAaJ,EAASI,aAExBN,GAAkBI,eAsBpBG,CAAiBtB,EAAWQ,SAGjCjJ,MAAK,WACJgK,GAAkBxB,GACfxI,MAAK,SAACiJ,GACLV,EAAiBE,EAAWQ,UAMpC,SAA0DhH,EAAE,WCtDjDgI,GAbI,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,gBAAiBC,EAAiB,EAAjBA,WAC7BlI,EAAMC,cAAND,EAOR,OACE,cAACyD,EAAA,EAAD,CAAQtC,UAAU,eAAesF,KAAK,KAAK/F,QAAQ,SAASa,QANzC,SAACmF,GACpBA,EAAMC,iBACNuB,EAAWD,EAAgB5J,KAI3B,SAAoF2B,EAAE,mBC0E3EmI,GAvEE,SAAC,GAAkB,IAAhBvJ,EAAe,EAAfA,EAAGkB,EAAY,EAAZA,MACbE,EAAMC,cAAND,EACF6E,EAAWC,cA0CjB,OACE,gCACE,eAACsD,EAAA,EAAD,CAAMvH,GAAIC,IAAMC,GAAE,iBAAYnC,EAAEP,IAAMgK,MAAO,CAAEC,MAAO,QAASC,OAAQ,WAAapH,UAAU,WAA9F,UACE,eAACiH,EAAA,EAAK1C,KAAN,WACE,cAAC0C,EAAA,EAAK3C,MAAN,UAAa7G,EAAEyC,QACf,cAAC+G,EAAA,EAAKI,KAAN,UAAY5J,EAAEqD,eAEhB,cAACmG,EAAA,EAAKK,OAAN,UACE,cAACC,GAAA,EAAD,CAAavH,UAAU,WAAWT,QAAQ,UAAUiI,IAAK,GAAInF,MAAK,UAAK,GAAL,YAIpE1D,GACA,sBAAKqB,UAAU,cAAf,UACE,cAACsC,EAAA,EAAD,CAAQtC,UAAU,aAAaN,GAAIC,IAAMC,GAAE,iBAAYnC,EAAEP,IAAMoI,KAAK,KAApE,SAA0EzG,EAAE,gBAC5E,cAAC4I,GAAD,CACEvC,eAAgBzH,EAChBiK,oBAxDkB,SAACC,EAAQ5B,GACnC,IAAK,IAAI6B,EAAI,EAAGA,EAAI7B,EAAO8B,OAAQD,GAAK,EAAG,CACzC,MAA4B7B,EAAO6B,GAA3B1K,EAAR,EAAQA,GAAIwJ,EAAZ,EAAYA,YAMZN,GALe,CACbpB,OAAQ2C,EACRlB,eAAgBvJ,EAChBwJ,kBAmDIvB,iBA5Ce,SAACwC,EAAQ5B,GAChC,IAAK,IAAI6B,EAAI,EAAGA,EAAI7B,EAAO8B,OAAQD,GAAK,EAAG,CACzC,MAAkC7B,EAAO6B,GAAjCE,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,SAMrBnB,GALe,CACb5B,OAAQ2C,EACRG,cACAC,iBAwCE,cAACC,GAAD,CAAYlB,gBAAiBrJ,EAAGsJ,WAjCf,WAEvB,IZRuB7J,EYSvB,IAAmB,IADA+B,OAAOgJ,QAAQpJ,EAAE,2BAElC,IACE6E,GZXmBxG,EYWCO,EAAEP,GZXJ,uCAAQ,WAAOwG,GAAP,SAAAiB,EAAA,sEAC1BC,EAAoB1H,GADM,OAEhCwG,EAAS,CACPnG,KAAM,cACNT,KAAMI,IAJwB,2CAAR,wDYYlBiG,EAAWtE,EAAE,sBACb,MAAO6D,GACPH,EAAS1D,EAAE,+BCnCJqJ,GAlBA,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YACnBvJ,EAAMC,cAAND,EAER,OACE,8BACE,wBAAOwJ,QAAQ,SAAf,UACGxJ,EAAE,iBADL,OAGE,uBACE3B,GAAG,SACHoL,MAAOH,EACPI,SAAUH,UC+CLI,GAhDG,SAAC,GAAe,IAAb7J,EAAY,EAAZA,MACXE,EAAMC,cAAND,EACR,EAAkC+E,mBAAS,IAA3C,mBAAOuE,EAAP,KAAkBM,EAAlB,KACMC,EAAQ9J,aAAY,SAACvB,GAAD,OAAWA,EAAMqL,SAMrCC,EAAeR,EACTO,EAAMlL,QAAO,SAACC,GAAD,OAAOA,EAAEyC,MAAM0I,cAAcC,SAASV,EAAUS,kBAArEF,EAEJ,OACE,sBAAKxL,GAAG,UAAR,UACE,6BAAK2B,EAAE,oBACP,4BAAIA,EAAE,mBACN,cAAC,GAAD,CAAQsJ,UAAWA,EAAWC,YAXd,SAAC7C,GACnBkD,EAAalD,EAAMuD,OAAOR,UAWxB,uBACC3J,GACC,gCACE,cAAC,EAAD,IACA,uBACA,6BAAKE,EAAE,gBACP,0BAGJ,cAACkK,EAAA,EAAD,CAAKC,GAAG,OAAOC,GAAG,OAAOjJ,UAAU,MAAnC,SACGrB,GACCgK,EAAYnL,QAAO,SAACC,GAAD,OAAOA,EAAEsD,UAAQrD,KAAI,SAACD,GAAD,OACtC,cAACyL,EAAA,EAAD,UACE,cAAC,GAAD,CAAUzL,EAAGA,EAAGkB,MAAOA,KADflB,EAAEP,SAMlB,uBACA,6BAAK2B,EAAE,kBACP,uBACA,cAACkK,EAAA,EAAD,CAAKC,GAAG,OAAOC,GAAG,OAAOjJ,UAAU,MAAnC,SACG2I,EAAYnL,QAAO,SAACC,GAAD,OAAQA,EAAEsD,UAAQrD,KAAI,SAACD,GAAD,OACxC,cAACyL,EAAA,EAAD,UACE,cAAC,GAAD,CAAUzL,EAAGA,EAAGkB,MAAOA,KADflB,EAAEP,aCvCPiM,GAXG,WAChB,IAAQtK,EAAMC,cAAND,EAER,OACE,sBAAK3B,GAAG,UAAR,UACE,6BAAK2B,EAAE,eACP,4BAAIA,EAAE,0BCIGuK,GAVC,WACd,IAAQvK,EAAMC,cAAND,EAER,OACE,qBAAK3B,GAAG,UAAR,SACE,6BAAK2B,EAAE,oBCKEwK,GAVD,WACZ,IAAQxK,EAAMC,cAAND,EAER,OACE,qBAAK3B,GAAG,UAAR,SACE,6BAAK2B,EAAE,wB,UCoCEyK,GAtCU,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAClB1K,EAAMC,cAAND,EAEF8B,EAASC,YAAU,CACvBC,cAAe,CACbX,MAAO,IAETc,iBAAkBC,IAAW,CAC3Bf,MAAOe,MACJC,IAAI,EAAGrC,EAAE,iBACTsC,IAAI,IAAKtC,EAAE,gBACXuC,SAASvC,EAAE,sBAEhBwC,SAAU,SAACC,GACTiI,EAAa,CACXC,KAAMlI,EAAOpB,WAKnB,OACE,eAACqB,EAAA,EAAD,CAAMC,YAAU,EAACH,SAAUV,EAAOc,aAAlC,UACE,eAACF,EAAA,EAAKI,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UAAahD,EAAE,oBACf,cAAC0C,EAAA,EAAKO,QAAN,yBACEvE,KAAK,QACDoD,EAAOoB,cAAc,UAF3B,IAGEC,YAAarB,EAAOsB,OAAO/B,SAE7B,cAACqB,EAAA,EAAKO,QAAQI,SAAd,CAAuB3E,KAAK,UAA5B,SACGoD,EAAOsB,OAAO/B,WAGnB,cAACoC,EAAA,EAAD,CAAQ/E,KAAK,SAASyC,UAAU,eAAhC,SAAgDnB,EAAE,kCCpClDpC,GAAU,kBAcD,GAPA,SAACM,GAEd,OADgBL,IAAMM,KAAN,UAAcP,GAAd,YAAyBH,KAAiBS,EAAWZ,KACtDS,MAAK,SAACC,GAAD,OAAcA,EAASC,SAK9B,GAZA,WAEb,OADgBJ,IAAMC,IAAN,UAAaF,GAAb,YAAwBH,KAAiBH,KAC1CS,MAAK,SAACC,GAAD,OAAcA,EAASC,SAU9B,GAFA,SAACI,EAAIH,GAAL,OAAmBL,IAAMO,IAAN,UAAaR,GAAb,YAAwBS,EAAxB,YAA8BZ,KAAiBS,EAAWZ,MCC/EsN,GAAyB,SAACzE,GAAD,8CAAY,WAAOtB,GAAP,eAAAiB,EAAA,sEACd+E,GAAmC1E,GADrB,OAC1C2E,EAD0C,OAEhDjG,EAAS,CACPnG,KAAM,4BACNT,KAAM6M,GAAuB,OAJiB,2CAAZ,uDAQzBC,GAA2B,SAAClF,GAAD,8CAAa,WAAOhB,GAAP,eAAAiB,EAAA,sEACf+E,GAAmChF,GADpB,OAC7CmF,EAD6C,OAEnDnG,EAAS,CACPnG,KAAM,2BACNT,KAAM+M,IAJ2C,2CAAb,uDAQ3BC,GAA0B,SAACC,GAAD,8CAAe,WAAOrG,GAAP,SAAAiB,EAAA,sEAC9C+E,GAAmCK,EAAUC,gBAAiBD,GADhB,OAEpDrG,EAAS,CACPnG,KAAM,mBACNT,KAAMiN,IAJ4C,2CAAf,uDAiBxBE,GAhDW,WAAyB,IAAxB5M,EAAuB,uDAAf,GAAIC,EAAW,uCAChD,OAAQA,EAAOC,MACb,IAAK,4BACH,OAAOD,EAAOR,KAChB,IAAK,2BACH,MAAM,GAAN,mBAAWO,GAAX,CAAkBC,EAAOR,OAC3B,IAAK,mBACH,OAAOO,EAAMK,KAAI,SAACwM,GAAD,OAAQA,EAAEhN,KAAOI,EAAOR,KAAKI,GAC1CgN,EACA5M,EAAOR,QACb,QACE,OAAOO,ICoCE4M,GA9CW,WAAyB,IAAxB5M,EAAuB,uDAAf,GAAIC,EAAW,uCAChD,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOD,EAAOR,KAChB,IAAK,gBACH,MAAM,GAAN,mBAAWO,GAAX,CAAkBC,EAAOR,OAC3B,IAAK,mBACH,OAAOO,EAAMK,KAAI,SAACwM,GAAD,OAAQA,EAAEhN,KAAOI,EAAOR,KAAKI,GAC1CgN,EACA,CACAhN,GAAIgN,EAAEhN,GACNsM,KAAMU,EAAEV,SAEd,QACE,OAAOnM,ICwCE8M,GA5CM,SAAC,GAAgB,IAAdnF,EAAa,EAAbA,OAEdnG,EAAMC,cAAND,EACF6E,EAAWC,cAEjB,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAmB,kBAAMD,GAASD,IAcxC,OACE,gCACE,cAACvB,EAAA,EAAD,CAAQtC,UAAU,YAAYI,QAAS2D,EAAvC,SACGlF,EAAE,wBAEL,eAACmF,EAAA,EAAD,CACEH,KAAMA,EACNI,OAAQF,EACRG,SAAS,SACTC,UAAU,EAJZ,UAME,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMM,MAAP,UAAczF,EAAE,oBAElB,cAACmF,EAAA,EAAMO,KAAP,UACE,cAAC6F,GAAD,CAAkBb,aA1BC,SAACc,GAC1B,IACE3G,EDIyB,SAACsB,EAAQ+E,GAAT,8CAAuB,WAAOrG,GAAP,eAAAiB,EAAA,sEACzB2F,GAAyBP,GADA,OAC9CI,EAD8C,OAGpDzG,EAAS,CACPnG,KAAM,gBACNT,KAAMqN,IAGRzG,EAASkG,GAAyB,CAChC5E,SACA8C,YAAaqC,EAAajN,GAC1B6K,SAAU,KAXwC,2CAAvB,sDCJhBwC,CAAgBC,OAAOxF,GAASqF,IACzCtG,IACAZ,EAAWtE,EAAE,wBACb,MAAO6D,GACPqB,IACAxB,EAAS1D,EAAE,mCC+DF4L,GAhFO,SAAC,GAA8C,IAA5CV,EAA2C,EAA3CA,UAAW/E,EAAgC,EAAhCA,OAAQ0F,EAAwB,EAAxBA,kBAE1C,EAAsC9G,mBAASmG,EAAUhC,UAAzD,mBAAoB4C,GAApB,WAEA,EAAkD/G,mBAASmG,EAAUP,MAArE,mBAA0BoB,GAA1B,WAEQ/L,EAAMC,cAAND,EACF6E,EAAWC,cAGXlH,GADUoO,cACH,iBAAa7F,IAapB8F,EAAgB,SAACvF,GACrBA,EAAMC,iBACNoF,EAAqBrF,EAAMuD,OAAO,GAAGR,OACrCqC,EAAepF,EAAMuD,OAAO,GAAGR,OAG/B,IAAMyC,EAAoB,2BACrBhB,GADqB,IAExBhC,SAAUyC,OAAOjF,EAAMuD,OAAO,GAAGR,OACjCkB,KAAMjE,EAAMuD,OAAO,GAAGR,QAGC,MAArBoC,GACFA,EAAkBK,GAEpBrH,EFP2B,SAACqG,GAAD,8CAAe,WAAOrG,GAAP,SAAAiB,EAAA,sEACtC2F,GAAyBP,EAAU7M,GAAI6M,GADD,OAE5CrG,EAASoG,GAAwBC,IAFW,2CAAf,sDEOlBiB,CAAgBD,KAG3B,OACE,sBAAK7N,GAAG,oBAAR,UACE,6BAAK2B,EAAE,mBACP,cAACyD,EAAA,EAAD,CAAQtC,UAAU,uBAAuBN,GAAIC,IAAMC,GAAE,UAAKnD,EAAL,sBAA0BsN,EAAU7M,IAAMgK,MAAO,CAAE+D,OAAQ,IAAhH,SAAuHpM,EAAE,mBACzH,uBAAMwC,SAAU,SAAC6J,GAAD,OAAOJ,EAAcI,IAArC,UACE,8BACE,uBAAO7C,QAAQ,QAAf,SACGxJ,EAAE,oBAEL,uBACA,uBACE3B,GAAG,QACHK,KAAK,OACL4N,aAAcpB,EAAUP,KACxBjB,SArCgB,SAAChD,GACzBqF,EAAqBrF,EAAMuD,OAAOR,QAqC1BtI,UAAU,iBAGd,8BACE,uBAAOqI,QAAQ,WAAf,SACGxJ,EAAE,uBAEL,uBACA,uBACE3B,GAAG,WACHK,KAAK,UACLgL,SAtDmB,SAAChD,GAC5BoF,EAAepF,EAAMuD,OAAOR,QAsDpB6C,aAAcpB,EAAUhC,SACxB/H,UAAU,iBAGd,4BACE,cAACsC,EAAA,EAAD,CAAQ/E,KAAK,SAASL,GAAG,SAAS8C,UAAU,eAA5C,SAA4DnB,EAAE,uBA/BnCkL,EAAUhC,WC7CzCqD,GAAgB,SAAC,GAAD,IACpBC,EADoB,EACpBA,eAAgBC,EADI,EACJA,gBAAiBC,EADb,EACaA,cAAeC,EAD5B,EAC4BA,gBAAiB3M,EAD7C,EAC6CA,EAAG4M,EADhD,EACgDA,WADhD,OAGpBJ,GACKA,EAAe3N,KAAI,SAACwM,EAAGwB,GAAJ,OACpB,oBACEC,YAAa,SAACT,GAAD,OAAOI,EAAgBJ,EAAGQ,IACvCE,UAAW,kBAAML,KACjBM,YAAa,SAACX,GAAD,OAAOM,EAAgBN,EAAGQ,IAEvC1I,WAAS,EALX,SAOE,sBAAKhD,UAAU,OAAf,UACE,eAACsC,EAAA,EAAD,CAAQtC,UAAU,kBAAlB,UACGkK,EAAEnC,SADL,OAGGmC,EAAEV,QAEL,sBAAMnI,SAAU,SAAC6J,GAAD,OAAOO,EAAWvB,EAAGgB,IAAIlL,UAAU,cAAnD,SACE,cAACsC,EAAA,EAAD,CAAQ/E,KAAK,SAASyC,UAAU,aAAyBsF,KAAK,KAA9D,SAAoEzG,EAAE,eAApB6M,SAVjDA,OAwFEI,GAvEO,SAAC,GAAY,IAAV5O,EAAS,EAATA,GAEf2B,EAAMC,cAAND,EACF6E,EAAWC,cACXoI,EAAeC,mBACfC,EAAeD,mBACrB,EAA4CpI,mBAAS,IAArD,mBAAOyH,EAAP,KAAuBa,EAAvB,KACA,EAA8CtI,mBAAS,MAAvD,mBAAOuI,EAAP,KAAwBC,EAAxB,KAEMC,EAAoBzN,aAAY,SAACvB,GAErC,OADgCA,EAAxBsM,oBAEL2C,MAAK,SAAC3H,EAAG4H,GAAJ,OAAU5H,EAAEoD,SAAWwE,EAAExE,eAGnCyE,qBAAU,WACRN,EAAkBG,KACjB,CAACA,IAmCJ,OACE,qCACE,cAAC,GAAD,CACEhB,eAAgBA,EAChBC,gBAzBkB,SAACJ,EAAGvI,GAC1BoJ,EAAaU,QAAU9J,GAyBnB4I,cATgB,WJ3CiB,IAACvG,EAAQ0H,EI4C9ChJ,GJ5CsCsB,EI4CH9H,EJ5CWwP,EI4CPrB,EJ5CF,uCAAwB,WAAO3H,GAAP,SAAAiB,EAAA,sEACzDgI,QAAQC,IAAIF,EAAWhP,KAAI,SAACwM,EAAGwB,GAAJ,OAAchC,GAE3CQ,EAAEF,gBACF,CAAEjC,SAAU2D,EAAQ,QAJuC,OAM/DhI,EAAS+F,GAAuBzE,IAN+B,2CAAxB,yDIqDjCwG,gBAtBkB,SAACN,EAAGvI,GAC1BsJ,EAAaQ,QAAU9J,EACvB,IAAMkK,EAAQ,YAAOxB,GACfyB,EAAsBD,EAASd,EAAaU,SAClDI,EAASE,OAAOhB,EAAaU,QAAS,GACtCI,EAASE,OAAOd,EAAaQ,QAAS,EAAGK,GACzCf,EAAaU,QAAUR,EAAaQ,QACpCR,EAAaQ,QAAU,KACvBP,EAAkBW,IAedhO,EAAGA,EACH4M,WAnCa,SAACvB,EAAGgB,GACrBA,EAAE1F,iBANiB,SAAC0E,GACpBkC,EAAmBlC,GAMnB8C,CAAa9C,MAmCTiC,EACA,cAAC,GAAD,CAAepC,UAAWoC,EAAiBnH,OAAQ9H,IAEnD,sCC9EO+P,GAhBI,SAAC,GAAe,IAAbtO,EAAY,EAAZA,MAEZE,EAAMC,cAAND,EACA3B,EAAOgQ,cAAPhQ,GAER,OACE,gCACE,6BAAK2B,EAAE,gBACLF,GACA,cAACwO,GAAD,CAAcnI,OAAQ9H,IAExB,cAAC,GAAD,CAAeA,GAAIA,Q,UCHVkQ,GAXM,SAAC,GAAD,IAAGlQ,EAAH,EAAGA,GAAIsM,EAAP,EAAOA,KAAM9C,EAAb,EAAaA,YAAb,OACnB,eAACO,EAAA,EAAD,WACE,cAACoG,GAAA,EAAUxN,OAAX,CAAkBH,GAAIuH,IAAK7C,OAAQ/D,SAAUnD,EAAIA,GAAG,mBAApD,SACGsM,IAEH,cAAC6D,GAAA,EAAUvN,SAAX,CAAoBO,SAAUnD,EAA9B,SACE,cAAC+J,EAAA,EAAK1C,KAAN,UAAYmC,UCSH4G,GAbU,SAAC,GAAyB,IAAvBvI,EAAsB,EAAtBA,gBAEpBwI,EADoB3O,aAAY,SAACvB,GAAD,OAAWA,EAAMmQ,0BACdhQ,QAAO,SAACiQ,GAAD,OAAOA,EAAE1I,kBAAoBA,KAE7E,OACE,cAACsI,GAAA,EAAD,UACGE,EAAe7P,KAAI,SAAC+P,GAAD,OAClB,cAAC,GAAD,CAAyBvQ,GAAIuQ,EAAEvQ,GAAIsM,KAAMiE,EAAEjE,KAAM9C,YAAa+G,EAAE/G,aAA7C+G,EAAEvQ,U,oBC8CdwQ,GAlDa,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACrB9O,EAAMC,cAAND,EAEF8B,EAASC,YAAU,CACvBC,cAAe,CACb2I,KAAM,GACN9C,YAAa,IAEf1F,iBAAkBC,IAAW,CAC3BuI,KAAMvI,MACHC,IAAI,EAAGrC,EAAE,iBACTsC,IAAI,IAAKtC,EAAE,gBACXuC,SAASvC,EAAE,oBACd6H,YAAazF,QAEfI,SAAU,SAACC,GACTqM,EAAgB,CACdnE,KAAMlI,EAAOkI,KACb9C,YAAapF,EAAOoF,iBAK1B,OACE,eAACnF,EAAA,EAAD,CAAMC,YAAU,EAACH,SAAUV,EAAOc,aAAlC,UACE,eAACF,EAAA,EAAKI,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UAAahD,EAAE,qBACf,cAAC0C,EAAA,EAAKO,QAAN,yBACEvE,KAAK,OACLqQ,YAAa/O,EAAE,UACX8B,EAAOoB,cAAc,SAH3B,IAIEC,YAAarB,EAAOsB,OAAOuH,QAE7B,cAACjI,EAAA,EAAKO,QAAQI,SAAd,CAAuB3E,KAAK,UAAUsQ,KAAK,QAAQ,aAAW,gBAA9D,SACGlN,EAAOsB,OAAOuH,UAGnB,eAACjI,EAAA,EAAKI,MAAN,CAAYC,UAAU,cAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UAAahD,EAAE,iBACf,cAAC0C,EAAA,EAAKO,QAAN,aACEpC,GAAG,WACHyC,KAAM,GACFxB,EAAOoB,cAAc,oBAG7B,cAACO,EAAA,EAAD,CAAQtC,UAAU,eAAezC,KAAK,SAAtC,SAAgDsB,EAAE,qC,SCGzCiP,GAhDgB,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,mBAAoBhJ,EAAsB,EAAtBA,gBAC5ClG,EAAMC,cAAND,EAER,EAAwC+E,mBAAS,IAAjD,mBAAOoK,EAAP,KAAqBC,EAArB,KACA,EAAsCrK,mBAAS,IAA/C,mBAAO8C,EAAP,KAAoBwH,EAApB,KACMC,EAAgBvP,aAAY,SAACvB,GAAD,OAAWA,EAAM8Q,iBAenD,OACE,eAAC5M,EAAA,EAAD,CAAMF,SAdyB,SAACkE,GAChCA,EAAMC,iBACN,IAAM4I,EAAeD,EAAc3Q,QAAO,SAACiQ,GAAD,OAAOA,EAAEjE,OAASwE,EAAa,MAAI,GAC7ED,EAAmB,CACjBhJ,kBACA0B,eAAgB2H,EAAalR,GAC7BwJ,gBAGFwH,EAAe,IACfD,EAAgB,KAIhB,UACE,eAAC1M,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKM,MAAN,UAAahD,EAAE,gCACf,cAAC,KAAD,CACE3B,GAAG,yBACHmR,SAAS,OACTC,QAASH,EAAczQ,KAAI,SAAC+P,GAAD,OAAOA,EAAEjE,QACpCoE,YAAa/O,EAAE,sBACf0J,SAAU0F,EACVM,SAAUP,OAGd,eAACzM,EAAA,EAAKI,MAAN,CAAY3B,UAAU,OAAO4B,UAAU,cAAvC,UACE,cAACL,EAAA,EAAKM,MAAN,UAAahD,EAAE,iBACf,cAAC0C,EAAA,EAAKO,QAAN,CACEpC,GAAG,WACH8J,KAAK,cACLrH,KAAM,EACNmG,MAAO5B,EACP6B,SAAU,SAAC2C,GAAD,OAAOgD,EAAehD,EAAEpC,OAAOR,aAG7C,cAAChG,EAAA,EAAD,CAAQtC,UAAU,eAAezC,KAAK,SAAtC,SAAgDsB,EAAE,qCC/B3C2P,GAA8B,SAAC9J,GAAD,8CAAa,WAAOhB,GAAP,eAAAiB,EAAA,sEACf8J,GAAsC/J,GADvB,OAChDgK,EADgD,OAEtDhL,EAAS,CACPnG,KAAM,4BACNT,KAAM4R,IAJ8C,2CAAb,uDAQ5BC,GA3BwB,WAAyB,IAAxBtR,EAAuB,uDAAf,GAAIC,EAAW,uCAC7D,OAAQA,EAAOC,MACb,IAAK,6BACH,OAAOD,EAAOR,KAChB,IAAK,4BACH,MAAM,GAAN,mBAAWO,GAAX,CAAkBC,EAAOR,OAC3B,QACE,OAAOO,ICLPZ,GAAU,qBAmBD,GAjBA,WAEb,OADgBC,IAAMC,IAAN,UAAaF,GAAb,YAAwBH,KAAiBH,KAC1CS,MAAK,SAACC,GAAD,OAAcA,EAASC,SAe9B,GAZA,SAACC,GAEd,OADgBL,IAAMM,KAAN,UAAcP,GAAd,YAAyBH,KAAiBS,EAAWZ,KACtDS,MAAK,SAACC,GAAD,OAAcA,EAASC,SCuB9B8R,GAjCc,WAAyB,IAAxBvR,EAAuB,uDAAf,GAAIC,EAAW,uCACnD,OAAQA,EAAOC,MACb,IAAK,oBACH,OAAOD,EAAOR,KAChB,IAAK,mBACH,MAAM,GAAN,mBAAWO,GAAX,CAAkBC,EAAOR,OAC3B,QACE,OAAOO,ICqEEwR,GAlES,SAAC,GAAyB,IAAvB9J,EAAsB,EAAtBA,gBACjBlG,EAAMC,cAAND,EAER,EAAwB+E,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMJ,EAAWC,cAEXI,EAAmB,kBAAMD,GAASD,IA4BxC,OACE,sBAAK3G,GAAG,kBAAR,UACE,cAACoF,EAAA,EAAD,CAAQtC,UAAU,YAAYI,QAAS2D,EAAkB7G,GAAG,SAA5D,SACG2B,EAAE,2BAEL,eAACmF,EAAA,EAAD,CACEH,KAAMA,EACNI,OAAQF,EACRG,SAAS,SACTC,UAAU,EAJZ,UAME,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMM,MAAP,UAAczF,EAAE,uBAElB,cAACmF,EAAA,EAAMO,KAAP,UACE,eAACuK,GAAA,EAAD,CAAMC,iBAAiB,SAAS7R,GAAG,gBAAgB8C,UAAU,OAA7D,UACE,cAACgP,GAAA,EAAD,CAAK3O,SAAS,SAASH,MAAOrB,EAAE,kBAAhC,SACE,cAAC,GAAD,CACEkP,mBA3CsB,SAACkB,GACnClL,IACA,IACEL,EAAS8K,GAA4BS,IACrC9L,EAAWtE,EAAE,8BACb,MAAO6D,GAEPmC,QAAQC,IAAIpC,GACZH,EAAS1D,EAAE,8BAoCDkG,gBAAiBA,MAGrB,cAACiK,GAAA,EAAD,CAAK3O,SAAS,MAAMH,MAAOrB,EAAE,uBAA7B,SACE,cAAC,GAAD,CAAqB8O,gBAnCH,SAACuB,GAC7BnL,IACA,IACEL,EDhB4B,SAACgB,EAASK,GAAV,8CAA8B,WAAOrB,GAAP,eAAAiB,EAAA,sEAChCwK,GAA4B,CAAE3F,KAAM9E,EAAQ8E,OADZ,OACxD4F,EADwD,OAE9D1L,EAAS,CACPnG,KAAM,mBACNT,KAAMsS,IAGR1L,EAAS8K,GAA4B,CACnCzJ,kBACA0B,eAAgB2I,EAAgBlS,GAChCwJ,YAAahC,EAAQgC,eAVuC,2CAA9B,sDCgBnB2I,CAAmBH,EAAoBnK,IAChD5B,EAAWtE,EAAE,8BACb,MAAO6D,GAEPmC,QAAQC,IAAIpC,GACZH,EAAS1D,EAAE,8CCvBFyQ,GAdW,SAAC,GAAD,IACxBvK,EADwB,EACxBA,gBAAiByE,EADO,EACPA,KAAM7K,EADC,EACDA,MADC,OAGxB,eAACsI,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,UACE,cAACF,EAAA,EAAK7C,OAAN,UAAcoF,IACd,eAACvC,EAAA,EAAK1C,KAAN,WACE,cAAC,GAAD,CAAkBQ,gBAAiBA,IAClCpG,GACC,cAAC,GAAD,CAAiBoG,gBAAiBA,WCQ3BwK,GAjBe,SAAC,GAAe,IAAb5Q,EAAY,EAAZA,MACzB6Q,EAAyB5Q,aAAY,SAACvB,GAAD,OAAWA,EAAMoS,+BAE5D,OACE,qBAAK,cAAY,gBAAjB,SACGD,EAAuB9R,KAAI,SAAC+P,GAAD,OAC1B,cAAC,GAAD,CAEE1I,gBAAiB0I,EAAE1I,gBACnByE,KAAMiE,EAAEjE,KACR7K,MAAOA,GAHF8O,EAAEvQ,UCoCFwS,GAvCkB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,qBAC1B9Q,EAAMC,cAAND,EAEF8B,EAASC,YAAU,CACvBC,cAAe,CACb2I,KAAM,IAERxI,iBAAkBC,IAAW,CAC3BuI,KAAMvI,MACHC,IAAI,EAAGrC,EAAE,iBACTsC,IAAI,IAAKtC,EAAE,gBACXuC,SAASvC,EAAE,sBAEhBwC,SAAU,SAACC,GACTqO,EAAqB,CACnBnG,KAAMlI,EAAOkI,UAKnB,OACE,eAACjI,EAAA,EAAD,CAAMC,YAAU,EAACH,SAAUV,EAAOc,aAAlC,UACE,eAACF,EAAA,EAAKI,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UAAahD,EAAE,0BACf,cAAC0C,EAAA,EAAKO,QAAN,yBACEvE,KAAK,OACLqQ,YAAa/O,EAAE,UACX8B,EAAOoB,cAAc,SAH3B,IAIEC,YAAarB,EAAOsB,OAAOuH,QAE7B,cAACjI,EAAA,EAAKO,QAAQI,SAAd,CAAuB3E,KAAK,UAAUsQ,KAAK,QAAQ,aAAW,gBAA9D,SACGlN,EAAOsB,OAAOuH,UAGnB,cAAClH,EAAA,EAAD,CAAQtC,UAAU,eAAezC,KAAK,SAAtC,SAAgDsB,EAAE,0CCHzC+Q,GA/BqB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,wBAC7BhR,EAAMC,cAAND,EAER,EAAwC+E,mBAAS,IAAjD,mBAAOoK,EAAP,KAAqBC,EAArB,KACM6B,EAAqBlR,aAAY,SAACvB,GAAD,OAAWA,EAAMyS,sBASxD,OACE,eAACvO,EAAA,EAAD,CAAMF,SARyB,SAACkE,GAChCA,EAAMC,iBACN,IAAMuK,EAAoBD,EAAmBtS,QAAO,SAACiQ,GAAD,OAAOA,EAAEjE,OAASwE,EAAa,MAAI,GACvF6B,EAAwBE,EAAkB7S,IAC1C+Q,EAAgB,KAIhB,UACE,eAAC1M,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKM,MAAN,UAAahD,EAAE,qCACf,cAAC,KAAD,CACE3B,GAAG,yBACHmR,SAAS,OACTC,QAASwB,EAAmBpS,KAAI,SAAC+P,GAAD,OAAOA,EAAEjE,QACzCoE,YAAa/O,EAAE,2BACf0J,SAAU0F,EACVM,SAAUP,OAGd,cAAC1L,EAAA,EAAD,CAAQtC,UAAU,eAAezC,KAAK,SAAtC,SAAgDsB,EAAE,0CCd3CmR,GAAmC,SAACtL,GAAD,8CAAa,WAAOhB,GAAP,eAAAiB,EAAA,sEACfsL,GAA2CvL,GAD5B,OACrDwL,EADqD,OAE3DxM,EAAS,CACPnG,KAAM,mCACNT,KAAMoT,IAJmD,2CAAb,uDAQjCC,GA3B6B,WAAyB,IAAxB9S,EAAuB,uDAAf,GAAIC,EAAW,uCAClE,OAAQA,EAAOC,MACb,IAAK,oCACH,OAAOD,EAAOR,KAChB,IAAK,mCACH,MAAM,GAAN,mBAAWO,GAAX,CAAkBC,EAAOR,OAC3B,QACE,OAAOO,ICLPZ,GAAU,0BAYD,GAVA,WAEb,OADgBC,IAAMC,IAAN,UAAaF,GAAb,YAAwBH,KAAiBH,KAC1CS,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ9B,GALA,SAACC,GAEd,OADgBL,IAAMM,KAAN,UAAcP,GAAd,YAAyBH,KAAiBS,EAAWZ,KACtDS,MAAK,SAACC,GAAD,OAAcA,EAASC,SCuB9BsT,GAjCmB,WAAyB,IAAxB/S,EAAuB,uDAAf,GAAIC,EAAW,uCACxD,OAAQA,EAAOC,MACb,IAAK,yBACH,OAAOD,EAAOR,KAChB,IAAK,wBACH,MAAM,GAAN,mBAAWO,GAAX,CAAkBC,EAAOR,OAC3B,QACE,OAAOO,ICqEEgT,GAjEc,SAAC,GAAgB,IAAdrL,EAAa,EAAbA,OACtBnG,EAAMC,cAAND,EAER,EAAwB+E,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMJ,EAAWC,cAEXI,EAAmB,kBAAMD,GAASD,IA4BxC,OACE,gCACE,cAACvB,EAAA,EAAD,CAAQtC,UAAU,YAAYI,QAAS2D,EAAkB7G,GAAG,SAA5D,SACG2B,EAAE,gCAEL,eAACmF,EAAA,EAAD,CACEH,KAAMA,EACNI,OAAQF,EACRG,SAAS,SACTC,UAAU,EAJZ,UAME,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMM,MAAP,UAAczF,EAAE,4BAElB,cAACmF,EAAA,EAAMO,KAAP,UACE,eAACuK,GAAA,EAAD,CAAMC,iBAAiB,SAAS7R,GAAG,qBAAqB8C,UAAU,OAAlE,UACE,cAACgP,GAAA,EAAD,CAAK3O,SAAS,SAASH,MAAOrB,EAAE,kBAAhC,SACE,cAAC,GAAD,CACEgR,wBA3C2B,SAAC1J,GACxCpC,IACA,IACEL,EAASsM,GAAiC,CAAE7J,sBAAqBnB,OAAQwF,OAAOxF,MAChF7B,EAAWtE,EAAE,mCACb,MAAO6D,GAEPmC,QAAQC,IAAIpC,GACZH,EAAS1D,EAAE,uCAsCL,cAACmQ,GAAA,EAAD,CAAK3O,SAAS,MAAMH,MAAOrB,EAAE,uBAA7B,SACE,cAAC,GAAD,CAA0B8Q,qBAlCH,SAACW,GAClCvM,IACA,IACEL,EDjBiC,SAACsB,EAAQoJ,GAAT,8CAA0B,WAAO1K,GAAP,eAAAiB,EAAA,sEAC5B4L,GAAiCnC,GADL,OACzDoC,EADyD,OAG/D9M,EAAS,CACPnG,KAAM,wBACNT,KAAM0T,IAGR9M,EAASsM,GAAiC,CACxChL,SACAmB,oBAAqBqK,EAAqBtT,MAVmB,2CAA1B,sDCiBxBuT,CAAwBjG,OAAOxF,GAASsL,IACjDnN,EAAWtE,EAAE,mCACb,MAAO6D,GAEPmC,QAAQC,IAAIpC,GACZH,EAAS1D,EAAE,mDCjBF6R,GAnBO,SAAC,GAAe,IAAb/R,EAAY,EAAZA,MACfE,EAAMC,cAAND,EACA3B,EAAOgQ,cAAPhQ,GAER,OACE,gCACE,6BACG2B,EAAE,mBAEJF,GACC,8BACE,cAAC,GAAD,CAAsBqG,OAAQ9H,MAGlC,cAAC,GAAD,CAAuByB,MAAOA,QCSrBgS,GA3BE,SAAC,GAAqB,IAAnBlT,EAAkB,EAAlBA,EAAGmT,EAAe,EAAfA,SACb/R,EAAMC,cAAND,EAER,EAAkC+E,mBAASnG,EAAEsD,QAA7C,mBAAO8P,EAAP,KAAkBC,EAAlB,KAcA,OACE,8BACE,uBAAMzP,SAdqB,SAACkE,GAC9BA,EAAMC,iBACNoL,EAAS,2BACJnT,GADG,IAENsD,OAAQ8P,MAUR,UACE,uBAAOxI,QAAQ,SAASrI,UAAU,SAAlC,SAAwDnB,EAAZgS,EAAc,2BAAgC,gCAC1F,uBAAO3T,GAAG,aAAa8C,UAAU,WAAWzC,KAAK,SAAS6C,QARrC,WACzB0Q,GAAcD,IAO6EvL,KAAK,KAAKgD,MAAmBzJ,EAAZgS,EAAc,2BAAgC,sCCuB/IE,GAzCS,SAAC,GAA4B,IAA1BtT,EAAyB,EAAzBA,EAAGuT,EAAsB,EAAtBA,gBACpBnS,EAAMC,cAAND,EAEF8B,EAASC,YAAU,CACvBC,cAAe,CACbX,MAAOzC,EAAEyC,OAEXc,iBAAkBC,IAAW,CAC3Bf,MAAOe,MACJC,IAAI,EAAGrC,EAAE,iBACTsC,IAAI,IAAKtC,EAAE,gBACXuC,SAASvC,EAAE,sBAEhBwC,SAAU,SAACC,GACT0P,EAAgB,2BACXvT,GADU,IAEbyC,MAAOoB,EAAOpB,YAKpB,OACE,cAACqB,EAAA,EAAD,CAAMC,YAAU,EAACH,SAAUV,EAAOc,aAAlC,SACE,eAACF,EAAA,EAAKI,MAAN,CAAYC,UAAU,cAAcsF,MAAO,CAAEC,MAAO,SAApD,UACE,cAAC5F,EAAA,EAAKO,QAAN,yBACE9B,UAAU,mBACVzC,KAAK,QACDoD,EAAOoB,cAAc,UAH3B,IAIEC,YAAarB,EAAOsB,OAAO/B,SAE7B,cAACqB,EAAA,EAAK8F,KAAN,CAAWrH,UAAU,aAArB,SACGnB,EAAE,0BAEL,cAAC0C,EAAA,EAAKO,QAAQI,SAAd,CAAuB3E,KAAK,UAAUsQ,KAAK,QAAQ,aAAW,gBAA9D,SACGlN,EAAOsB,OAAO/B,cCQV+Q,GAxCS,SAAC,GAA4B,IAA1BxT,EAAyB,EAAzBA,EAAGyT,EAAsB,EAAtBA,gBACpBrS,EAAMC,cAAND,EAEF8B,EAASC,YAAU,CACvBC,cAAe,CACbC,UAAWrD,EAAEqD,WAEfE,iBAAkBC,IAAW,CAC3BH,UAAWG,MACRC,IAAI,EAAGrC,EAAE,iBACTsC,IAAI,IAAMtC,EAAE,gBACZuC,SAASvC,EAAE,sBAEhBwC,SAAU,SAACC,GACT4P,EAAgB,2BACXzT,GADU,IAEbqD,UAAWQ,EAAOR,gBAKxB,OACE,eAACS,EAAA,EAAD,CAAMC,YAAU,EAACH,SAAUV,EAAOc,aAAlC,UACE,eAACF,EAAA,EAAKI,MAAN,CAAYC,UAAU,kBAAtB,UACE,cAACL,EAAA,EAAKO,QAAN,yBACE9B,UAAU,gBACVN,GAAG,YACCiB,EAAOoB,cAAc,cAH3B,IAIEC,YAAarB,EAAOsB,OAAOnB,UAC3BqB,KAAM,MAER,cAACZ,EAAA,EAAKO,QAAQI,SAAd,CAAuB3E,KAAK,UAAUsQ,KAAK,QAAQ,aAAW,gBAA9D,SACGlN,EAAOsB,OAAOnB,eAGnB,cAACwB,EAAA,EAAD,CAAQtC,UAAU,eAAezC,KAAK,SAAtC,SAAgDsB,EAAE,6BCIzCsS,GApCG,SAAC,GAAe,IAAbxS,EAAY,EAAZA,MACXE,EAAMC,cAAND,EACF6E,EAAWC,cACTzG,EAAOgQ,cAAPhQ,GACFO,EAAImB,aAAY,SAACvB,GAAD,OAAWA,EAAMqL,MAAM0I,MAAK,SAACzM,GAAD,OAAOA,EAAEzH,KAAOsN,OAAOtN,SAGnEmU,EAAmB,SAACC,GACxB,IACE5N,G9C8BqBgB,E8C9BD4M,E9C8BA,uCAAa,WAAO5N,GAAP,SAAAiB,EAAA,sEAC/BC,EAAoBF,GADW,OAErChB,EAAS,CACPnG,KAAM,cACNT,KAAM4H,IAJ6B,2CAAb,wD8C7BpBvB,EAAWtE,EAAE,sBACb,MAAO6D,GAEPmC,QAAQC,IAAIpC,GACZH,EAAS1D,EAAE,oB9CyBS,IAAC6F,G8CrBzB,OACE,gCACG/F,GAASlB,GACR,sBAAKP,GAAG,eAAR,UACE,sBAAK8C,UAAU,OAAf,UACE,cAAC,GAAD,CAAiBvC,EAAGA,EAAGuT,gBAAiBK,IACxC,cAAC,GAAD,CAAU5T,EAAGA,EAAGmT,SAAUS,OAE5B,cAAC,GAAD,CAAiB5T,EAAGA,EAAGyT,gBAAiBG,QAG1C1S,GAASlB,GACT,4BAAIA,EAAEyC,YCtCRzD,GAAU,qBAcD,GAPA,SAACM,GAEd,OADgBL,IAAMM,KAAN,UAAcP,GAAd,YAAyBH,KAAiBS,EAAWZ,KACtDS,MAAK,SAACC,GAAD,OAAcA,EAASC,SAK9B,GAZA,SAACI,GAEd,OADgBR,IAAMC,IAAN,UAAaF,GAAb,YAAwBS,EAAxB,YAA8BZ,KAAiBH,KAChDS,MAAK,SAACC,GAAD,OAAcA,EAASC,SAU9B,GAFA,SAACI,EAAIH,GAAL,OAAmBL,IAAMO,IAAN,UAAaR,GAAb,YAAwBS,EAAxB,YAA8BZ,KAAiBS,EAAWZ,MC8B7EoV,GA5Cc,WAAyB,IAAxBlU,EAAuB,uDAAf,GAAIC,EAAW,uCACnD,OAAQA,EAAOC,MACb,IAAK,oBACH,OAAOD,EAAOR,KAChB,IAAK,mBACH,MAAM,GAAN,mBAAWO,GAAX,CAAkBC,EAAOR,OAC3B,IAAK,sBACH,OAAOO,EAAMK,KAAI,SAACwM,GAAD,OAAQA,EAAEhN,KAAOI,EAAOR,KAAKI,GAC1CgN,EACA5M,EAAOR,QAGb,QACE,OAAOO,ICZPZ,GAAU,oBAYD,GAVA,WAEb,OADgBC,IAAMC,IAAN,UAAaF,GAAb,YAAwBH,KAAiBH,KAC1CS,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ9B,GALA,SAACC,GAEd,OADgBL,IAAMM,KAAN,UAAcP,GAAd,YAAyBH,KAAiBS,EAAWZ,KACtDS,MAAK,SAACC,GAAD,OAAcA,EAASC,SCTvCL,GAAU,sCAYD,GAVA,SAACuI,GAEd,OADgBtI,IAAMC,IAAN,UAAaF,GAAb,YAAwBuI,EAAxB,YAAkC1I,KAAiBH,KACpDS,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ9B,GALA,SAACC,GAEd,OADgBL,IAAMM,KAAN,UAAcP,GAAd,YAAyBH,KAAiBS,EAAWZ,KACtDS,MAAK,SAACC,GAAD,OAAcA,EAASC,SCShC0U,GAAqC,SAAC9M,GAAD,8CAAa,WAAOhB,GAAP,eAAAiB,EAAA,sEACf8M,GAAe/M,GADA,OACvDgN,EADuD,OAE7DhO,EAAS,CACPnG,KAAM,qCACNT,KAAM4U,IAJqD,2CAAb,uDAQnCC,GA3B+B,WAAyB,IAAxBtU,EAAuB,uDAAf,GAAIC,EAAW,uCACpE,OAAQA,EAAOC,MACb,IAAK,uCACH,OAAOD,EAAOR,KAChB,IAAK,qCACH,MAAM,GAAN,mBAAWO,GAAX,CAAkBC,EAAOR,OAC3B,QACE,OAAOO,ICiCEuU,GAvCa,WAAyB,IAAxBvU,EAAuB,uDAAf,GAAIC,EAAW,uCAClD,OAAQA,EAAOC,MACb,IAAK,mBACH,OAAOD,EAAOR,KAChB,IAAK,kBACH,MAAM,GAAN,mBAAWO,GAAX,CAAkBC,EAAOR,OAC3B,QACE,OAAOO,ICPPZ,GAAU,eAYD,GAVA,WAEb,OADgBC,IAAMC,IAAN,UAAaF,GAAb,YAAwBH,KAAiBH,KAC1CS,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ9B,GALA,SAACC,GAEd,OADgBL,IAAMM,KAAN,UAAcP,GAAd,YAAyBH,KAAiBS,EAAWZ,KACtDS,MAAK,SAACC,GAAD,OAAcA,EAASC,SCTvCL,GAAU,iCAYD,GAVA,SAACS,GAEd,OADgBR,IAAMC,IAAN,UAAaF,GAAb,YAAwBS,EAAxB,sBAAwCZ,KAAiBH,KAC1DS,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ9B,GALA,SAACC,GAEd,OADgBL,IAAMM,KAAN,UAAcP,GAAd,YAAyBH,KAAiBS,EAAWZ,KACtDS,MAAK,SAACC,GAAD,OAAcA,EAASC,SCShC+U,GAAgC,SAACnN,GAAD,8CAAa,WAAOhB,GAAP,eAAAiB,EAAA,sEAChC8M,GAAe/M,GADiB,OAClDoN,EADkD,OAExDpO,EAAS,CACPnG,KAAM,gCACNT,KAAMgV,IAJgD,2CAAb,uDAQ9BC,GA3B0B,WAAyB,IAAxB1U,EAAuB,uDAAf,GAAIC,EAAW,uCAC/D,OAAQA,EAAOC,MACb,IAAK,kCACH,OAAOD,EAAOR,KAChB,IAAK,gCACH,MAAM,GAAN,mBAAWO,GAAX,CAAkBC,EAAOR,OAC3B,QACE,OAAOO,ICmCE2U,GAzCQ,WAAyB,IAAxB3U,EAAuB,uDAAf,GAAIC,EAAW,uCAC7C,OAAQA,EAAOC,MACb,IAAK,cACH,OAAOD,EAAOR,KAChB,IAAK,aACH,MAAM,GAAN,mBAAWO,GAAX,CAAkBC,EAAOR,OAC3B,QACE,OAAOO,IC+DE4U,GAlDF,SAAC,GAAe,IAAbtT,EAAY,EAAZA,MACNE,EAAMC,cAAND,EACA3B,EAAOgQ,cAAPhQ,GACFwG,EAAWC,cACXlH,EAAO,iBAAaS,GAE1BsP,qBAAU,WTVoB,IAACxC,ESW7BtG,EpCTyB,uCAAM,WAAOA,GAAP,eAAAiB,EAAA,sEACR2F,KADQ,OAC3BoC,EAD2B,OAEjChJ,EAAS,CACPnG,KAAM,iBACNT,KAAM4P,GAAc,OAJW,2CAAN,uDoCUzBhJ,EAAS+F,GAAuBvM,IAChCwG,GTb6BsG,ESaH9M,ETbE,uCAAqB,WAAOwG,GAAP,eAAAiB,EAAA,sEACvBuN,GAA4BlI,GADL,OAC7CmI,EAD6C,OAEnDzO,EAAS,CACPnG,KAAM,oBACNT,KAAMqV,GAAiB,OAJ0B,2CAArB,wDSc5BzO,ELnB2B,uCAAM,WAAOA,GAAP,eAAAiB,EAAA,sEACAyN,KADA,OAC7BC,EAD6B,OAEnC3O,EAAS,CACPnG,KAAM,mBACNT,KAAMuV,GAAwB,OAJG,2CAAN,uDKoB3B3O,ENrB6C,SAACxG,GAAD,8CAAQ,WAAOwG,GAAP,eAAAiB,EAAA,sEACpB8M,GAAevU,GADK,OACjDmV,EADiD,OAEvD3O,EAAS,CACPnG,KAAM,uCACNT,KAAMuV,GAAwB,OAJuB,2CAAR,sDMqBpCC,CAAkCpV,IAC3CwG,EDrBsB,uCAAM,WAAOA,GAAP,eAAAiB,EAAA,sEACA8M,KADA,OACxBc,EADwB,OAE9B7O,EAAS,CACPnG,KAAM,cACNT,KAAMyV,GAAmB,OAJG,2CAAN,uDCsBtB7O,EFvBwC,SAACxG,GAAD,8CAAQ,WAAOwG,GAAP,eAAAiB,EAAA,sEACpB8M,GAAevU,GADK,OAC5CqV,EAD4C,OAElD7O,EAAS,CACPnG,KAAM,kCACNT,KAAMyV,GAAmB,OAJuB,2CAAR,sDEuB/BC,CAA6BtV,IACtCwG,EzBvB4B,uCAAM,WAAOA,GAAP,eAAAiB,EAAA,sEACAwK,KADA,OAC9BsD,EAD8B,OAEpC/O,EAAS,CACPnG,KAAM,oBACNT,KAAM2V,GAAyB,OAJG,2CAAN,uDyBwB5B/O,E3BzBqC,SAACxG,GAAD,8CAAQ,WAAOwG,GAAP,eAAAiB,EAAA,sEACF8J,GAAsCvR,GADpC,OACzCwV,EADyC,OAE/ChP,EAAS,CACPnG,KAAM,6BACNT,KAAM4V,GAAkC,OAJK,2CAAR,sD2ByB5BC,CAA0BzV,IACnCwG,EjBzBiC,uCAAM,WAAOA,GAAP,eAAAiB,EAAA,sEACA4L,KADA,OACnCqC,EADmC,OAEzClP,EAAS,CACPnG,KAAM,yBACNT,KAAM8V,GAA8B,OAJG,2CAAN,uDiB0BjClP,EnB3B0C,SAACxG,GAAD,8CAAQ,WAAOwG,GAAP,eAAAiB,EAAA,sEACFsL,GAA2C/S,GADzC,OAC9C2V,EAD8C,OAEpDnP,EAAS,CACPnG,KAAM,oCACNT,KAAM+V,GAAuC,OAJK,2CAAR,sDmB2BjCC,CAA+B5V,MACvC,IAMH,OACE,sBAAKA,GAAG,UAAR,UACE,eAAC6V,GAAA,EAAD,CAAa7L,MANQ,CACvB8L,aAAc,IAKZ,UACE,cAAC1Q,EAAA,EAAD,CAAQtC,UAAU,OAAON,GAAIC,IAAMC,GAAE,UAAKnD,EAAL,cAA0BwW,UAAQ,EAAvE,SAAyEpU,EAAE,mBAC3E,cAACyD,EAAA,EAAD,CAAQtC,UAAU,OAAON,GAAIC,IAAMC,GAAE,UAAKnD,EAAL,eAArC,SAAiEoC,EAAE,oBACnE,cAACyD,EAAA,EAAD,CAAQtC,UAAU,OAAON,GAAIC,IAAMC,GAAE,UAAKnD,EAAL,kBAArC,SAAoEoC,EAAE,0BAGxE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqU,KAAK,uBAAZ,SACE,cAAC,GAAD,CAAWvU,MAAOA,MAEpB,cAAC,IAAD,CAAOuU,KAAK,wBAAZ,SACE,cAAC,GAAD,CAAYvU,MAAOA,MAErB,cAAC,IAAD,CAAOuU,KAAK,2BAAZ,SACE,cAAC,GAAD,CAAevU,MAAOA,MAExB,cAAC,IAAD,CAAOuU,KAAK,aAAZ,SACE,cAAC,IAAD,CAAUtT,GAAE,UAAKnD,EAAL,yBC7BP0W,GA/BQC,sBAAW,SAACC,EAAOC,GACxC,MAAwB1P,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAmB,kBAAMD,GAASD,IAMxC,OAJA0P,8BAAoBD,GAAK,iBAAO,CAC9BvP,uBAIA,gCACE,cAACzB,EAAA,EAAD,CAAQtC,UAAU,iBAAiBI,QAAS2D,EAAkBuB,KAAK,KAAnE,SACG+N,EAAMG,cAET,eAACxP,EAAA,EAAD,CACEH,KAAMA,EACNI,OAAQF,EACRG,SAAS,SACTC,UAAU,EAJZ,UAME,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMM,MAAP,UAAc+O,EAAMI,eAEtB,cAACzP,EAAA,EAAMO,KAAP,UACG8O,EAAMK,oBCWFC,GAnCe,SAACN,GAE7B,MAA8BO,YAASP,GAAvC,mBAAcQ,GAAd,WAAoBC,EAApB,KACQjV,EAAMC,cAAND,EACR,OACE,mCACE,eAAC0C,EAAA,EAAKI,MAAN,CAAYC,UAAS,eAAUyR,EAAM7J,MAArC,UACE,cAACjI,EAAA,EAAKM,MAAN,UAAawR,EAAMhR,QACnB,cAAC,KAAD,yBACEnF,GAAImW,EAAM7J,KACVuK,UAAU,EACVxL,SAAU,SAACgG,GACT,IAAMjG,EAAQiG,EAAS1G,OAAS,EAAI0G,EAAS,GAAG/E,KAAO,GACvDsK,EAAOE,SAAS1L,IAElB2L,cAAe,SAACC,GAAD,OAAUJ,EAAOE,SAASE,IACzCC,OAAQ,kBAAML,EAAOM,YAAW,IAChCC,UAAU,EACVhG,SAAUgF,EAAM7J,KAChB8E,QAAS+E,EAAM/E,QACfV,YAAa/O,EAAE,SACfyV,WAAW,IACNT,EAAKU,SAAWV,EAAKnR,MACtB,CAAEV,WAAW,EAAMhC,UAAW,cAC9B,CAAEgC,WAAW,IACbqR,IAELQ,EAAKU,SAAWV,EAAKnR,MACpB,qBAAK1C,UAAU,mBAAf,SAAmC6T,EAAKnR,QACtC,WCkBG8R,GA3CY,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACpB5V,EAAMC,cAAND,EAEF6V,EAAiBzT,MAAa0T,MAAM,CACxCnL,KAAMvI,MACHC,IAAI,EAAGrC,EAAE,iBACTsC,IAAI,IAAKtC,EAAE,gBACXuC,SAASvC,EAAE,sBAGV+V,EAAehW,aAAY,SAACvB,GAAD,OAAWA,EAAMuX,gBAElD,OACE,cAAC,IAAD,CACE/T,cAAe,CACb2I,KAAM,IAERxI,iBAAkB0T,EAClBrT,SAAQ,uCAAE,WAAOC,GAAP,eAAAqD,EAAA,sDACFkQ,EAAQD,EAAapX,QAAO,SAACsX,GAAD,OAAOA,EAAEtL,OAASlI,EAAOkI,QAC3DiL,EACmB,IAAjBI,EAAMhN,OACFvG,EACAuT,EAAM,IALJ,2CAAF,sDALV,SAcG,gBAAGpT,EAAH,EAAGA,aAAH,OACC,8BACE,eAACF,EAAA,EAAD,CAAMF,SAAUI,EAAhB,UACE,cAAC,GAAD,CACE+H,KAAK,OACLnH,MAAOxD,EAAE,kBACTyP,QAASsG,IAEX,cAACtS,EAAA,EAAD,CAAQtC,UAAU,eAAezC,KAAK,SAAtC,SAAgDsB,EAAE,0CC3B/CkW,GAfA,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OACb,eAAC/N,EAAA,EAAD,WACE,cAACoG,GAAA,EAAUxN,OAAX,CACEG,UAAS,qBAAgBgV,EAAaC,YACtCvV,GAAIuH,IAAK7C,OACT/D,SAAU2U,EAAa9X,GAHzB,SAKG8X,EAAaxL,OAEhB,cAAC6D,GAAA,EAAUvN,SAAX,CAAoBO,SAAU2U,EAAa9X,GAA3C,SACE,cAAC+J,EAAA,EAAK1C,KAAN,UAAYyQ,EAAatO,oBCOhBwO,GAfI,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,0BAEd7G,EADc1P,aAAY,SAACvB,GAAD,OAAWA,EAAM+X,4BACrB5X,QAC1B,SAAC6X,GAAD,OAAOA,EAAEF,4BAA8BA,KAGzC,OACE,cAAC9H,GAAA,EAAD,UACGiB,EAAQ5Q,KAAI,SAAC2X,GAAD,OACX,cAAC,GAAD,CAAmBL,aAAcK,GAApBA,EAAEnY,UCwFRoY,GA5FO,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACf1W,EAAMC,cAAND,EAEF6V,EAAiBzT,MAAa0T,MAAM,CACxCnL,KAAMvI,MACHC,IAAI,EAAGrC,EAAE,iBACTsC,IAAI,IAAKtC,EAAE,gBACXuC,SAASvC,EAAE,oBACd6H,YAAazF,MACbgU,WAAYhU,MACTG,SAASvC,EAAE,oBACX2W,YAGClH,EAAU1P,aAAY,SAACvB,GAAD,OAAWA,EAAMiR,WAE7C,OACE,cAAC,IAAD,CACEzN,cAAe,CACb2I,KAAM,GACN9C,YAAa,GACbuO,WAAY,GAEdjU,iBAAkB0T,EAClBrT,SAAQ,uCAAE,WAAOC,GAAP,eAAAqD,EAAA,sDACF8Q,EAASnH,EAAQ9Q,QAAO,SAACsX,GAAD,OAAOA,EAAEtL,OAASlI,EAAOkI,QACvD+L,EACoB,IAAlBE,EAAO5N,OACHvG,EADJ,2BAESmU,EAAO,IAAOnU,IALjB,2CAAF,sDAPV,SAgBG,gBACCG,EADD,EACCA,aACAiU,EAFD,EAECA,aACAC,EAHD,EAGCA,cACArU,EAJD,EAICA,OAJD,OAMC,8BACE,eAACC,EAAA,EAAD,CAAMF,SAAUI,EAAhB,UACE,cAAC,GAAD,CACE+H,KAAK,OACLnH,MAAOxD,EAAE,aACTyP,QAASA,IAEX,eAAC/M,EAAA,EAAKI,MAAN,CAAYC,UAAU,cAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UAAahD,EAAE,iBACf,cAAC0C,EAAA,EAAKO,QAAN,CACEpC,GAAG,WACHyC,KAAM,EACNmG,MAAOhH,EAAOoF,YACd6B,SAAUmN,OAGd,eAACnU,EAAA,EAAKI,MAAN,CAAYC,UAAU,aAAtB,UACE,cAACL,EAAA,EAAKa,MAAN,CACEwT,gBAAc,EACdvT,MAAOxD,EAAE,YACT2K,KAAK,aACLjM,KAAK,QACLL,GAAG,iBACHoL,MAAO,EACPC,SAAU,kBAAMoN,EAAc,aAAc,MAE9C,cAACpU,EAAA,EAAKa,MAAN,CACEC,MAAOxD,EAAE,aACT2K,KAAK,aACLjM,KAAK,QACLL,GAAG,iBACHoL,MAAO,EACPuN,QAA+B,IAAtBvU,EAAO2T,WAChB1M,SAAU,kBAAMoN,EAAc,aAAc,MAE9C,cAACpU,EAAA,EAAKa,MAAN,CACEC,MAAOxD,EAAE,SACT2K,KAAK,aACLjM,KAAK,QACLL,GAAG,iBACHoL,MAAO,EACPuN,QAA+B,IAAtBvU,EAAO2T,WAChB1M,SAAU,kBAAMoN,EAAc,aAAc,SAGhD,cAACrT,EAAA,EAAD,CAAQtC,UAAU,eAAezC,KAAK,SAAtC,SAAgDsB,EAAE,0CCjD/CiX,GAnCK,SAAC,GAEd,IADLX,EACI,EADJA,0BAA2B3L,EACvB,EADuBA,KAAM7K,EAC7B,EAD6BA,MAEzBE,EAAMC,cAAND,EACF6E,EAAWC,cACXoS,EAAW/J,mBAajB,OACE,eAAC/E,EAAA,EAAD,WACE,cAACA,EAAA,EAAK7C,OAAN,UAAcoF,IACd,eAACvC,EAAA,EAAK1C,KAAN,WACE,cAAC,GAAD,CAAY4Q,0BAA2BA,IACtCxW,GACD,cAAC,GAAD,CAAgB6U,YAAa3U,EAAE,sBAAuB4U,WAAY5U,EAAE,aAAcyU,IAAKyC,EAAvF,SACE,cAAC,GAAD,CACER,UAlBc,SAACzD,GACvBiE,EAAStJ,QAAQ1I,mBACjB,IACEL,ERCsB,SAACyR,EAA2BzQ,GAA5B,8CAAwC,WAAOhB,GAAP,iBAAAiB,EAAA,8DAGvDzB,KAFLhG,EAAOwH,EAAPxH,IAD4D,gCAIxCuU,GAAe,CAAEjI,KAAM9E,EAAQ8E,OAJS,OAI1DsI,EAJ0D,OAMhEpO,EAAS,CACPnG,KAAM,aACNT,KAAMgV,IAGR5U,EAAK4U,EAAU5U,GAXiD,OAclEwG,EAASmO,GAA8B,CACrCsD,4BACAa,SAAU9Y,EACVwJ,YAAahC,EAAQgC,YACrBuO,WAAYvQ,EAAQuQ,cAlB4C,2CAAxC,sDQDbgB,CAAad,EAA2BrD,IACjD3O,EAAWtE,EAAE,0BACb,MAAO6D,GACPH,EAAS1D,EAAE,qCCAFqX,GApBS,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,eAAgBxX,EAAY,EAAZA,MAEnCyX,EADmBxX,aAAY,SAACvB,GAAD,OAAWA,EAAMgZ,iCACJ7Y,QAChD,SAAC6X,GAAD,OAAOA,EAAEc,iBAAmBA,KAG9B,OACE,qBAAK,cAAY,kBAAjB,SACGC,EAAyB1Y,KAAI,SAAC+P,GAAD,OAC5B,cAAC,GAAD,CAEE0H,0BAA2B1H,EAAE0H,0BAC7B3L,KAAMiE,EAAEjE,KACR7K,MAAOA,GAHF8O,EAAEvQ,UC0CFoZ,GAvCe,SAAC,GAAkB,IAAhB7I,EAAe,EAAfA,EAAG9O,EAAY,EAAZA,MAC1BE,EAAMC,cAAND,EACF6E,EAAWC,cACXoS,EAAW/J,mBAYjB,OACE,8BACE,eAAC/E,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,UACE,cAACkG,GAAA,EAAUxN,OAAX,CAAkBH,GAAIuH,IAAK7C,OAAQ/D,SAAUoN,EAAEvQ,GAA/C,SACE,qBAAK8C,UAAU,oDAAf,SACGyN,EAAEvN,UAGP,cAACmN,GAAA,EAAUvN,SAAX,CAAoBO,SAAUoN,EAAEvQ,GAAhC,SACE,eAAC+J,EAAA,EAAK1C,KAAN,WACI5F,GAEF,cAAC,GAAD,CAAgB6U,YAAa3U,EAAE,2BAA4B4U,WAAY5U,EAAE,kBAAmByU,IAAKyC,EAAjG,SACE,cAAC,GAAD,CAAoBtB,eAvBH,SAAC8B,GAC5BR,EAAStJ,QAAQ1I,mBACjB,IACEL,EdH2B,SAACyS,EAAgBI,GAAjB,8CAAiC,WAAO7S,GAAP,iBAAAiB,EAAA,8DAGrDzB,KAFLhG,EAAOqZ,EAAPrZ,IAD0D,gCAIjCkV,GAA2BmE,GAJM,OAIxDC,EAJwD,OAM9D9S,EAAS,CACPnG,KAAM,kBACNT,KAAM0Z,IAGRtZ,EAAKsZ,EAAetZ,GAX0C,OAchEwG,EAAS8N,GAAmC,CAC1C2E,iBACAM,cAAevZ,KAhB+C,2CAAjC,sDcGlBwZ,CAAkBjJ,EAAEvQ,GAAIqZ,IACjCpT,EAAWtE,EAAE,0BACb,MAAO6D,GACPH,EAAS1D,EAAE,8BAoBL,cAAC,GAAD,CAAiBsX,eAAgB1I,EAAEvQ,GAAIyB,MAAOA,eCe3CgY,GAvDoB,SAAC,GAI7B,IAHLzW,EAGI,EAHJA,MACAgU,EAEI,EAFJA,KACA0C,EACI,EADJA,6BAEQ/X,EAAMC,cAAND,EAEF8B,EAASC,YAAU,CACvBC,cAAe,CACbX,QACAgU,QAEFlT,iBAAkBC,IAAW,CAC3Bf,MAAOe,MACJC,IAAI,EAAGrC,EAAE,iBACTsC,IAAI,IAAKtC,EAAE,gBACXuC,SAASvC,EAAE,oBACdkJ,SAAU9G,MACViT,KAAMjT,QAERI,SAAU,SAACC,GACTsV,EAA6B,CAC3B1W,MAAOoB,EAAOpB,MACdgU,KAAM5S,EAAO4S,UAKnB,OACE,eAAC3S,EAAA,EAAD,CAAMC,YAAU,EAACH,SAAUV,EAAOc,aAAlC,UACE,eAACF,EAAA,EAAKI,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UAAahD,EAAE,WACf,cAAC0C,EAAA,EAAKO,QAAN,yBACEvE,KAAK,OACLqQ,YAAa/O,EAAE,UACX8B,EAAOoB,cAAc,UAH3B,IAIEC,YAAarB,EAAOsB,OAAO/B,SAE7B,cAACqB,EAAA,EAAKO,QAAQI,SAAd,CAAuB3E,KAAK,UAAUsQ,KAAK,QAAQ,aAAW,gBAA9D,SACGlN,EAAOsB,OAAO/B,WAGnB,eAACqB,EAAA,EAAKI,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UAAahD,EAAE,eACf,cAAC0C,EAAA,EAAKO,QAAN,aACEpC,GAAG,WACHyC,KAAM,IACFxB,EAAOoB,cAAc,aAG7B,cAACO,EAAA,EAAD,CAAQtC,UAAU,eAAezC,KAAK,SAAtC,SAAgDsB,EAAE,sBCDzCgY,GAhDgB,SAAC,GAAW,IAATpJ,EAAQ,EAARA,EACxB5O,EAAMC,cAAND,EACF6E,EAAWC,cACjB,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAmB,kBAAMD,GAASD,IAiBxC,OACE,gCACE,cAACvB,EAAA,EAAD,CAAQtC,UAAU,aAAasF,KAAK,KAAKlF,QAAS2D,EAAlD,SACGlF,EAAE,gBAEL,eAACmF,EAAA,EAAD,CACEH,KAAMA,EACNI,OAAQF,EACRG,SAAS,SACTC,UAAU,EAJZ,UAME,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMM,MAAP,UAAczF,EAAE,0BAElB,cAACmF,EAAA,EAAMO,KAAP,UACE,cAAC,GAAD,CACErE,MAAOuN,EAAEvN,MACTgU,KAAMzG,EAAEyG,KACR0C,6BAhC2B,SAACE,GACpC/S,IACA,IACEL,GpBkB6BxG,EoBlBDuQ,EAAEvQ,GpBkBG6Z,EoBlBN,YAAC,eACvBtJ,GADsB,IAEzBvN,MAAO4W,EAAc5W,MACrBgU,KAAM4C,EAAc5C,OpBeM,uCAA4B,WAAOxQ,GAAP,SAAAiB,EAAA,sEACtDuN,GAA4BhV,EAAI6Z,GADsB,OAE5DrT,EAAS,CACPnG,KAAM,sBACNT,KAAMia,IAJoD,2CAA5B,wDoBb5B5T,EAAWtE,EAAE,8BACb,MAAO6D,GACPH,EAAS1D,EAAE,4BpBWiB,IAAC3B,EAAI6Z,cqBdxBC,GApBU,SAAC,GAAD,IAAGvJ,EAAH,EAAGA,EAAG9O,EAAN,EAAMA,MAAN,OACvB,8BACE,eAACsI,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,UACE,cAACkG,GAAA,EAAUxN,OAAX,CAAkBH,GAAIuH,IAAK7C,OAAQ/D,SAAUoN,EAAEvQ,GAA/C,SACE,sBAAK8C,UAAU,oDAAf,UACGyN,EAAEvN,MACFvB,GACC,qBAAKqB,UAAU,cAAf,SACE,cAAC,GAAD,CAAwByN,EAAGA,WAKnC,cAACJ,GAAA,EAAUvN,SAAX,CAAoBO,SAAUoN,EAAEvQ,GAAhC,SACE,cAAC+J,EAAA,EAAK1C,KAAN,UAAYkJ,EAAEyG,eCMP+C,GAlBM,SAAC,GAAkB,IAAhBxJ,EAAe,EAAfA,EAAG9O,EAAY,EAAZA,MACzB,MAAe,SAAX8O,EAAElQ,KAEF,cAAC,GAAD,CACEkQ,EAAGA,EACH9O,MAAOA,IAGI,cAAX8O,EAAElQ,KAEJ,cAAC,GAAD,CACEkQ,EAAGA,EACH9O,MAAOA,SAJX,GCOWuY,GAfU,SAAC,GAAgC,IAA9BlN,EAA6B,EAA7BA,gBAAiBrL,EAAY,EAAZA,MAErCwY,EADoBvY,aAAY,SAACvB,GAAD,OAAWA,EAAM+Z,iBAEpD5Z,QAAO,SAAC0M,GAAD,OAAOA,EAAEF,kBAAoBQ,OAAOR,MAC3CsC,MAAK,SAAC3H,EAAG4H,GAAJ,OAAU5H,EAAEoD,SAAWwE,EAAExE,YAEjC,OACE,cAACsF,GAAA,EAAD,UACG8J,EAAiBzZ,KAAI,SAAC+P,GAAD,OACpB,cAAC,GAAD,CAAyBA,EAAGA,EAAG9O,MAAOA,GAAnB8O,EAAEvQ,UCwDdma,GA9Da,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,sBACrBzY,EAAMC,cAAND,EAEF8B,EAASC,YAAU,CACvBC,cAAe,CACbkH,SAAU,GACV7H,MAAO,GACPgU,KAAM,IAERlT,iBAAkBC,IAAW,CAC3Bf,MAAOe,MACJC,IAAI,EAAGrC,EAAE,iBACTsC,IAAI,IAAKtC,EAAE,gBACXuC,SAASvC,EAAE,oBACdkJ,SAAU9G,MACViT,KAAMjT,QAERI,SAAU,SAACC,GACTgW,EAAsB,CACpBvP,SAAUyC,OAAOlJ,EAAOyG,UACxBxK,KAAM,OACN2C,MAAOoB,EAAOpB,MACdgU,KAAM5S,EAAO4S,UAKnB,OACE,eAAC3S,EAAA,EAAD,CAAMC,YAAU,EAACH,SAAUV,EAAOc,aAAlC,UACE,eAACF,EAAA,EAAKI,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UAAahD,EAAE,WACf,cAAC0C,EAAA,EAAKO,QAAN,yBACEvE,KAAK,OACLqQ,YAAa/O,EAAE,UACX8B,EAAOoB,cAAc,UAH3B,IAIEC,YAAarB,EAAOsB,OAAO/B,SAE7B,cAACqB,EAAA,EAAKO,QAAQI,SAAd,CAAuB3E,KAAK,UAAUsQ,KAAK,QAAQ,aAAW,gBAA9D,SACGlN,EAAOsB,OAAO/B,WAGnB,eAACqB,EAAA,EAAKI,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UAAahD,EAAE,0BACf,cAAC0C,EAAA,EAAKO,QAAN,aACEvE,KAAK,OACLqQ,YAAa/O,EAAE,eACX8B,EAAOoB,cAAc,iBAG7B,eAACR,EAAA,EAAKI,MAAN,CAAY3B,UAAU,OAAO4B,UAAU,OAAvC,UACE,cAACL,EAAA,EAAKM,MAAN,UAAahD,EAAE,eACf,cAAC0C,EAAA,EAAKO,QAAN,aACEpC,GAAG,WACHyC,KAAM,IACFxB,EAAOoB,cAAc,aAG7B,cAACO,EAAA,EAAD,CAAQtC,UAAU,eAAezC,KAAK,SAAtC,SAAgDsB,EAAE,sBCAzC0Y,GA1DkB,SAAC,GAA+B,IAA7BD,EAA4B,EAA5BA,sBAC1BzY,EAAMC,cAAND,EAEF8B,EAASC,YAAU,CACvBC,cAAe,CACbkH,SAAU,GACV7H,MAAO,IAETc,iBAAkBC,IAAW,CAC3Bf,MAAOe,MACJC,IAAI,EAAGrC,EAAE,iBACTsC,IAAI,IAAKtC,EAAE,gBACXuC,SAASvC,EAAE,oBACdkJ,SAAU9G,MACPG,SAASvC,EAAE,oBACX2Y,SAAS3Y,EAAE,2BACX2W,QAAQ3W,EAAE,6BAEfwC,SAAU,SAACC,GACTgW,EAAsB,CACpBvP,SAAUyC,OAAOlJ,EAAOyG,UACxBxK,KAAM,YACN2C,MAAOoB,EAAOpB,WAKpB,OACE,eAACqB,EAAA,EAAD,CAAMC,YAAU,EAACH,SAAUV,EAAOc,aAAlC,UACE,eAACF,EAAA,EAAKI,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UAAahD,EAAE,WACf,cAAC0C,EAAA,EAAKO,QAAN,yBACEvE,KAAK,OACLqQ,YAAa/O,EAAE,UACX8B,EAAOoB,cAAc,UAH3B,IAIEC,YAAarB,EAAOsB,OAAO/B,SAE7B,cAACqB,EAAA,EAAKO,QAAQI,SAAd,CAAuB3E,KAAK,UAAUsQ,KAAK,QAAQ,aAAW,gBAA9D,SACGlN,EAAOsB,OAAO/B,WAGnB,eAACqB,EAAA,EAAKI,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UAAahD,EAAE,0BACf,cAAC0C,EAAA,EAAKO,QAAN,yBACEvE,KAAK,OACLqQ,YAAa/O,EAAE,eACX8B,EAAOoB,cAAc,aAH3B,IAIEC,YAAarB,EAAOsB,OAAO8F,YAE7B,cAACxG,EAAA,EAAKO,QAAQI,SAAd,CAAuB3E,KAAK,UAAUsQ,KAAK,QAAQ,aAAW,gBAA9D,SACGlN,EAAOsB,OAAO8F,cAGnB,cAACzF,EAAA,EAAD,CAAQtC,UAAU,eAAezC,KAAK,SAAtC,SAAgDsB,EAAE,sBCOzC4Y,GAnDG,SAAC,GAAe,IAAb9Y,EAAY,EAAZA,MACXE,EAAMC,cAAND,EACA3B,EAAOgQ,cAAPhQ,GACFwG,EAAWC,cACjB,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMiS,EAAW/J,mBAEX0L,EAAkB,CAAEC,QAAS9T,EAAO,GAAK,QAMzCyT,EAAwB,SAACM,GAC7B7B,EAAStJ,QAAQ1I,mBACjB,IACEL,G1BN0BqT,E0BMDa,E1BNqB5N,E0BMJQ,OAAOtN,G1BNxB,uCAAyC,WAAOwG,GAAP,eAAAiB,EAAA,sEACtCuN,GAAA,2BAC3B6E,GAD2B,IAE9B/M,qBAHoE,OAChE6N,EADgE,OAKtEnU,EAAS,CACPnG,KAAM,mBACNT,KAAM+a,IAP8D,2CAAzC,wD0BOzB1U,EAAWtE,EAAE,8BACb,MAAO6D,GACPH,EAAS1D,EAAE,4B1BTc,IAACkY,EAAoB/M,G0BalD,OAEE,sBAAK9M,GAAG,UAAR,UACE,6BACG2B,EAAE,mBAEJF,GACC,gCACE,cAAC2D,EAAA,EAAD,CAAQtC,UAAU,YAAYI,QAtBb,WACvB0D,GAASD,IAqBsD3G,GAAG,SAA5D,SACG2B,EAAE,2BAEL,sBAAKmB,UAAU,OAAOkH,MAAOwQ,EAA7B,UACE,cAAC,GAAD,CAAgBlE,YAAa3U,EAAE,oBAAqB4U,WAAY5U,EAAE,uBAAwByU,IAAKyC,EAA/F,SACE,cAAC,GAAD,CAAqBuB,sBAAuBA,MAE9C,cAAChV,EAAA,EAAD,CAAQtC,UAAU,qBAAqBsF,KAAK,KAA5C,SAAkDzG,EAAE,0BACpD,cAAC,GAAD,CAAgB2U,YAAa3U,EAAE,yBAA0B4U,WAAY5U,EAAE,4BAA6ByU,IAAKyC,EAAzG,SACE,cAAC,GAAD,CAA0BuB,sBAAuBA,MAEnD,cAAChV,EAAA,EAAD,CAAQtC,UAAU,sBAAsBsF,KAAK,KAA7C,SAAmDzG,EAAE,gCAEvD,cAAC,GAAD,CAAkBmL,gBAAiB9M,EAAIyB,MAAOA,WC/CzCmZ,GAVE,WACf,IAAQjZ,EAAMC,cAAND,EAER,OACE,qBAAK3B,GAAG,UAAR,SACE,6BAAK2B,EAAE,iBCqCEkZ,GA9BC,WACd,IAAMpZ,EAAQC,aAAY,SAACvB,GAAD,OAAWA,EAAMsB,SAE3C,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuU,KAAK,aAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACGvU,EAAQ,cAAC,GAAD,IAAY,cAAC,IAAD,CAAUiB,GAAG,QAEpC,cAAC,IAAD,CAAOsT,KAAK,2BAAZ,SACE,cAAC,GAAD,CAAWvU,MAAOA,MAEpB,cAAC,IAAD,CAAOuU,KAAK,aAAZ,SACE,cAAC,GAAD,CAAMvU,MAAOA,MAEf,cAAC,IAAD,CAAOuU,KAAK,SAAZ,SACGvU,EAAQ,cAAC,GAAD,IAAe,cAAC,IAAD,CAAUiB,GAAG,QAEvC,cAAC,IAAD,CAAOsT,KAAK,IAAZ,SACE,cAAC,GAAD,CAAWvU,MAAOA,UCRVqZ,GAlBJ,WACV,IAAMtU,EAAWC,cAOjB,OAJAsU,IAAMzL,WAAU,WACd9I,E7ECkC,uCAAM,WAAOA,GAAP,mBAAAiB,EAAA,sEAEbC,IAFa,gBAElC9H,EAFkC,EAElCA,KAAMob,EAF4B,EAE5BA,KACdxU,EAAS,CACPnG,KAAM,mBACNT,SFvBqBqb,EE0BdD,EAAKhc,MFzBdA,EAAK,iBAAaic,GE0BlBzU,EAAS,CACPnG,KAAM,kBACNT,KAAMob,EAAKvZ,QAX6B,iCFlBpB,IAACwZ,IEkBmB,OAAN,yD6EAjC,IAGD,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,Q,iDClBSC,GATK,WAA4B,IAA3B/a,EAA0B,wDAAXC,EAAW,uCAC7C,MACO,oBADCA,EAAOC,KAEJD,EAAOR,KAEPO,GCePgb,GAAgB,CACpBC,IAAK,OACLC,Q,QAAAA,GAGIC,GAAUC,2BAAgB,CAC9B/P,MAAOtL,EACPuB,MAAOyZ,GACP1L,WAAYzC,GACZN,oBAAqB+O,GACrBtB,cAAe7F,GACfqD,aAAchD,GACdyE,8BAA+B1E,GAC/BrD,QAAS0D,GACToD,yBAA0BrD,GAC1B5D,cAAeS,GACfpB,uBAAwBmB,GACxBmB,mBAAoBM,GACpBX,4BAA6BU,KAGzBwI,GAAmBC,aAAeP,GAAeG,IC3BnCK,QACW,cAA7B5Z,OAAOC,SAAS4Z,UACoB,UAA7B7Z,OAAOC,SAAS4Z,UAEhB7Z,OAAOC,SAAS4Z,SAASC,MAC1B,2DCPR,OF+Be,WACb,IAAMC,EAAQC,uBACZN,GACAO,+BACEC,2BAAgBC,QAIpB,MAAO,CAAEJ,QAAOK,UADEC,aAAaN,IEtCJC,GAArBD,GAAR,GAAQA,MAAOK,GAAf,GAAeA,UAEfE,IAASC,OACP,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAaS,QAAS,KAAMJ,UAAWA,GAAvC,SACE,cAAC,GAAD,QAGJK,SAASC,eAAe,SDmGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBld,MAAK,SAACmd,GACLA,EAAaC,kB","file":"static/js/main.8861f1b9.chunk.js","sourcesContent":["let token = null;\r\n\r\nexport const setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nexport const getConfig = () => ({ headers: { Authorization: token } });\r\n\r\nexport const getLanguage = () => (localStorage.getItem('i18nextLng') || 'fi');\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../utils/Helper';\r\n\r\nconst baseUrl = '/api/cases';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (newObject) => axios.put(`${baseUrl}/${newObject.id}/${getLanguage()}`, newObject, getConfig());\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove,\r\n};\r\n","import casesService from './casesService';\r\nimport { setToken } from '../../utils/Helper';\r\n\r\nconst casesReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'INITIALIZE_CASES':\r\n      return action.data;\r\n    case 'NEW_CASE':\r\n      return [...state, action.data];\r\n    case 'REMOVE_CASE':\r\n      return state.filter((c) => c.id !== action.data);\r\n    case 'UPDATE_CASE':\r\n      return state.map((c) => (c.id !== action.data.id\r\n        ? c\r\n        : action.data));\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializeCasesAndUser = () => async (dispatch) => {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const { data, user } = await casesService.getAll();\r\n  dispatch({\r\n    type: 'INITIALIZE_CASES',\r\n    data,\r\n  });\r\n\r\n  setToken(user.token);\r\n  dispatch({\r\n    type: 'INITIALIZE_USER',\r\n    data: user.admin,\r\n  });\r\n};\r\n\r\nexport const createCase = (content) => async (dispatch) => {\r\n  const newCase = await casesService.create(content);\r\n  dispatch({\r\n    type: 'NEW_CASE',\r\n    data: newCase,\r\n  });\r\n};\r\n\r\nexport const removeCase = (id) => async (dispatch) => {\r\n  await casesService.remove(id);\r\n  dispatch({\r\n    type: 'REMOVE_CASE',\r\n    data: id,\r\n  });\r\n};\r\n\r\nexport const updateCase = (content) => async (dispatch) => {\r\n  await casesService.update(content);\r\n  dispatch({\r\n    type: 'UPDATE_CASE',\r\n    data: content,\r\n  });\r\n};\r\n\r\nexport default casesReducer;\r\n","/* eslint-disable linebreak-style */\r\n/* istanbul ignore file */\r\n/* eslint-disable linebreak-style */\r\nimport i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n// eslint-disable-next-line import/no-unresolved\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\ni18n.use(LanguageDetector).init();\r\n\r\ni18n.use(initReactI18next).init({\r\n  fallbackLng: 'fi',\r\n\r\n  // eslint-disable-next-line no-undef\r\n  lng: localStorage.getItem('i18nextLng') || 'fi',\r\n  resources: {\r\n    fi: {\r\n      // eslint-disable-next-line global-require\r\n      translations: require('./locales/fi/translations.json'),\r\n    },\r\n    en: {\r\n      // eslint-disable-next-line global-require\r\n      translations: require('./locales/en/translations.json'),\r\n    },\r\n  },\r\n  ns: ['translations'],\r\n  defaultNS: 'translations',\r\n});\r\n\r\ni18n.languages = ['fi', 'en'];\r\n\r\nexport default i18n;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavLink,\r\n  NavDropdown,\r\n} from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// Import translations\r\nimport { useTranslation } from 'react-i18next';\r\nimport i18n from '../../i18n/config';\r\n\r\nconst Navigationbar = () => {\r\n  const admin = useSelector((state) => state.admin);\r\n  const { t } = useTranslation();\r\n\r\n  /* istanbul ignore next */\r\n  const changeLanguage = (language) => {\r\n    i18n.changeLanguage(language);\r\n    window.location.reload(false);\r\n  };\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\" sticky=\"top\">\r\n      <Navbar.Brand as={Link} to=\"/\">{t('nameOfTheGame')}</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <NavDropdown title={t('selectLanguage')} id=\"selectLanguage\" className=\"navItems\">\r\n            <NavDropdown.Item onClick={() => changeLanguage('fi')} eventKey=\"fi\">{t('languageFinnish')}</NavDropdown.Item>\r\n            <NavDropdown.Item onClick={() => changeLanguage('en')} eventKey=\"en\">{t('languageEnglish')}</NavDropdown.Item>\r\n          </NavDropdown>\r\n          { admin && (\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/users\" className=\"navItems\">{t('userInformation')}</NavLink>\r\n          </Nav.Item>\r\n          )}\r\n          { admin && (\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/files\" className=\"navItems\">{t('fileBank')}</NavLink>\r\n          </Nav.Item>\r\n          )}\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/howtoplay\" className=\"navItems\">{t('howToPlay')}</NavLink>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/profile\" className=\"navItems\">{t('userProfile')}</NavLink>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <NavLink href=\"https://taudinpurkauspeli-taudinpurkauspeli2021.apps.ocp-prod-0.k8s.it.helsinki.fi/Shibboleth.sso/Logout\" className=\"navItems\">{t('logOut')}</NavLink>\r\n          </Nav.Item>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigationbar;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\n\r\nconst Sidebar = () => (\r\n  <div id=\"sidebar\" />\r\n);\r\n\r\nexport default Sidebar;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst newCaseForm = ({ addCase }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: '',\r\n      anamnesis: '',\r\n      hidden: false,\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: Yup.string()\r\n        .min(2, t('warningShort'))\r\n        .max(999, t('warningLong'))\r\n        .required(t('warningRequired')),\r\n      anamnesis: Yup.string(),\r\n      hidden: Yup.bool(),\r\n    }),\r\n    onSubmit: (values) => {\r\n      addCase({\r\n        title: values.title,\r\n        anamnesis: values.anamnesis,\r\n        hidden: values.hidden,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit} spellCheck=\"false\">\r\n      <Form.Group controlId=\"title\">\r\n        <Form.Label>{t('caseTitle')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          {...formik.getFieldProps('title')}\r\n          isInvalid={!!formik.errors.title}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {formik.errors.title}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"anamnesis\">\r\n        <Form.Label>{t('caseAnamnesis')}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={3}\r\n          {...formik.getFieldProps('anamnesis')}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"hidden\">\r\n        <Form.Check\r\n          label={t('hideCase')}\r\n          {...formik.getFieldProps('hidden')}\r\n        />\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewCase')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default newCaseForm;\r\n","/* istanbul ignore file */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable no-undef */\r\nimport React from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst MessageBanner = () => (\r\n  <ToastContainer\r\n    position=\"top-center\"\r\n    autoClose={3000}\r\n    hideProgressBar\r\n    newestOnTop={false}\r\n    closeOnClick\r\n    rtl={false}\r\n    pauseOnFocusLoss={false}\r\n    draggable={false}\r\n    pauseOnHover\r\n  />\r\n);\r\n\r\nexport const setError = (message) => {\r\n  toast.error(message, {\r\n    position: 'top-center',\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: false,\r\n    draggable: false,\r\n    progress: undefined,\r\n  });\r\n};\r\n\r\nexport const setSuccess = (message) => {\r\n  toast.success(message, {\r\n    position: 'top-center',\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: false,\r\n    draggable: false,\r\n    progress: undefined,\r\n  });\r\n};\r\n\r\nexport default MessageBanner;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Button, Modal,\r\n} from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport NewCaseForm from './NewCaseForm';\r\nimport { setSuccess, setError } from '../../../utils/MessageBanner';\r\nimport { createCase } from '../casesReducer';\r\n\r\nconst NewCase = () => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const toggleVisibility = () => setShow(!show);\r\n\r\n  /* istanbul ignore next */\r\n  const handleCaseAdd = (newCase) => {\r\n    toggleVisibility();\r\n    try {\r\n      dispatch(createCase(newCase));\r\n      setSuccess(t('caseAddSuccess'));\r\n    } catch (error) {\r\n      // eslint-disable-next-line no-console\r\n      console.log(error);\r\n      setError(t('caseAddError'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"addButton\" onClick={toggleVisibility} id=\"addNew\">\r\n        {t('buttonNewCase')}\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        onHide={toggleVisibility}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{t('addCase')}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <NewCaseForm addCase={handleCaseAdd} />\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewCase;\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/differentialsUnderCases';\r\n\r\nconst getAll = (diffGroupCaseId) => {\r\n  const request = axios.get(`${baseUrl}/${diffGroupCaseId}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}/${getLanguage()}`, newObject, getConfig());\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../utils/Helper';\r\n\r\nconst baseUrl = '/api/proceduresUnderCases';\r\n\r\nconst getAll = (caseId) => {\r\n  const request = axios.get(`${baseUrl}/${caseId}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject, getConfig());\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/differentialGroupsUnderCases';\r\n\r\nconst getAll = (caseId) => {\r\n  const request = axios.get(`${baseUrl}/${caseId}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n};\r\n","/* eslint-disable linebreak-style */\r\n\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport { Button } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport caseService from '../casesService';\r\nimport ducService from '../../differential/services/differentialsUnderCases';\r\nimport pucService from '../../procedure/proceduresUnderCaseService';\r\n\r\n// Caseen liitetyt diffiryhmät\r\nimport ducGroupService from '../../differential/services/differentialGroupsUnderCases';\r\n\r\nconst copyCase = ({\r\n  caseToBeCopied, createProcedures,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const oldCaseId = caseToBeCopied.id;\r\n  // eslint-disable-next-line no-unused-vars\r\n  let newCopyId = 0;\r\n\r\n  /* istanbul ignore next */\r\n  const copyTheDamnThing = (newCaseId, result) => {\r\n    let duckling = {};\r\n    result.forEach((element) => {\r\n      duckling = {\r\n        caseId: newCaseId,\r\n        differentialGroupId: element.id,\r\n      };\r\n      ducGroupService.create(duckling).then((res) => {\r\n        ducService.getAll(element.diffGroupCaseId)\r\n          .then((result2) => {\r\n            result2.forEach((element2) => {\r\n              const did = element2.id;\r\n              const plaa = {\r\n                diffGroupCaseId: res.id,\r\n                differentialId: did,\r\n                description: element2.description,\r\n              };\r\n              ducService.create(plaa);\r\n            });\r\n          });\r\n      });\r\n    });\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleCopy = (event) => {\r\n    event.preventDefault();\r\n    const caseObject = ({\r\n      title: caseToBeCopied.title,\r\n      anamnesis: caseToBeCopied.anamnesis,\r\n      hidden: caseToBeCopied.hidden,\r\n    });\r\n    caseService.create(caseObject)\r\n      .then((copy) => {\r\n        newCopyId = copy.id;\r\n      })\r\n      .then(() => {\r\n        ducGroupService.getAll(oldCaseId)\r\n          .then((res) => {\r\n            copyTheDamnThing(newCopyId, res);\r\n          });\r\n      })\r\n      .then(() => {\r\n        pucService.getAll(oldCaseId)\r\n          .then((res) => {\r\n            createProcedures(newCopyId, res);\r\n          });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Button variant=\"warning\" size=\"sm\" onClick={handleCopy}>{t('copy')}</Button>\r\n  );\r\n};\r\n\r\nexport default copyCase;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport { Button } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst removeCase = ({ caseToBeRemoved, deleteCase }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const handleDelete = (event) => {\r\n    event.preventDefault();\r\n    deleteCase(caseToBeRemoved.id);\r\n  };\r\n\r\n  return (\r\n    <Button className=\"removeButton\" size=\"sm\" variant=\"danger\" onClick={handleDelete}>{t('buttonRemove')}</Button>\r\n  );\r\n};\r\n\r\nexport default removeCase;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Card,\r\n  Button,\r\n  ProgressBar,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport CopyCase from './CopyCase';\r\nimport RemoveCase from './RemoveCase';\r\nimport { setError, setSuccess } from '../../../utils/MessageBanner';\r\nimport ducService from '../../differential/services/differentialsUnderCases';\r\nimport pucService from '../../procedure/proceduresUnderCaseService';\r\nimport { removeCase } from '../casesReducer';\r\n\r\nconst CaseCard = ({ c, admin }) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n\r\n  /* istanbul ignore next */\r\n  const createDifferentials = (copyId, result) => {\r\n    for (let i = 0; i < result.length; i += 1) {\r\n      const { id, description } = result[i];\r\n      const object = {\r\n        caseId: copyId,\r\n        differentialId: id,\r\n        description,\r\n      };\r\n      ducService.create(object);\r\n    }\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const createProcedures = (copyId, result) => {\r\n    for (let i = 0; i < result.length; i += 1) {\r\n      const { procedureId, priority } = result[i];\r\n      const object = {\r\n        caseId: copyId,\r\n        procedureId,\r\n        priority,\r\n      };\r\n      pucService.create(object);\r\n    }\r\n  };\r\n\r\n  /* istanbull ignore next */\r\n  const handleCaseRemove = () => {\r\n    // eslint-disable-next-line no-alert\r\n    const confirmBox = window.confirm(t('deleteCaseConfirmation'));\r\n    if (confirmBox === true) {\r\n      try {\r\n        dispatch(removeCase(c.id));\r\n        setSuccess(t('deleteCaseSuccess'));\r\n      } catch (error) {\r\n        setError(t('deleteCaseError'));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card as={Link} to={`/cases/${c.id}`} style={{ width: '20rem', cursor: 'pointer' }} className=\"caseCard\">\r\n        <Card.Body>\r\n          <Card.Title>{c.title}</Card.Title>\r\n          <Card.Text>{c.anamnesis}</Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <ProgressBar className=\"progsbar\" variant=\"success\" now={25} label={`${25}%`} />\r\n        </Card.Footer>\r\n      </Card>\r\n\r\n      { admin && (\r\n        <div className=\"cardButtons\">\r\n          <Button className=\"editButton\" as={Link} to={`/cases/${c.id}`} size=\"sm\">{t('buttonEdit')}</Button>\r\n          <CopyCase\r\n            caseToBeCopied={c}\r\n            createDifferentials={createDifferentials}\r\n            createProcedures={createProcedures}\r\n          />\r\n          <RemoveCase caseToBeRemoved={c} deleteCase={handleCaseRemove} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CaseCard;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Search = ({ newSearch, searchCases }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"search\">\r\n        {t('searchByTitle')}\r\n        &nbsp;\r\n        <input\r\n          id=\"search\"\r\n          value={newSearch}\r\n          onChange={searchCases}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable array-callback-return */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Col,\r\n  Row,\r\n} from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport NewCase from '../case/components/NewCase';\r\nimport CaseCard from '../case/components/CaseCard';\r\nimport Search from './Search';\r\n\r\nconst Frontpage = ({ admin }) => {\r\n  const { t } = useTranslation();\r\n  const [newSearch, setNewSearch] = useState('');\r\n  const cases = useSelector((state) => state.cases);\r\n\r\n  const searchCases = (event) => {\r\n    setNewSearch(event.target.value);\r\n  };\r\n\r\n  const casesToShow = !newSearch\r\n    ? cases : cases.filter((c) => c.title.toLowerCase().includes(newSearch.toLowerCase()));\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('frontpageTitle')}</h2>\r\n      <p>{t('frontpageText')}</p>\r\n      <Search newSearch={newSearch} searchCases={searchCases} />\r\n      <br />\r\n      {admin && (\r\n        <div>\r\n          <NewCase />\r\n          <br />\r\n          <h3>{t('caseHidden')}</h3>\r\n          <hr />\r\n        </div>\r\n      )}\r\n      <Row xs=\"auto\" md=\"auto\" className=\"g-4\">\r\n        {admin && (\r\n          casesToShow.filter((c) => c.hidden).map((c) => (\r\n            <Col key={c.id}>\r\n              <CaseCard c={c} admin={admin} />\r\n            </Col>\r\n          ))\r\n        )}\r\n      </Row>\r\n      <br />\r\n      <h3>{t('casePlayable')}</h3>\r\n      <hr />\r\n      <Row xs=\"auto\" md=\"auto\" className=\"g-4\">\r\n        {casesToShow.filter((c) => !c.hidden).map((c) => (\r\n          <Col key={c.id}>\r\n            <CaseCard c={c} admin={admin} />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default Frontpage;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst HowToPlay = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('howToPlay')}</h2>\r\n      <p>{t('gameInstructions')}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HowToPlay;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Profile = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('userProfile')}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Users = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('userInformation')}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst newProcedureForm = ({ addProcedure }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: Yup.string()\r\n        .min(2, t('warningShort'))\r\n        .max(999, t('warningLong'))\r\n        .required(t('warningRequired')),\r\n    }),\r\n    onSubmit: (values) => {\r\n      addProcedure({\r\n        name: values.title,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"title\">\r\n        <Form.Label>{t('procedureTitle')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          {...formik.getFieldProps('title')}\r\n          isInvalid={!!formik.errors.title}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {formik.errors.title}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Button type=\"submit\" className=\"submitButton\">{t('buttonSubmitNewProcedure')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default newProcedureForm;\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../utils/Helper';\r\n\r\nconst baseUrl = '/api/procedures';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}/${getLanguage()}`, newObject, getConfig());\r\n\r\nexport default {\r\n  create,\r\n  getAll,\r\n  update,\r\n};\r\n","import proceduresUnderCasesService from './proceduresUnderCaseService';\r\n\r\nconst proceduresReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_PROCEDURES_UNDER_CASE':\r\n      return action.data;\r\n    case 'NEW_PROCEDURE_UNDER_CASE':\r\n      return [...state, action.data];\r\n    case 'UPDATE_PROCEDURE':\r\n      return state.map((p) => (p.id !== action.data.id\r\n        ? p\r\n        : action.data));\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getProceduresUnderCase = (caseId) => async (dispatch) => {\r\n  const proceduresUnderCase = await proceduresUnderCasesService.getAll(caseId);\r\n  dispatch({\r\n    type: 'GET_PROCEDURES_UNDER_CASE',\r\n    data: proceduresUnderCase || null,\r\n  });\r\n};\r\n\r\nexport const createProcedureUnderCase = (content) => async (dispatch) => {\r\n  const newProcedureUnderCase = await proceduresUnderCasesService.create(content);\r\n  dispatch({\r\n    type: 'NEW_PROCEDURE_UNDER_CASE',\r\n    data: newProcedureUnderCase,\r\n  });\r\n};\r\n\r\nexport const updateProcedurePriority = (procedure) => async (dispatch) => {\r\n  await proceduresUnderCasesService.update(procedure.procedureCaseId, procedure);\r\n  dispatch({\r\n    type: 'UPDATE_PROCEDURE',\r\n    data: procedure,\r\n  });\r\n};\r\n\r\nexport const updateProcedurePriorities = (caseId, procedures) => async (dispatch) => {\r\n  await Promise.all(procedures.map((p, index) => proceduresUnderCasesService\r\n    .update(\r\n      p.procedureCaseId,\r\n      { priority: index + 1 },\r\n    )));\r\n  dispatch(getProceduresUnderCase(caseId));\r\n};\r\n\r\nexport default proceduresReducer;\r\n","import proceduresService from './proceduresService';\r\nimport { createProcedureUnderCase, updateProcedurePriority } from './proceduresUnderCasesReducer';\r\n\r\nconst proceduresReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_PROCEDURES':\r\n      return action.data;\r\n    case 'NEW_PROCEDURE':\r\n      return [...state, action.data];\r\n    case 'UPDATE_PROCEDURE':\r\n      return state.map((p) => (p.id !== action.data.id\r\n        ? p\r\n        : {\r\n          id: p.id,\r\n          name: p.name,\r\n        }));\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getProcedures = () => async (dispatch) => {\r\n  const procedures = await proceduresService.getAll();\r\n  dispatch({\r\n    type: 'GET_PROCEDURES',\r\n    data: procedures || null,\r\n  });\r\n};\r\n\r\nexport const createProcedure = (caseId, procedure) => async (dispatch) => {\r\n  const newProcedure = await proceduresService.create(procedure);\r\n\r\n  dispatch({\r\n    type: 'NEW_PROCEDURE',\r\n    data: newProcedure,\r\n  });\r\n\r\n  dispatch(createProcedureUnderCase({\r\n    caseId,\r\n    procedureId: newProcedure.id,\r\n    priority: 1,\r\n  }));\r\n};\r\n\r\nexport const updateProcedure = (procedure) => async (dispatch) => {\r\n  await proceduresService.update(procedure.id, procedure);\r\n  dispatch(updateProcedurePriority(procedure));\r\n};\r\n\r\nexport default proceduresReducer;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Button, Modal,\r\n} from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport NewProcedureForm from './NewProcedureForm';\r\nimport { setSuccess, setError } from '../../../utils/MessageBanner';\r\nimport { createProcedure } from '../proceduresReducer';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst newProcedure = ({ caseId }) => {\r\n  /* istanbul ignore next */\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const toggleVisibility = () => setShow(!show);\r\n\r\n  /* istanbul ignore next */\r\n  const handleProcedureAdd = (procedureObject) => {\r\n    try {\r\n      dispatch(createProcedure(Number(caseId), procedureObject));\r\n      toggleVisibility();\r\n      setSuccess(t('procedureAddSuccess'));\r\n    } catch (error) {\r\n      toggleVisibility();\r\n      setError(t('procedureAddError'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"addButton\" onClick={toggleVisibility}>\r\n        {t('buttonNewProcedure')}\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        onHide={toggleVisibility}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{t('addProcedure')}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <NewProcedureForm addProcedure={handleProcedureAdd} />\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default newProcedure;\r\n","/* istanbul ignore file */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-unused-expressions */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateProcedure } from '../proceduresReducer';\r\n\r\nconst EditProcedure = ({ procedure, caseId, editProcedureFunc }) => {\r\n  /* istanbul ignore next */\r\n  const [newPriority, setNewPriority] = useState(procedure.priority);\r\n  /* istanbul ignore next */\r\n  const [newProcedureTitle, setNewProcedureTitle] = useState(procedure.name);\r\n  /* istanbul ignore next */\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  /* istanbul ignore next */\r\n  const history = useHistory();\r\n  const baseUrl = `/cases/${caseId}`;\r\n\r\n  /* istanbul ignore next */\r\n  const handlePriorityChange = (event) => {\r\n    setNewPriority(event.target.value);\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleTitleChange = (event) => {\r\n    setNewProcedureTitle(event.target.value);\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const editProcedure = (event) => {\r\n    event.preventDefault();\r\n    setNewProcedureTitle(event.target[0].value);\r\n    setNewPriority(event.target[1].value);\r\n    // eslint-disable-next-line no-param-reassign\r\n\r\n    const procedureToBeUpdated = {\r\n      ...procedure,\r\n      priority: Number(event.target[1].value),\r\n      name: event.target[0].value,\r\n    };\r\n\r\n    if (editProcedureFunc != null) {\r\n      editProcedureFunc(procedureToBeUpdated);\r\n    }\r\n    dispatch(updateProcedure(procedureToBeUpdated));\r\n  };\r\n\r\n  return (\r\n    <div id=\"editProcedureForm\" key={procedure.priority}>\r\n      <h2>{t('editProcedure')}</h2>\r\n      <Button className=\"procedureButton goTo\" as={Link} to={`${baseUrl}/procedure/${procedure.id}`} style={{ margin: 15 }}>{t('goToProcedure')}</Button>\r\n      <form onSubmit={(e) => editProcedure(e)}>\r\n        <p>\r\n          <label htmlFor=\"title\">\r\n            {t('procedureTitle')}\r\n          </label>\r\n          <br />\r\n          <input\r\n            id=\"title\"\r\n            type=\"text\"\r\n            defaultValue={procedure.name}\r\n            onChange={handleTitleChange}\r\n            className=\"formInput\"\r\n          />\r\n        </p>\r\n        <p>\r\n          <label htmlFor=\"priority\">\r\n            {t('procedurePriority')}\r\n          </label>\r\n          <br />\r\n          <input\r\n            id=\"priority\"\r\n            type=\"integer\"\r\n            onChange={handlePriorityChange}\r\n            defaultValue={procedure.priority}\r\n            className=\"formInput\"\r\n          />\r\n        </p>\r\n        <p>\r\n          <Button type=\"submit\" id=\"submit\" className=\"submitButton\">{t('buttonSave')}</Button>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProcedure;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { updateProcedurePriorities } from '../proceduresUnderCasesReducer';\r\nimport EditProcedure from './EditProcedure';\r\n\r\nconst DragNDropList = ({\r\n  proceduresHook, handleDragStart, handleDragEnd, handleDragEnter, t, submitForm,\r\n}) => (\r\n  proceduresHook\r\n    && proceduresHook.map((p, index) => (\r\n      <h4\r\n        onDragStart={(e) => handleDragStart(e, index)}\r\n        onDragEnd={() => handleDragEnd()}\r\n        onDragEnter={(e) => handleDragEnter(e, index)}\r\n        key={index}\r\n        draggable\r\n      >\r\n        <div className=\"rows\">\r\n          <Button className=\"procedureButton\">\r\n            {p.priority}\r\n            &nbsp;\r\n            {p.name}\r\n          </Button>\r\n          <form onSubmit={(e) => submitForm(p, e)} className=\"handleEdits\">\r\n            <Button type=\"submit\" className=\"editButton\" key={index} size=\"sm\">{t('buttonEdit') }</Button>\r\n          </form>\r\n        </div>\r\n      </h4>\r\n    ))\r\n);\r\n\r\nconst ProcedureList = ({ id }) => {\r\n  /* istanbul ignore next */\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const draggingItem = useRef();\r\n  const dragOverItem = useRef();\r\n  const [proceduresHook, setProceduresHook] = useState([]);\r\n  const [procedureToEdit, setProcedureToEdit] = useState(null);\r\n\r\n  const initialProcedures = useSelector((state) => {\r\n    const { proceduresUnderCase } = state;\r\n    return proceduresUnderCase\r\n      .sort((a, b) => a.priority - b.priority);\r\n  });\r\n\r\n  useEffect(() => {\r\n    setProceduresHook(initialProcedures);\r\n  }, [initialProcedures]);\r\n\r\n  /* istanbul ignore next */\r\n  const handleEditId = (p) => {\r\n    setProcedureToEdit(p);\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const submitForm = (p, e) => {\r\n    e.preventDefault();\r\n    handleEditId(p);\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleDragStart = (e, position) => {\r\n    draggingItem.current = position;\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleDragEnter = (e, position) => {\r\n    dragOverItem.current = position;\r\n    const listCopy = [...proceduresHook];\r\n    const draggingItemContent = listCopy[draggingItem.current];\r\n    listCopy.splice(draggingItem.current, 1);\r\n    listCopy.splice(dragOverItem.current, 0, draggingItemContent);\r\n    draggingItem.current = dragOverItem.current;\r\n    dragOverItem.current = null;\r\n    setProceduresHook(listCopy);\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleDragEnd = () => {\r\n    dispatch(updateProcedurePriorities(id, proceduresHook));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DragNDropList\r\n        proceduresHook={proceduresHook}\r\n        handleDragStart={handleDragStart}\r\n        handleDragEnd={handleDragEnd}\r\n        handleDragEnter={handleDragEnter}\r\n        t={t}\r\n        submitForm={submitForm}\r\n      />\r\n      { procedureToEdit ? (\r\n        <EditProcedure procedure={procedureToEdit} caseId={id} />\r\n      ) : (\r\n        <p> </p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedureList;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useParams } from 'react-router-dom';\r\nimport NewProcedure from './NewProcedure';\r\nimport ProcedureList from './ProcedureList';\r\n\r\nconst Procedures = ({ admin }) => {\r\n  /* istanbul ignore next */\r\n  const { t } = useTranslation();\r\n  const { id } = useParams();\r\n\r\n  return (\r\n    <div>\r\n      <h2>{t('procedures')}</h2>\r\n      { admin && (\r\n        <NewProcedure caseId={id} />\r\n      )}\r\n      <ProcedureList id={id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Procedures;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { Accordion, Card } from 'react-bootstrap';\r\n\r\nconst Differential = ({ id, name, description }) => (\r\n  <Card>\r\n    <Accordion.Toggle as={Card.Header} eventKey={id} id=\"differentialName\">\r\n      {name}\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey={id}>\r\n      <Card.Body>{description}</Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n);\r\n\r\nexport default Differential;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport Differential from './Differential';\r\n\r\nconst DifferentialList = ({ diffGroupCaseId }) => {\r\n  const caseDifferentials = useSelector((state) => state.differentialsUnderCase);\r\n  const diffGroupDiffs = caseDifferentials.filter((d) => d.diffGroupCaseId === diffGroupCaseId);\r\n\r\n  return (\r\n    <Accordion>\r\n      {diffGroupDiffs.map((d) => (\r\n        <Differential key={d.id} id={d.id} name={d.name} description={d.description} />\r\n      ))}\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default DifferentialList;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\n\r\nconst AddDifferentialForm = ({ addDifferential }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      description: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: Yup.string()\r\n        .min(2, t('warningShort'))\r\n        .max(999, t('warningLong'))\r\n        .required(t('warningRequired')),\r\n      description: Yup.string(),\r\n    }),\r\n    onSubmit: (values) => {\r\n      addDifferential({\r\n        name: values.name,\r\n        description: values.description,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"name\">\r\n        <Form.Label>{t('addDifferential')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder={t('write')}\r\n          {...formik.getFieldProps('name')}\r\n          isInvalid={!!formik.errors.name}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.name}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"description\">\r\n        <Form.Label>{t('description')}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={3}\r\n          {...formik.getFieldProps('description')}\r\n        />\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddDifferentialForm;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst SelectDifferentialForm = ({ selectDifferential, diffGroupCaseId }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [selectedDiff, setSelectedDiff] = useState([]);\r\n  const [description, setDescription] = useState('');\r\n  const differentials = useSelector((state) => state.differentials);\r\n\r\n  const handleDifferentialChoose = (event) => {\r\n    event.preventDefault();\r\n    const differential = differentials.filter((d) => d.name === selectedDiff[0])[0];\r\n    selectDifferential({\r\n      diffGroupCaseId,\r\n      differentialId: differential.id,\r\n      description,\r\n    });\r\n\r\n    setDescription('');\r\n    setSelectedDiff([]);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleDifferentialChoose}>\r\n      <Form.Group>\r\n        <Form.Label>{t('selectExistingDifferential')}</Form.Label>\r\n        <Typeahead\r\n          id=\"basic-typeahead-single\"\r\n          labelKey=\"name\"\r\n          options={differentials.map((d) => d.name)}\r\n          placeholder={t('selectDifferential')}\r\n          onChange={setSelectedDiff}\r\n          selected={selectedDiff}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"description\">\r\n        <Form.Label>{t('description')}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          name=\"description\"\r\n          rows={3}\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SelectDifferentialForm;\r\n","import differentialsUnderCasesService from '../services/differentialsUnderCases';\r\n\r\nconst differentialsUnderCasesReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_DIFFERENTIALSUNDERCASE':\r\n      return action.data;\r\n    case 'NEW_DIFFERENTIALUNDERCASE':\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getDifferentialsUnderCase = (id) => async (dispatch) => {\r\n  const returnedDifferentialsUnderCase = await differentialsUnderCasesService.getAll(id);\r\n  dispatch({\r\n    type: 'GET_DIFFERENTIALSUNDERCASE',\r\n    data: returnedDifferentialsUnderCase || null,\r\n  });\r\n};\r\n\r\nexport const createDifferentialUnderCase = (content) => async (dispatch) => {\r\n  const newDifferentialUnderCase = await differentialsUnderCasesService.create(content);\r\n  dispatch({\r\n    type: 'NEW_DIFFERENTIALUNDERCASE',\r\n    data: newDifferentialUnderCase,\r\n  });\r\n};\r\n\r\nexport default differentialsUnderCasesReducer;\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/differentials';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}/${getLanguage()}`, newObject, getConfig());\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove,\r\n};\r\n","import differentialsService from '../services/differentials';\r\nimport { createDifferentialUnderCase } from './differentialsUnderCasesReducer';\r\n\r\nconst differentialsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_DIFFERENTIALS':\r\n      return action.data;\r\n    case 'NEW_DIFFERENTIAL':\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getDifferentials = () => async (dispatch) => {\r\n  const returnedDifferentials = await differentialsService.getAll();\r\n  dispatch({\r\n    type: 'GET_DIFFERENTIALS',\r\n    data: returnedDifferentials || null,\r\n  });\r\n};\r\n\r\nexport const createDifferential = (content, diffGroupCaseId) => async (dispatch) => {\r\n  const newDifferential = await differentialsService.create({ name: content.name });\r\n  dispatch({\r\n    type: 'NEW_DIFFERENTIAL',\r\n    data: newDifferential,\r\n  });\r\n\r\n  dispatch(createDifferentialUnderCase({\r\n    diffGroupCaseId,\r\n    differentialId: newDifferential.id,\r\n    description: content.description,\r\n  }));\r\n};\r\n\r\nexport default differentialsReducer;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Button, Modal, Tabs, Tab,\r\n} from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport AddDifferentialForm from './AddDifferentialForm';\r\nimport SelectDifferentialForm from './SelectDifferentialForm';\r\nimport { setSuccess, setError } from '../../../utils/MessageBanner';\r\nimport { createDifferentialUnderCase } from '../reducers/differentialsUnderCasesReducer';\r\nimport { createDifferential } from '../reducers/differentialsReducer';\r\n\r\nconst NewDifferential = ({ diffGroupCaseId }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [show, setShow] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const toggleVisibility = () => setShow(!show);\r\n\r\n  /* istanbul ignore next */\r\n  const handleDifferentialSelection = (ducObject) => {\r\n    toggleVisibility();\r\n    try {\r\n      dispatch(createDifferentialUnderCase(ducObject));\r\n      setSuccess(t('differentialUpdateSuccess'));\r\n    } catch (error) {\r\n      // eslint-disable-next-line no-console\r\n      console.log(error);\r\n      setError(t('differentialUpdateError'));\r\n    }\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleDifferentialAdd = (differentialObject) => {\r\n    toggleVisibility();\r\n    try {\r\n      dispatch(createDifferential(differentialObject, diffGroupCaseId));\r\n      setSuccess(t('differentialUpdateSuccess'));\r\n    } catch (error) {\r\n      // eslint-disable-next-line no-console\r\n      console.log(error);\r\n      setError(t('differentialUpdateError'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"newDifferential\">\r\n      <Button className=\"addButton\" onClick={toggleVisibility} id=\"addNew\">\r\n        {t('buttonNewDifferential')}\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        onHide={toggleVisibility}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{t('addDifferential')}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Tabs defaultActiveKey=\"select\" id=\"differentials\" className=\"mb-3\">\r\n            <Tab eventKey=\"select\" title={t('selectExisting')}>\r\n              <SelectDifferentialForm\r\n                selectDifferential={handleDifferentialSelection}\r\n                diffGroupCaseId={diffGroupCaseId}\r\n              />\r\n            </Tab>\r\n            <Tab eventKey=\"add\" title={t('addNewDifferential2')}>\r\n              <AddDifferentialForm addDifferential={handleDifferentialAdd} />\r\n            </Tab>\r\n          </Tabs>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewDifferential;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport DifferentialList from '../DifferentialList';\r\nimport NewDifferential from '../NewDifferential';\r\n\r\nconst DifferentialGroup = ({\r\n  diffGroupCaseId, name, admin,\r\n}) => (\r\n  <Card style={{ width: '60rem' }}>\r\n    <Card.Header>{name}</Card.Header>\r\n    <Card.Body>\r\n      <DifferentialList diffGroupCaseId={diffGroupCaseId} />\r\n      {admin && (\r\n        <NewDifferential diffGroupCaseId={diffGroupCaseId} />\r\n      )}\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nexport default DifferentialGroup;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport DifferentialGroup from './DifferentialGroup';\r\n\r\nconst DifferentialGroupList = ({ admin }) => {\r\n  const caseDifferentialGroups = useSelector((state) => state.differentialGroupsUnderCase);\r\n\r\n  return (\r\n    <div data-testid=\"diffGroupList\">\r\n      {caseDifferentialGroups.map((d) => (\r\n        <DifferentialGroup\r\n          key={d.id}\r\n          diffGroupCaseId={d.diffGroupCaseId}\r\n          name={d.name}\r\n          admin={admin}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DifferentialGroupList;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\n\r\nconst AddDifferentialGroupForm = ({ addDifferentialGroup }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: Yup.string()\r\n        .min(2, t('warningShort'))\r\n        .max(999, t('warningLong'))\r\n        .required(t('warningRequired')),\r\n    }),\r\n    onSubmit: (values) => {\r\n      addDifferentialGroup({\r\n        name: values.name,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"name\">\r\n        <Form.Label>{t('addDifferentialGroup')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder={t('write')}\r\n          {...formik.getFieldProps('name')}\r\n          isInvalid={!!formik.errors.name}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.name}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewDifferentialGroup')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddDifferentialGroupForm;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst SelectDifferentialGroupForm = ({ selectDifferentialGroup }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [selectedDiff, setSelectedDiff] = useState([]);\r\n  const differentialGroups = useSelector((state) => state.differentialGroups);\r\n\r\n  const handleDifferentialChoose = (event) => {\r\n    event.preventDefault();\r\n    const differentialGroup = differentialGroups.filter((d) => d.name === selectedDiff[0])[0];\r\n    selectDifferentialGroup(differentialGroup.id);\r\n    setSelectedDiff([]);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleDifferentialChoose}>\r\n      <Form.Group>\r\n        <Form.Label>{t('selectExistingDifferentialGroup')}</Form.Label>\r\n        <Typeahead\r\n          id=\"basic-typeahead-single\"\r\n          labelKey=\"name\"\r\n          options={differentialGroups.map((d) => d.name)}\r\n          placeholder={t('selectDifferentialGroup')}\r\n          onChange={setSelectedDiff}\r\n          selected={selectedDiff}\r\n        />\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewDifferentialGroup')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SelectDifferentialGroupForm;\r\n","import differentialGroupsUnderCasesService from '../services/differentialGroupsUnderCases';\r\n\r\nconst differentialGroupsUnderCasesReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_DIFFERENTIALGROUPS_UNDER_CASE':\r\n      return action.data;\r\n    case 'NEW_DIFFERENTIALGROUP_UNDER_CASE':\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getDifferentialGroupsUnderCase = (id) => async (dispatch) => {\r\n  const returnedDifferentialGroupsUnderCase = await differentialGroupsUnderCasesService.getAll(id);\r\n  dispatch({\r\n    type: 'GET_DIFFERENTIALGROUPS_UNDER_CASE',\r\n    data: returnedDifferentialGroupsUnderCase || null,\r\n  });\r\n};\r\n\r\nexport const createDifferentialGroupUnderCase = (content) => async (dispatch) => {\r\n  const newDifferentialGroupUnderCase = await differentialGroupsUnderCasesService.create(content);\r\n  dispatch({\r\n    type: 'NEW_DIFFERENTIALGROUP_UNDER_CASE',\r\n    data: newDifferentialGroupUnderCase,\r\n  });\r\n};\r\n\r\nexport default differentialGroupsUnderCasesReducer;\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/differentialGroups';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n};\r\n","import differentialGroupsService from '../services/differentialGroups';\r\nimport { createDifferentialGroupUnderCase } from './differentialGroupsUnderCasesReducer';\r\n\r\nconst differentialGroupsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_DIFFERENTIALGROUPS':\r\n      return action.data;\r\n    case 'NEW_DIFFERENTIALGROUP':\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getDifferentialGroups = () => async (dispatch) => {\r\n  const returnedDifferentialGroups = await differentialGroupsService.getAll();\r\n  dispatch({\r\n    type: 'GET_DIFFERENTIALGROUPS',\r\n    data: returnedDifferentialGroups || null,\r\n  });\r\n};\r\n\r\nexport const createDifferentialGroup = (caseId, differential) => async (dispatch) => {\r\n  const newDifferentialGroup = await differentialGroupsService.create(differential);\r\n\r\n  dispatch({\r\n    type: 'NEW_DIFFERENTIALGROUP',\r\n    data: newDifferentialGroup,\r\n  });\r\n\r\n  dispatch(createDifferentialGroupUnderCase({\r\n    caseId,\r\n    differentialGroupId: newDifferentialGroup.id,\r\n  }));\r\n};\r\n\r\nexport default differentialGroupsReducer;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Button, Modal, Tabs, Tab,\r\n} from 'react-bootstrap';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport AddDifferentialGroupForm from './AddDifferentialGroupForm';\r\nimport SelectDifferentialGroupForm from './SelectDifferentialGroupForm';\r\nimport { setSuccess, setError } from '../../../../utils/MessageBanner';\r\nimport { createDifferentialGroupUnderCase } from '../../reducers/differentialGroupsUnderCasesReducer';\r\nimport { createDifferentialGroup } from '../../reducers/differentialGroupsReducer';\r\n\r\nconst NewDifferentialGroup = ({ caseId }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [show, setShow] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const toggleVisibility = () => setShow(!show);\r\n\r\n  /* istanbul ignore next */\r\n  const handleDifferentialGroupSelection = (differentialGroupId) => {\r\n    toggleVisibility();\r\n    try {\r\n      dispatch(createDifferentialGroupUnderCase({ differentialGroupId, caseId: Number(caseId) }));\r\n      setSuccess(t('differentialGroupUpdateSuccess'));\r\n    } catch (error) {\r\n      // eslint-disable-next-line no-console\r\n      console.log(error);\r\n      setError(t('differentialGroupUpdateError'));\r\n    }\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleDifferentialGroupAdd = (differentialGroupObject) => {\r\n    toggleVisibility();\r\n    try {\r\n      dispatch(createDifferentialGroup(Number(caseId), differentialGroupObject));\r\n      setSuccess(t('differentialGroupUpdateSuccess'));\r\n    } catch (error) {\r\n      // eslint-disable-next-line no-console\r\n      console.log(error);\r\n      setError(t('differentialGroupUpdateError'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"addButton\" onClick={toggleVisibility} id=\"addNew\">\r\n        {t('buttonNewDifferentialGroup')}\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        onHide={toggleVisibility}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{t('addDifferentialGroup')}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Tabs defaultActiveKey=\"select\" id=\"differentialGroups\" className=\"mb-3\">\r\n            <Tab eventKey=\"select\" title={t('selectExisting')}>\r\n              <SelectDifferentialGroupForm\r\n                selectDifferentialGroup={handleDifferentialGroupSelection}\r\n              />\r\n            </Tab>\r\n            <Tab eventKey=\"add\" title={t('addNewDifferential2')}>\r\n              <AddDifferentialGroupForm addDifferentialGroup={handleDifferentialGroupAdd} />\r\n            </Tab>\r\n          </Tabs>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewDifferentialGroup;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable array-callback-return */\r\nimport React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport DifferentialGroupList from './differentialGroup/DifferentialGroupList';\r\nimport NewDifferentialGroup from './differentialGroup/NewDifferentialGroup';\r\n\r\nconst Differentials = ({ admin }) => {\r\n  const { t } = useTranslation();\r\n  const { id } = useParams();\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        {t('Differentials')}\r\n      </h2>\r\n      {admin && (\r\n        <div>\r\n          <NewDifferentialGroup caseId={id} />\r\n        </div>\r\n      )}\r\n      <DifferentialGroupList admin={admin} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Differentials;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst HideCase = ({ c, hideCase }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [newHidden, setNewHidden] = useState(c.hidden);\r\n\r\n  const handleVisibilityUpdate = (event) => {\r\n    event.preventDefault();\r\n    hideCase({\r\n      ...c,\r\n      hidden: newHidden,\r\n    });\r\n  };\r\n\r\n  const handleHiddenChange = () => {\r\n    setNewHidden(!newHidden);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleVisibilityUpdate}>\r\n        <label htmlFor=\"submit\" className=\"hidden\">{newHidden ? t('buttonShowCaseToStudents') : t('buttonHideCaseFromStudents')}</label>\r\n        <input id=\"submitHide\" className=\"hideCase\" type=\"submit\" onClick={handleHiddenChange} size=\"sm\" value={newHidden ? t('buttonShowCaseToStudents') : t('buttonHideCaseFromStudents')} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HideCase;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Form } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst UpdateCaseTitle = ({ c, updateCaseTitle }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: c.title,\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: Yup.string()\r\n        .min(2, t('warningShort'))\r\n        .max(999, t('warningLong'))\r\n        .required(t('warningRequired')),\r\n    }),\r\n    onSubmit: (values) => {\r\n      updateCaseTitle({\r\n        ...c,\r\n        title: values.title,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"updateTitle\" style={{ width: '30rem' }}>\r\n        <Form.Control\r\n          className=\"titleChangeInput\"\r\n          type=\"text\"\r\n          {...formik.getFieldProps('title')}\r\n          isInvalid={!!formik.errors.title}\r\n        />\r\n        <Form.Text className=\"text-muted\">\r\n          {t('caseTitleInstruction')}\r\n        </Form.Text>\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.title}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default UpdateCaseTitle;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst UpdateAnamnesis = ({ c, updateAnamnesis }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      anamnesis: c.anamnesis,\r\n    },\r\n    validationSchema: Yup.object({\r\n      anamnesis: Yup.string()\r\n        .min(2, t('warningShort'))\r\n        .max(5000, t('warningLong'))\r\n        .required(t('warningRequired')),\r\n    }),\r\n    onSubmit: (values) => {\r\n      updateAnamnesis({\r\n        ...c,\r\n        anamnesis: values.anamnesis,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"updateAnamnesis\">\r\n        <Form.Control\r\n          className=\"anamnesisForm\"\r\n          as=\"textarea\"\r\n          {...formik.getFieldProps('anamnesis')}\r\n          isInvalid={!!formik.errors.anamnesis}\r\n          rows={10}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.anamnesis}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSaveAnamneesi')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default UpdateAnamnesis;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport HideCase from '../case/components/HideCase';\r\nimport UpdateCaseTitle from '../case/components/UpdateCaseTitle';\r\nimport { setSuccess, setError } from '../../utils/MessageBanner';\r\nimport UpdateAnamnesis from './UpdateAnamnesis';\r\nimport { updateCase } from '../case/casesReducer';\r\n\r\nconst Anamnesis = ({ admin }) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n  const c = useSelector((state) => state.cases.find((a) => a.id === Number(id)));\r\n\r\n  /* istanbul ignore next */\r\n  const handleCaseUpdate = (updatedCase) => {\r\n    try {\r\n      dispatch(updateCase(updatedCase));\r\n      setSuccess(t('caseUpdateSuccess'));\r\n    } catch (error) {\r\n      // eslint-disable-next-line no-console\r\n      console.log(error);\r\n      setError(t('caseUpdateError'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {admin && c && (\r\n        <div id=\"casePageArea\">\r\n          <div className=\"rows\">\r\n            <UpdateCaseTitle c={c} updateCaseTitle={handleCaseUpdate} />\r\n            <HideCase c={c} hideCase={handleCaseUpdate} />\r\n          </div>\r\n          <UpdateAnamnesis c={c} updateAnamnesis={handleCaseUpdate} />\r\n        </div>\r\n      )}\r\n      {!admin && c && (\r\n        <p>{c.title}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Anamnesis;\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/subProcedures';\r\n\r\nconst getAll = (id) => {\r\n  const request = axios.get(`${baseUrl}/${id}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}/${getLanguage()}`, newObject, getConfig());\r\n\r\nexport default {\r\n  create,\r\n  getAll,\r\n  update,\r\n};\r\n","import subProceduresService from '../services/subProceduresService';\r\n\r\nconst subProceduresReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_SUBPROCEDURES':\r\n      return action.data;\r\n    case 'ADD_SUBPROCEDURE':\r\n      return [...state, action.data];\r\n    case 'UPDATE_SUBPROCEDURE': {\r\n      return state.map((p) => (p.id !== action.data.id\r\n        ? p\r\n        : action.data\r\n      ));\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getSubprocedures = (procedureCaseId) => async (dispatch) => {\r\n  const subprocedures = await subProceduresService.getAll(procedureCaseId);\r\n  dispatch({\r\n    type: 'GET_SUBPROCEDURES',\r\n    data: subprocedures || null,\r\n  });\r\n};\r\n\r\nexport const addSubprocedure = (subProcedureObject, procedureCaseId) => async (dispatch) => {\r\n  const addedSubprocedure = await subProceduresService.create({\r\n    ...subProcedureObject,\r\n    procedureCaseId,\r\n  });\r\n  dispatch({\r\n    type: 'ADD_SUBPROCEDURE',\r\n    data: addedSubprocedure,\r\n  });\r\n};\r\n\r\nexport const updateSubprocedure = (id, subProcedureObject) => async (dispatch) => {\r\n  await subProceduresService.update(id, subProcedureObject);\r\n  dispatch({\r\n    type: 'UPDATE_SUBPROCEDURE',\r\n    data: subProcedureObject,\r\n  });\r\n};\r\n\r\nexport default subProceduresReducer;\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/optionGroups';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n};\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/optionGroupsUnderSubProcedures';\r\n\r\nconst getAll = (caseId) => {\r\n  const request = axios.get(`${baseUrl}/${caseId}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n};\r\n","import service from '../services/optionGroupsUnderSubProceduresService';\r\n\r\nconst optionGroupsUnderSubProceduresReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_OPTIONGROUPS_UNDER_SUBPROCEDURES':\r\n      return action.data;\r\n    case 'NEW_OPTIONGROUP_UNDER_SUBPROCEDURE':\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getOptionGroupsUnderSubProcedures = (id) => async (dispatch) => {\r\n  const returnedOptionGroups = await service.getAll(id);\r\n  dispatch({\r\n    type: 'GET_OPTIONGROUPS_UNDER_SUBPROCEDURES',\r\n    data: returnedOptionGroups || null,\r\n  });\r\n};\r\n\r\nexport const createOptionGroupUnderSubProcedure = (content) => async (dispatch) => {\r\n  const newOptionGroupUnderSubProcedure = await service.create(content);\r\n  dispatch({\r\n    type: 'NEW_OPTIONGROUP_UNDER_SUBPROCEDURE',\r\n    data: newOptionGroupUnderSubProcedure,\r\n  });\r\n};\r\n\r\nexport default optionGroupsUnderSubProceduresReducer;\r\n","import optionGroupsService from '../services/optionGroupsService';\r\nimport { createOptionGroupUnderSubProcedure } from './optionGroupsUnderSubProceduresReducer';\r\n\r\nconst optionGroupsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_OPTIONGROUPS':\r\n      return action.data;\r\n    case 'NEW_OPTIONGROUP':\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getOptionGroups = () => async (dispatch) => {\r\n  const returnedOptionGroups = await optionGroupsService.getAll();\r\n  dispatch({\r\n    type: 'GET_OPTIONGROUPS',\r\n    data: returnedOptionGroups || null,\r\n  });\r\n};\r\n\r\nexport const createOptionGroup = (subProcedureId, optionGroup) => async (dispatch) => {\r\n  let { id } = optionGroup;\r\n\r\n  if (id === undefined) {\r\n    const newOptionGroup = await optionGroupsService.create(optionGroup);\r\n\r\n    dispatch({\r\n      type: 'NEW_OPTIONGROUP',\r\n      data: newOptionGroup,\r\n    });\r\n\r\n    id = newOptionGroup.id;\r\n  }\r\n\r\n  dispatch(createOptionGroupUnderSubProcedure({\r\n    subProcedureId,\r\n    optionGroupId: id,\r\n  }));\r\n};\r\n\r\nexport default optionGroupsReducer;\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/options';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n};\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/optionsUnderSubProcedures';\r\n\r\nconst getAll = (id) => {\r\n  const request = axios.get(`${baseUrl}/${id}/INTERVIEW/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n};\r\n","import service from '../services/optionsUnderSubProceduresService';\r\n\r\nconst optionsUnderSubProceduresReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_OPTIONS_UNDER_SUBPROCEDURES':\r\n      return action.data;\r\n    case 'NEW_OPTION_UNDER_SUBPROCEDURE':\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getOptionsUnderSubProcedures = (id) => async (dispatch) => {\r\n  const returnedOptions = await service.getAll(id);\r\n  dispatch({\r\n    type: 'GET_OPTIONS_UNDER_SUBPROCEDURES',\r\n    data: returnedOptions || null,\r\n  });\r\n};\r\n\r\nexport const createOptionUnderSubProcedure = (content) => async (dispatch) => {\r\n  const newOption = await service.create(content);\r\n  dispatch({\r\n    type: 'NEW_OPTION_UNDER_SUBPROCEDURE',\r\n    data: newOption,\r\n  });\r\n};\r\n\r\nexport default optionsUnderSubProceduresReducer;\r\n","import service from '../services/optionsService';\r\nimport { createOptionUnderSubProcedure } from './optionsUnderSubProceduresReducer';\r\n\r\nconst optionsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_OPTIONS':\r\n      return action.data;\r\n    case 'NEW_OPTION':\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getOptions = () => async (dispatch) => {\r\n  const returnedOptions = await service.getAll();\r\n  dispatch({\r\n    type: 'GET_OPTIONS',\r\n    data: returnedOptions || null,\r\n  });\r\n};\r\n\r\nexport const createOption = (optionGroupSubProcedureId, content) => async (dispatch) => {\r\n  let { id } = content;\r\n\r\n  if (id === undefined) {\r\n    const newOption = await service.create({ name: content.name });\r\n\r\n    dispatch({\r\n      type: 'NEW_OPTION',\r\n      data: newOption,\r\n    });\r\n\r\n    id = newOption.id;\r\n  }\r\n\r\n  dispatch(createOptionUnderSubProcedure({\r\n    optionGroupSubProcedureId,\r\n    optionId: id,\r\n    description: content.description,\r\n    isRequired: content.isRequired,\r\n  }));\r\n};\r\n\r\nexport default optionsReducer;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Link, useParams, Switch, Route, Redirect,\r\n} from 'react-router-dom';\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport Procedures from '../../procedure/components/Procedures';\r\nimport Differentials from '../../differential/components/Differentials';\r\nimport Anamnesis from '../../anamnesis/Anamnesis';\r\nimport { getProcedures } from '../../procedure/proceduresReducer';\r\nimport { getProceduresUnderCase } from '../../procedure/proceduresUnderCasesReducer';\r\nimport { getDifferentials } from '../../differential/reducers/differentialsReducer';\r\nimport { getDifferentialGroups } from '../../differential/reducers/differentialGroupsReducer';\r\nimport { getDifferentialGroupsUnderCase } from '../../differential/reducers/differentialGroupsUnderCasesReducer';\r\nimport { getDifferentialsUnderCase } from '../../differential/reducers/differentialsUnderCasesReducer';\r\nimport { getSubprocedures } from '../../subprocedure/reducers/subProceduresReducer';\r\nimport { getOptionGroups } from '../../subprocedure/reducers/optionGroupsReducer';\r\nimport { getOptionGroupsUnderSubProcedures } from '../../subprocedure/reducers/optionGroupsUnderSubProceduresReducer';\r\nimport { getOptions } from '../../subprocedure/reducers/optionReducer';\r\nimport { getOptionsUnderSubProcedures } from '../../subprocedure/reducers/optionsUnderSubProceduresReducer';\r\n\r\nconst Case = ({ admin }) => {\r\n  const { t } = useTranslation();\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const baseUrl = `/cases/${id}`;\r\n\r\n  useEffect(() => {\r\n    dispatch(getProcedures());\r\n    dispatch(getProceduresUnderCase(id));\r\n    dispatch(getSubprocedures(id));\r\n    dispatch(getOptionGroups());\r\n    dispatch(getOptionGroupsUnderSubProcedures(id));\r\n    dispatch(getOptions());\r\n    dispatch(getOptionsUnderSubProcedures(id));\r\n    dispatch(getDifferentials());\r\n    dispatch(getDifferentialsUnderCase(id));\r\n    dispatch(getDifferentialGroups());\r\n    dispatch(getDifferentialGroupsUnderCase(id));\r\n  }, []);\r\n\r\n  const buttonGroupStyle = {\r\n    marginBottom: 25,\r\n  };\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <ButtonGroup style={buttonGroupStyle}>\r\n        <Button className=\"tabs\" as={Link} to={`${baseUrl}/anamnesis`} disabled>{t('caseAnamnesis')}</Button>\r\n        <Button className=\"tabs\" as={Link} to={`${baseUrl}/procedures`}>{t('caseProcedures')}</Button>\r\n        <Button className=\"tabs\" as={Link} to={`${baseUrl}/differentials`}>{t('caseDifferentials')}</Button>\r\n      </ButtonGroup>\r\n\r\n      <Switch>\r\n        <Route path=\"/cases/:id/anamnesis\">\r\n          <Anamnesis admin={admin} />\r\n        </Route>\r\n        <Route path=\"/cases/:id/procedures\">\r\n          <Procedures admin={admin} />\r\n        </Route>\r\n        <Route path=\"/cases/:id/differentials\">\r\n          <Differentials admin={admin} />\r\n        </Route>\r\n        <Route path=\"/cases/:id\">\r\n          <Redirect to={`${baseUrl}/anamnesis`} />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Case;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState, useImperativeHandle, forwardRef } from 'react';\r\nimport {\r\n  Button, Modal,\r\n} from 'react-bootstrap';\r\n\r\nconst AddUpdateModal = forwardRef((props, ref) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const toggleVisibility = () => setShow(!show);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    toggleVisibility,\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"addButton text\" onClick={toggleVisibility} size=\"sm\">\r\n        {props.buttonLabel}\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        onHide={toggleVisibility}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{props.titleLabel}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {props.children}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default AddUpdateModal;\r\n","import React from 'react';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport { useField } from 'formik';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst CustomTypeaheadSelect = (props) => {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [field, meta, helper] = useField(props);\r\n  const { t } = useTranslation();\r\n  return (\r\n    <>\r\n      <Form.Group controlId={`form-${props.name}`}>\r\n        <Form.Label>{props.label}</Form.Label>\r\n        <Typeahead\r\n          id={props.name}\r\n          multiple={false}\r\n          onChange={(selected) => {\r\n            const value = selected.length > 0 ? selected[0].name : '';\r\n            helper.setValue(value);\r\n          }}\r\n          onInputChange={(text) => helper.setValue(text)}\r\n          onBlur={() => helper.setTouched(true)}\r\n          allowNew={false}\r\n          labelKey={props.name}\r\n          options={props.options}\r\n          placeholder={t('write')}\r\n          emptyLabel=\"\"\r\n          {...(meta.touched && meta.error\r\n            ? { isInvalid: true, className: 'is-invalid' }\r\n            : { isInvalid: false })}\r\n          {...props}\r\n        />\r\n        {meta.touched && meta.error ? (\r\n          <div className=\"invalid-feedback\">{meta.error}</div>\r\n        ) : null}\r\n      </Form.Group>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomTypeaheadSelect;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTypeaheadSelect from '../../../../utils/CustomTypeaheadSelect';\r\n\r\nconst NewOptionGroupForm = ({ addOptionGroup }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const AddCheckSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .min(2, t('warningShort'))\r\n      .max(999, t('warningLong'))\r\n      .required(t('warningRequired')),\r\n  });\r\n\r\n  const optionGroups = useSelector((state) => state.optionGroups);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: '',\r\n      }}\r\n      validationSchema={AddCheckSchema}\r\n      onSubmit={async (values) => {\r\n        const group = optionGroups.filter((r) => r.name === values.name);\r\n        addOptionGroup(\r\n          group.length === 0\r\n            ? values\r\n            : group[0],\r\n        );\r\n      }}\r\n    >\r\n      {({ handleSubmit }) => (\r\n        <div>\r\n          <Form onSubmit={handleSubmit}>\r\n            <CustomTypeaheadSelect\r\n              name=\"name\"\r\n              label={t('addOptionGroup')}\r\n              options={optionGroups}\r\n            />\r\n            <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\r\n          </Form>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default NewOptionGroupForm;\r\n","import React from 'react';\r\nimport { Accordion, Card } from 'react-bootstrap';\r\n\r\nconst Option = ({ optionObject }) => (\r\n  <Card>\r\n    <Accordion.Toggle\r\n      className={`optionCard-${optionObject.isRequired}`}\r\n      as={Card.Header}\r\n      eventKey={optionObject.id}\r\n    >\r\n      {optionObject.name}\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey={optionObject.id}>\r\n      <Card.Body>{optionObject.description}</Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n);\r\n\r\nexport default Option;\r\n","import React from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport Option from './Option';\r\n\r\nconst OptionList = ({ optionGroupSubProcedureId }) => {\r\n  const caseOptions = useSelector((state) => state.optionsUnderSubProcedure);\r\n  const options = caseOptions.filter(\r\n    (o) => o.optionGroupSubProcedureId === optionGroupSubProcedureId,\r\n  );\r\n\r\n  return (\r\n    <Accordion>\r\n      {options.map((o) => (\r\n        <Option key={o.id} optionObject={o} />\r\n      ))}\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default OptionList;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport CustomTypeaheadSelect from '../../../../utils/CustomTypeaheadSelect';\r\n\r\nconst NewOptionForm = ({ addOption }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const AddCheckSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .min(2, t('warningShort'))\r\n      .max(999, t('warningLong'))\r\n      .required(t('warningRequired')),\r\n    description: Yup.string(),\r\n    isRequired: Yup.number()\r\n      .required(t('warningRequired'))\r\n      .integer(),\r\n  });\r\n\r\n  const options = useSelector((state) => state.options);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: '',\r\n        description: '',\r\n        isRequired: 2,\r\n      }}\r\n      validationSchema={AddCheckSchema}\r\n      onSubmit={async (values) => {\r\n        const option = options.filter((r) => r.name === values.name);\r\n        addOption(\r\n          option.length === 0\r\n            ? values\r\n            : { ...option[0], ...values },\r\n        );\r\n      }}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        setFieldValue,\r\n        values,\r\n      }) => (\r\n        <div>\r\n          <Form onSubmit={handleSubmit}>\r\n            <CustomTypeaheadSelect\r\n              name=\"name\"\r\n              label={t('addOption')}\r\n              options={options}\r\n            />\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>{t('description')}</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                value={values.description}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"isRequired\">\r\n              <Form.Check\r\n                defaultChecked\r\n                label={t('required')}\r\n                name=\"isRequired\"\r\n                type=\"radio\"\r\n                id=\"inline-radio-1\"\r\n                value={2}\r\n                onChange={() => setFieldValue('isRequired', 2)}\r\n              />\r\n              <Form.Check\r\n                label={t('voluntary')}\r\n                name=\"isRequired\"\r\n                type=\"radio\"\r\n                id=\"inline-radio-2\"\r\n                value={1}\r\n                checked={values.isRequired === 1}\r\n                onChange={() => setFieldValue('isRequired', 1)}\r\n              />\r\n              <Form.Check\r\n                label={t('wrong')}\r\n                name=\"isRequired\"\r\n                type=\"radio\"\r\n                id=\"inline-radio-3\"\r\n                value={0}\r\n                checked={values.isRequired === 0}\r\n                onChange={() => setFieldValue('isRequired', 0)}\r\n              />\r\n            </Form.Group>\r\n            <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\r\n          </Form>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default NewOptionForm;\r\n","import React, { useRef } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch } from 'react-redux';\r\nimport OptionList from './OptionList';\r\nimport NewOptionForm from './NewOptionForm';\r\nimport AddUpdateModal from '../../../../utils/AddUpdateModal';\r\nimport { createOption } from '../../reducers/optionReducer';\r\nimport { setSuccess, setError } from '../../../../utils/MessageBanner';\r\n\r\nconst OptionGroup = ({\r\n  optionGroupSubProcedureId, name, admin,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const modalRef = useRef();\r\n\r\n  /* istanbul ignore next */\r\n  const handleOptionAdd = (newOption) => {\r\n    modalRef.current.toggleVisibility();\r\n    try {\r\n      dispatch(createOption(optionGroupSubProcedureId, newOption));\r\n      setSuccess(t('optionGroupAddSuccess'));\r\n    } catch (error) {\r\n      setError(t('optionGroupAddError'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>{name}</Card.Header>\r\n      <Card.Body>\r\n        <OptionList optionGroupSubProcedureId={optionGroupSubProcedureId} />\r\n        {admin && (\r\n        <AddUpdateModal buttonLabel={t('buttonAddNewOption')} titleLabel={t('addOption')} ref={modalRef}>\r\n          <NewOptionForm\r\n            addOption={handleOptionAdd}\r\n          />\r\n        </AddUpdateModal>\r\n        )}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default OptionGroup;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport OptionGroup from './OptionGroup';\r\n\r\nconst OptionGroupList = ({ subProcedureId, admin }) => {\r\n  const caseOptionGroups = useSelector((state) => state.optionGroupsUnderSubProcedure);\r\n  const subProcedureOptionGroups = caseOptionGroups.filter(\r\n    (o) => o.subProcedureId === subProcedureId,\r\n  );\r\n\r\n  return (\r\n    <div data-testid=\"optionGroupList\">\r\n      {subProcedureOptionGroups.map((d) => (\r\n        <OptionGroup\r\n          key={d.id}\r\n          optionGroupSubProcedureId={d.optionGroupSubProcedureId}\r\n          name={d.name}\r\n          admin={admin}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionGroupList;\r\n","import React, { useRef } from 'react';\r\nimport { Accordion, Card } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch } from 'react-redux';\r\nimport AddUpdateModal from '../../../../utils/AddUpdateModal';\r\nimport NewOptionGroupForm from './NewOptionGroupForm';\r\nimport { createOptionGroup } from '../../reducers/optionGroupsReducer';\r\nimport { setSuccess, setError } from '../../../../utils/MessageBanner';\r\nimport OptionGroupList from './OptionGroupList';\r\n// import UpdateInterviewSubProcedure from './UpdateInterviewSubProcedure';\r\n/*\r\n{admin && (\r\n            <div className=\"cardButtons\">\r\n              <UpdateInterviewSubProcedure d={d} />\r\n            </div>\r\n          )}\r\n          */\r\nconst InterviewSubProcedure = ({ d, admin }) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const modalRef = useRef();\r\n\r\n  const handleOptionGroupAdd = (optionGroup) => {\r\n    modalRef.current.toggleVisibility();\r\n    try {\r\n      dispatch(createOptionGroup(d.id, optionGroup));\r\n      setSuccess(t('optionGroupAddSuccess'));\r\n    } catch (error) {\r\n      setError(t('optionGroupAddError'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card style={{ width: '60rem' }}>\r\n        <Accordion.Toggle as={Card.Header} eventKey={d.id}>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            {d.title}\r\n          </div>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey={d.id}>\r\n          <Card.Body>\r\n            { admin\r\n            && (\r\n            <AddUpdateModal buttonLabel={t('buttonAddNewOptionGroup')} titleLabel={t('addOptionGroup')} ref={modalRef}>\r\n              <NewOptionGroupForm addOptionGroup={handleOptionGroupAdd} />\r\n            </AddUpdateModal>\r\n            )}\r\n            <OptionGroupList subProcedureId={d.id} admin={admin} />\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterviewSubProcedure;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\n\r\nconst UpdateTextSubProcedureForm = ({\r\n  title,\r\n  text,\r\n  handleTextSubProcedureUpdate,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title,\r\n      text,\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: Yup.string()\r\n        .min(2, t('warningShort'))\r\n        .max(999, t('warningLong'))\r\n        .required(t('warningRequired')),\r\n      priority: Yup.string(),\r\n      text: Yup.string(),\r\n    }),\r\n    onSubmit: (values) => {\r\n      handleTextSubProcedureUpdate({\r\n        title: values.title,\r\n        text: values.text,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"title\">\r\n        <Form.Label>{t('title')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder={t('write')}\r\n          {...formik.getFieldProps('title')}\r\n          isInvalid={!!formik.errors.title}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.title}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"text\">\r\n        <Form.Label>{t('textToAdd')}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={10}\r\n          {...formik.getFieldProps('text')}\r\n        />\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonUpdate')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default UpdateTextSubProcedureForm;\r\n","import React, { useState } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport UpdateTextSubProcedureForm from './UpdateTextSubProcedureForm';\r\nimport { updateSubprocedure } from '../../reducers/subProceduresReducer';\r\nimport { setSuccess, setError } from '../../../../utils/MessageBanner';\r\n\r\nconst UpdateTextSubProcedure = ({ d }) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const [show, setShow] = useState(false);\r\n\r\n  const toggleVisibility = () => setShow(!show);\r\n\r\n  /* istanbul ignore next */\r\n  const handleTextSubProcedureUpdate = (updatedObject) => {\r\n    toggleVisibility();\r\n    try {\r\n      dispatch(updateSubprocedure(d.id, {\r\n        ...d,\r\n        title: updatedObject.title,\r\n        text: updatedObject.text,\r\n      }));\r\n      setSuccess(t('subProcedureUpdateSuccess'));\r\n    } catch (error) {\r\n      setError(t('subProcedureUpdateError'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"editButton\" size=\"sm\" onClick={toggleVisibility}>\r\n        {t('buttonEdit')}\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        onHide={toggleVisibility}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{t('updateSubProcedure')}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <UpdateTextSubProcedureForm\r\n            title={d.title}\r\n            text={d.text}\r\n            handleTextSubProcedureUpdate={handleTextSubProcedureUpdate}\r\n          />\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateTextSubProcedure;\r\n","import React from 'react';\r\nimport { Accordion, Card } from 'react-bootstrap';\r\nimport UpdateTextSubProcedure from './UpdateTextSubProcedure';\r\n\r\nconst TextSubProcedure = ({ d, admin }) => (\r\n  <div>\r\n    <Card style={{ width: '60rem' }}>\r\n      <Accordion.Toggle as={Card.Header} eventKey={d.id}>\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          {d.title}\r\n          {admin && (\r\n            <div className=\"cardButtons\">\r\n              <UpdateTextSubProcedure d={d} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Accordion.Toggle>\r\n      <Accordion.Collapse eventKey={d.id}>\r\n        <Card.Body>{d.text}</Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n  </div>\r\n);\r\n\r\nexport default TextSubProcedure;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport InterviewSubProcedure from './interviewSubProcedure/InterviewSubProcedure';\r\nimport TextSubProcedure from './textSubProcedure/TextSubProcedure';\r\n\r\n// eslint-disable-next-line consistent-return\r\nconst SubProcedure = ({ d, admin }) => {\r\n  if (d.type === 'TEXT') {\r\n    return (\r\n      <TextSubProcedure\r\n        d={d}\r\n        admin={admin}\r\n      />\r\n    );\r\n  } if (d.type === 'INTERVIEW') {\r\n    return (\r\n      <InterviewSubProcedure\r\n        d={d}\r\n        admin={admin}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nexport default SubProcedure;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport SubProcedure from './SubProcedure';\r\n\r\nconst SubProcedureList = ({ procedureCaseId, admin }) => {\r\n  const caseSubProcedures = useSelector((state) => state.subProcedures);\r\n  const listedProcedures = caseSubProcedures\r\n    .filter((p) => p.procedureCaseId === Number(procedureCaseId))\r\n    .sort((a, b) => a.priority - b.priority);\r\n\r\n  return (\r\n    <Accordion>\r\n      {listedProcedures.map((d) => (\r\n        <SubProcedure key={d.id} d={d} admin={admin} />\r\n      ))}\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default SubProcedureList;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\n\r\nconst AddTextSubProcedure = ({ handleSubProcedureAdd }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      priority: '',\r\n      title: '',\r\n      text: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: Yup.string()\r\n        .min(2, t('warningShort'))\r\n        .max(999, t('warningLong'))\r\n        .required(t('warningRequired')),\r\n      priority: Yup.number(),\r\n      text: Yup.string(),\r\n    }),\r\n    onSubmit: (values) => {\r\n      handleSubProcedureAdd({\r\n        priority: Number(values.priority),\r\n        type: 'TEXT',\r\n        title: values.title,\r\n        text: values.text,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"title\">\r\n        <Form.Label>{t('title')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder={t('write')}\r\n          {...formik.getFieldProps('title')}\r\n          isInvalid={!!formik.errors.title}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.title}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"priority\">\r\n        <Form.Label>{t('subProcedurePriority')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder={t('giveNumber')}\r\n          {...formik.getFieldProps('priority')}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"text\">\r\n        <Form.Label>{t('textToAdd')}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={10}\r\n          {...formik.getFieldProps('text')}\r\n        />\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmit')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddTextSubProcedure;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\n\r\nconst AddInterviewSubProcedure = ({ handleSubProcedureAdd }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      priority: '',\r\n      title: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: Yup.string()\r\n        .min(2, t('warningShort'))\r\n        .max(999, t('warningLong'))\r\n        .required(t('warningRequired')),\r\n      priority: Yup.number()\r\n        .required(t('warningRequired'))\r\n        .positive(t('warningPositiveInteger'))\r\n        .integer(t('warningPositiveInteger')),\r\n    }),\r\n    onSubmit: (values) => {\r\n      handleSubProcedureAdd({\r\n        priority: Number(values.priority),\r\n        type: 'INTERVIEW',\r\n        title: values.title,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"title\">\r\n        <Form.Label>{t('title')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder={t('write')}\r\n          {...formik.getFieldProps('title')}\r\n          isInvalid={!!formik.errors.title}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.title}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"priority\">\r\n        <Form.Label>{t('subProcedurePriority')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder={t('giveNumber')}\r\n          {...formik.getFieldProps('priority')}\r\n          isInvalid={!!formik.errors.priority}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.priority}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmit')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddInterviewSubProcedure;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable array-callback-return */\r\nimport React, { useState, useRef } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  useParams,\r\n} from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport AddUpdateModal from '../../../utils/AddUpdateModal';\r\nimport SubProcedureList from '../../subprocedure/components/SubProcedureList';\r\nimport AddTextSubProcedure from '../../subprocedure/components/textSubProcedure/AddTextSubProcedure';\r\nimport { addSubprocedure } from '../../subprocedure/reducers/subProceduresReducer';\r\nimport { setSuccess, setError } from '../../../utils/MessageBanner';\r\nimport AddInterviewSubProcedure from '../../subprocedure/components/interviewSubProcedure/AddInterviewSubProcedure';\r\n\r\nconst Procedure = ({ admin }) => {\r\n  const { t } = useTranslation();\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const [show, setShow] = useState(false);\r\n  const modalRef = useRef();\r\n\r\n  const showWhenVisible = { display: show ? '' : 'none' };\r\n\r\n  const handleVisibility = () => {\r\n    setShow(!show);\r\n  };\r\n\r\n  const handleSubProcedureAdd = (newSubProcedure) => {\r\n    modalRef.current.toggleVisibility();\r\n    try {\r\n      dispatch(addSubprocedure(newSubProcedure, Number(id)));\r\n      setSuccess(t('subProcedureUpdateSuccess'));\r\n    } catch (error) {\r\n      setError(t('subProcedureUpdateError'));\r\n    }\r\n  };\r\n\r\n  return (\r\n\r\n    <div id=\"wrapper\">\r\n      <h2>\r\n        {t('subProcedures')}\r\n      </h2>\r\n      {admin && (\r\n        <div>\r\n          <Button className=\"addButton\" onClick={handleVisibility} id=\"addNew\">\r\n            {t('buttonNewSubProcedure')}\r\n          </Button>\r\n          <div className=\"rows\" style={showWhenVisible}>\r\n            <AddUpdateModal buttonLabel={t('buttonAddNewText')} titleLabel={t('addTextSubProcedure')} ref={modalRef}>\r\n              <AddTextSubProcedure handleSubProcedureAdd={handleSubProcedureAdd} />\r\n            </AddUpdateModal>\r\n            <Button className=\"addButton question\" size=\"sm\">{t('buttonAddNewQuestion')}</Button>\r\n            <AddUpdateModal buttonLabel={t('buttonAddNewInterview')} titleLabel={t('addInterviewSubProcedure')} ref={modalRef}>\r\n              <AddInterviewSubProcedure handleSubProcedureAdd={handleSubProcedureAdd} />\r\n            </AddUpdateModal>\r\n            <Button className=\"addButton diagnosis\" size=\"sm\">{t('buttonAddFinalDiagnosis')}</Button>\r\n          </div>\r\n          <SubProcedureList procedureCaseId={id} admin={admin} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Procedure;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst FileBank = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('fileBank')}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileBank;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport {\r\n  Switch, Route, Redirect,\r\n} from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// Import components\r\nimport Frontpage from '../frontpage/Frontpage';\r\nimport HowToPlay from '../instructions/HowToPlay';\r\nimport Profile from '../users/Profile';\r\nimport Users from '../users/Users';\r\nimport Case from '../case/components/Case';\r\nimport Procedure from '../procedure/components/Procedure';\r\nimport FileBank from '../files/FileBank';\r\n\r\nconst Routing = () => {\r\n  const admin = useSelector((state) => state.admin);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/howtoplay\">\r\n        <HowToPlay />\r\n      </Route>\r\n      <Route path=\"/profile\">\r\n        <Profile />\r\n      </Route>\r\n      <Route path=\"/users\">\r\n        {admin ? <Users /> : <Redirect to=\"/\" />}\r\n      </Route>\r\n      <Route path=\"/cases/:id/procedure/:id\">\r\n        <Procedure admin={admin} />\r\n      </Route>\r\n      <Route path=\"/cases/:id\">\r\n        <Case admin={admin} />\r\n      </Route>\r\n      <Route path=\"/files\">\r\n        {admin ? <FileBank /> : <Redirect to=\"/\" />}\r\n      </Route>\r\n      <Route path=\"/\">\r\n        <Frontpage admin={admin} />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routing;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n} from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { initializeCasesAndUser } from './App/case/casesReducer';\r\nimport Navigationbar from './App/navigation/Navbar';\r\nimport Sidebar from './App/navigation/Sidebar';\r\nimport Routing from './App/navigation/Routing';\r\nimport MessageBanner from './utils/MessageBanner';\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  /* istanbul ignore next */\r\n  React.useEffect(() => {\r\n    dispatch(initializeCasesAndUser());\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Navigationbar />\r\n      <Sidebar />\r\n      <MessageBanner />\r\n      <Routing />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default (App);\r\n","const userReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case 'INITIALIZE_USER':\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport casesReducer from './App/case/casesReducer';\r\nimport userReducer from './App/users/reducers/userReducer';\r\nimport proceduresReducer from './App/procedure/proceduresReducer';\r\nimport proceduresUnderCasesReducer from './App/procedure/proceduresUnderCasesReducer';\r\nimport subProceduresReducer from './App/subprocedure/reducers/subProceduresReducer';\r\nimport differentialsReducer from './App/differential/reducers/differentialsReducer';\r\nimport differentialsUnderCasesReducer from './App/differential/reducers/differentialsUnderCasesReducer';\r\nimport differentialGroupsReducer from './App/differential/reducers/differentialGroupsReducer';\r\nimport differentialGroupsUnderCasesReducer from './App/differential/reducers/differentialGroupsUnderCasesReducer';\r\nimport optionGroupsReducer from './App/subprocedure/reducers/optionGroupsReducer';\r\nimport optionGroupsUnderSubProceduresReducer from './App/subprocedure/reducers/optionGroupsUnderSubProceduresReducer';\r\nimport optionsReducer from './App/subprocedure/reducers/optionReducer';\r\nimport optionsUnderSubProceduresReducer from './App/subprocedure/reducers/optionsUnderSubProceduresReducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\n\r\nconst reducer = combineReducers({\r\n  cases: casesReducer,\r\n  admin: userReducer,\r\n  procedures: proceduresReducer,\r\n  proceduresUnderCase: proceduresUnderCasesReducer,\r\n  subProcedures: subProceduresReducer,\r\n  optionGroups: optionGroupsReducer,\r\n  optionGroupsUnderSubProcedure: optionGroupsUnderSubProceduresReducer,\r\n  options: optionsReducer,\r\n  optionsUnderSubProcedure: optionsUnderSubProceduresReducer,\r\n  differentials: differentialsReducer,\r\n  differentialsUnderCase: differentialsUnderCasesReducer,\r\n  differentialGroups: differentialGroupsReducer,\r\n  differentialGroupsUnderCase: differentialGroupsUnderCasesReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\n\r\nexport default () => {\r\n  const store = createStore(\r\n    persistedReducer,\r\n    composeWithDevTools(\r\n      applyMiddleware(thunk),\r\n    ),\r\n  );\r\n  const persistor = persistStore(store);\r\n  return { store, persistor };\r\n};\r\n","/* eslint-disable linebreak-style */\r\n/* istanbul ignore file */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' // [::1] is the IPv6 localhost address.\r\n      || window.location.hostname === '[::1]'\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      || window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n      ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        // eslint-disable-next-line no-use-before-define\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        // eslint-disable-next-line no-use-before-define\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      // eslint-disable-next-line no-param-reassign\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n\r\n              // Execute callback\r\n              // eslint-disable-next-line no-lonely-if\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n          || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      });\r\n  }\r\n}\r\n","/* eslint-disable linebreak-style */\r\n/* istanbul ignore file */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport App from './App';\r\nimport createStore from './store';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './i18n/config';\r\n\r\nconst { store, persistor } = createStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}