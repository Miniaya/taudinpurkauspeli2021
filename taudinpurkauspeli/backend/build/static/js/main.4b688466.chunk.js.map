{"version":3,"sources":["utils/Helper.js","App/case/casesService.js","App/case/casesReducer.js","i18n/config.js","App/navigation/Navbar.js","App/navigation/Sidebar.js","utils/MessageBanner.js","App/case/components/NewCaseForm.js","App/differential/services/differentialsUnderCasesService.js","App/procedure/services/proceduresUnderCaseService.js","App/differential/services/differentialGroupsUnderCasesService.js","App/case/components/CopyCase.js","App/case/components/CaseCard.js","App/frontpage/Search.js","utils/AddUpdateModal.js","App/frontpage/Frontpage.js","App/instructions/HowToPlay.js","App/users/Profile.js","App/users/Users.js","App/procedure/components/NewProcedureForm.js","App/procedure/reducers/proceduresUnderCasesReducer.js","App/procedure/services/proceduresService.js","App/procedure/reducers/proceduresReducer.js","App/procedure/components/EditProcedure.js","App/procedure/components/ProcedureList.js","App/procedure/components/Procedures.js","App/differential/reducers/differentialsUnderCasesReducer.js","App/differential/components/UpdateDifferentialForm.js","App/differential/components/Differential.js","App/differential/components/DifferentialList.js","utils/CustomTypeaheadSelect.js","App/differential/components/AddDifferentialForm.js","App/differential/services/differentialsService.js","App/differential/reducers/differentialsReducer.js","App/differential/components/differentialGroup/DifferentialGroup.js","App/differential/components/differentialGroup/DifferentialGroupList.js","App/differential/components/differentialGroup/AddDifferentialGroupForm.js","App/differential/services/differentialGroupsService.js","App/differential/reducers/differentialGroupsUnderCasesReducer.js","App/differential/reducers/differentialGroupsReducer.js","App/differential/components/Differentials.js","App/case/components/HideCase.js","App/case/components/UpdateCaseTitle.js","App/anamnesis/UpdateAnamnesis.js","App/anamnesis/Anamnesis.js","App/subprocedure/services/subProceduresService.js","App/subprocedure/reducers/subProceduresReducer.js","App/subprocedure/services/optionGroupsService.js","App/subprocedure/services/optionGroupsUnderSubProceduresService.js","App/subprocedure/reducers/optionGroupsUnderSubProceduresReducer.js","App/subprocedure/reducers/optionGroupsReducer.js","App/subprocedure/services/optionsService.js","App/subprocedure/services/optionsUnderSubProceduresService.js","App/subprocedure/reducers/optionsUnderSubProceduresReducer.js","App/subprocedure/reducers/optionReducer.js","App/case/components/Case.js","App/subprocedure/components/option/optionGroup/AddOptionGroupForm.js","App/subprocedure/components/option/Option.js","App/subprocedure/components/option/OptionList.js","App/subprocedure/components/option/AddOptionForm.js","App/subprocedure/components/option/optionGroup/OptionGroup.js","App/subprocedure/components/option/optionGroup/OptionGroupList.js","App/subprocedure/components/interviewSubProcedure/InterviewSubProcedure.js","App/subprocedure/components/textSubProcedure/UpdateTextSubProcedureForm.js","App/subprocedure/components/textSubProcedure/TextSubProcedure.js","App/subprocedure/components/SubProcedure.js","App/subprocedure/components/SubProcedureList.js","App/subprocedure/components/textSubProcedure/AddTextSubProcedure.js","App/subprocedure/components/interviewSubProcedure/AddInterviewSubProcedure.js","App/procedure/components/Procedure.js","App/files/FileBank.js","App/navigation/Routing.js","App.js","App/users/reducers/userReducer.js","store.js","serviceWorker.js","index.js"],"names":["token","getConfig","headers","Authorization","getLanguage","localStorage","getItem","validateName","t","useTranslation","Yup","min","max","required","validatePriority","typeError","positive","integer","baseUrl","axios","get","then","response","data","newObject","post","put","id","delete","casesReducer","state","action","type","filter","c","map","i18n","use","LanguageDetector","init","initReactI18next","fallbackLng","lng","resources","fi","translations","require","en","ns","defaultNS","languages","Navigationbar","admin","useSelector","changeLanguage","language","window","location","reload","Navbar","collapseOnSelect","expand","variant","sticky","Brand","as","Link","to","Toggle","Collapse","Nav","className","NavDropdown","title","Item","onClick","eventKey","NavLink","href","Sidebar","setError","message","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","setSuccess","success","MessageBanner","newestOnTop","rtl","pauseOnFocusLoss","newCaseForm","addCase","formik","useFormik","initialValues","anamnesis","hidden","validationSchema","onSubmit","values","Form","noValidate","handleSubmit","spellCheck","Group","controlId","Label","Control","getFieldProps","isInvalid","errors","Feedback","rows","Check","label","Button","diffGroupCaseId","caseId","copyCase","caseToBeCopied","createProcedures","oldCaseId","newCopyId","size","event","preventDefault","caseObject","caseService","copy","ducGroupService","res","newCaseId","result","duckling","forEach","element","differentialGroupId","ducService","result2","element2","did","plaa","differentialId","description","copyTheDamnThing","pucService","CaseCard","dispatch","useDispatch","Card","style","width","cursor","Body","Title","Text","Footer","ProgressBar","now","CopyCase","createDifferentials","copyId","i","length","procedureId","priority","confirm","a","casesService","Search","newSearch","searchCases","htmlFor","value","onChange","AddUpdateModal","forwardRef","props","ref","useState","show","setShow","toggleVisibility","useImperativeHandle","buttonLabel","Modal","onHide","backdrop","keyboard","Header","closeButton","titleLabel","children","Frontpage","setNewSearch","modalRef","useRef","cases","casesToShow","toLowerCase","includes","target","NewCaseForm","newCase","current","content","console","log","Row","xs","md","Col","HowToPlay","Profile","Users","newProcedureForm","addProcedure","name","getProceduresUnderCase","proceduresUnderCasesService","proceduresUnderCase","createProcedureUnderCase","newProcedureUnderCase","updateProcedurePriority","procedure","procedureCaseId","proceduresReducer","p","EditProcedure","editProcedureFunc","setNewPriority","setNewProcedureTitle","useHistory","editProcedure","procedureToBeUpdated","Number","proceduresService","updateProcedure","margin","e","defaultValue","DragNDropList","proceduresHook","handleDragStart","handleDragEnd","handleDragEnter","submitForm","handleProcedureRemove","index","onDragStart","onDragEnd","onDragEnter","ProcedureList","draggingItem","dragOverItem","setProceduresHook","procedureToEdit","setProcedureToEdit","initialProcedures","sort","b","useEffect","procedures","Promise","all","listCopy","draggingItemContent","splice","handleEditId","removeProcedureUnderCase","Procedures","useParams","NewProcedureForm","procedureObject","newProcedure","createDifferentialUnderCase","differentialsUnderCasesService","newDifferentialUnderCase","differentialsUnderCasesReducer","UpdateDifferentialForm","updateDifferential","shape","disabled","placeholder","Differential","d","Accordion","updatedDifferential","DifferentialList","diffGroupDiffs","differentialsUnderCase","CustomTypeaheadSelect","useField","meta","helper","multiple","selected","setValue","onInputChange","text","onBlur","setTouched","allowNew","labelKey","options","emptyLabel","touched","AddDifferentialForm","addDifferential","differentials","differential","r","differentialsReducer","DifferentialGroup","differentialObject","differentialsService","newDifferential","createDifferential","DifferentialGroupList","caseDifferentialGroups","differentialGroupsUnderCase","AddDifferentialGroupForm","addDifferentialGroup","differentialGroups","group","createDifferentialGroupUnderCase","differentialGroupsUnderCasesService","newDifferentialGroupUnderCase","differentialGroupsUnderCasesReducer","differentialGroupsReducer","Differentials","differentialGroupObject","differentialGroup","differentialGroupsService","newDifferentialGroup","HideCase","hideCase","newHidden","setNewHidden","UpdateCaseTitle","updateCaseTitle","role","UpdateAnamnesis","updateAnamnesis","Anamnesis","find","handleCaseUpdate","updatedCase","subProceduresReducer","createOptionGroupUnderSubProcedure","service","newOptionGroupUnderSubProcedure","optionGroupsUnderSubProceduresReducer","optionGroupsReducer","createOptionUnderSubProcedure","newOption","optionsUnderSubProceduresReducer","optionsReducer","Case","subProceduresService","subprocedures","optionGroupsService","returnedOptionGroups","getOptionGroupsUnderSubProcedures","returnedOptions","getOptionsUnderSubProcedures","returnedDifferentials","returnedDifferentialsUnderCase","getDifferentialsUnderCase","returnedDifferentialGroups","returnedDifferentialGroupsUnderCase","getDifferentialGroupsUnderCase","ButtonGroup","marginBottom","path","NewOptionGroupForm","addOptionGroup","optionGroups","Option","optionObject","isRequired","OptionList","optionGroupSubProcedureId","optionsUnderSubProcedure","o","AddOptionForm","addOption","option","defaultChecked","OptionGroup","optionId","createOption","OptionGroupList","subProcedureId","subProcedureOptionGroups","optionGroupsUnderSubProcedure","InterviewSubProcedure","AddOptionGroupForm","optionGroup","newOptionGroup","optionGroupId","createOptionGroup","UpdateTextSubProcedureForm","updateTextSubProcedure","TextSubProcedure","updatedObject","subProcedureObject","SubProcedure","SubProcedureList","listedProcedures","subProcedures","AddTextSubProcedure","addSubProcedure","AddInterviewSubProcedure","Procedure","showWhenVisible","display","handleSubProcedureAdd","newSubProcedure","addedSubprocedure","FileBank","Routing","App","React","user","newToken","userReducer","persistConfig","key","storage","reducer","combineReducers","proceduresUnderCasesReducer","persistedReducer","persistReducer","Boolean","hostname","match","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b688466.chunk.js","sourcesContent":["import * as Yup from 'yup';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nlet token = null;\r\n\r\nexport const setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nexport const getConfig = () => ({ headers: { Authorization: token } });\r\n\r\nexport const getLanguage = () => (localStorage.getItem('i18nextLng') || 'fi');\r\n\r\nexport const validateName = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    Yup.string()\r\n      .min(2, t('warningShort'))\r\n      .max(999, t('warningLong'))\r\n      .required(t('warningRequired'))\r\n  );\r\n};\r\n\r\nexport const validatePriority = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    Yup.number()\r\n      .typeError(t('warningPositiveInteger'))\r\n      .required(t('warningRequired'))\r\n      .positive(t('warningPositiveInteger'))\r\n      .integer(t('warningPositiveInteger'))\r\n  );\r\n};\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../utils/Helper';\r\n\r\nconst baseUrl = '/api/cases';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (newObject) => axios.put(`${baseUrl}/${newObject.id}/${getLanguage()}`, newObject, getConfig());\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove,\r\n};\r\n","import casesService from './casesService';\r\nimport { setToken } from '../../utils/Helper';\r\n\r\nconst casesReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'INITIALIZE_CASES':\r\n      return action.data;\r\n    case 'NEW_CASE':\r\n      return [...state, action.data];\r\n    case 'REMOVE_CASE':\r\n      return state.filter((c) => c.id !== action.data);\r\n    case 'UPDATE_CASE':\r\n      return state.map((c) => (c.id !== action.data.id\r\n        ? c\r\n        : action.data));\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializeCasesAndUser = () => async (dispatch) => {\r\n  const { data, user } = await casesService.getAll();\r\n  dispatch({\r\n    type: 'INITIALIZE_CASES',\r\n    data,\r\n  });\r\n\r\n  setToken(user.token);\r\n  dispatch({\r\n    type: 'INITIALIZE_USER',\r\n    data: user.admin,\r\n  });\r\n};\r\n\r\nexport const createCase = (content) => async (dispatch) => {\r\n  const newCase = await casesService.create(content);\r\n  dispatch({\r\n    type: 'NEW_CASE',\r\n    data: newCase,\r\n  });\r\n};\r\n\r\nexport const removeCase = (id) => async (dispatch) => {\r\n  await casesService.remove(id);\r\n  dispatch({\r\n    type: 'REMOVE_CASE',\r\n    data: id,\r\n  });\r\n};\r\n\r\nexport const updateCase = (content) => async (dispatch) => {\r\n  await casesService.update(content);\r\n  dispatch({\r\n    type: 'UPDATE_CASE',\r\n    data: content,\r\n  });\r\n};\r\n\r\nexport default casesReducer;\r\n","/* eslint-disable linebreak-style */\r\n/* istanbul ignore file */\r\n/* eslint-disable linebreak-style */\r\nimport i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n// eslint-disable-next-line import/no-unresolved\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\ni18n.use(LanguageDetector).init();\r\n\r\ni18n.use(initReactI18next).init({\r\n  fallbackLng: 'fi',\r\n\r\n  // eslint-disable-next-line no-undef\r\n  lng: localStorage.getItem('i18nextLng') || 'fi',\r\n  resources: {\r\n    fi: {\r\n      // eslint-disable-next-line global-require\r\n      translations: require('./locales/fi/translations.json'),\r\n    },\r\n    en: {\r\n      // eslint-disable-next-line global-require\r\n      translations: require('./locales/en/translations.json'),\r\n    },\r\n  },\r\n  ns: ['translations'],\r\n  defaultNS: 'translations',\r\n});\r\n\r\ni18n.languages = ['fi', 'en'];\r\n\r\nexport default i18n;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavLink,\r\n  NavDropdown,\r\n} from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// Import translations\r\nimport { useTranslation } from 'react-i18next';\r\nimport i18n from '../../i18n/config';\r\n\r\nconst Navigationbar = () => {\r\n  const admin = useSelector((state) => state.admin);\r\n  const { t } = useTranslation();\r\n\r\n  /* istanbul ignore next */\r\n  const changeLanguage = (language) => {\r\n    i18n.changeLanguage(language);\r\n    window.location.reload(false);\r\n  };\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\" sticky=\"top\">\r\n      <Navbar.Brand as={Link} to=\"/\">{t('nameOfTheGame')}</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <NavDropdown title={t('selectLanguage')} id=\"selectLanguage\" className=\"navItems\">\r\n            <NavDropdown.Item onClick={() => changeLanguage('fi')} eventKey=\"fi\">{t('languageFinnish')}</NavDropdown.Item>\r\n            <NavDropdown.Item onClick={() => changeLanguage('en')} eventKey=\"en\">{t('languageEnglish')}</NavDropdown.Item>\r\n          </NavDropdown>\r\n          { admin && (\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/users\" className=\"navItems\">{t('userInformation')}</NavLink>\r\n          </Nav.Item>\r\n          )}\r\n          { admin && (\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/files\" className=\"navItems\">{t('fileBank')}</NavLink>\r\n          </Nav.Item>\r\n          )}\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/howtoplay\" className=\"navItems\">{t('howToPlay')}</NavLink>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/profile\" className=\"navItems\">{t('userProfile')}</NavLink>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <NavLink href=\"https://taudinpurkauspeli-taudinpurkauspeli2021.apps.ocp-prod-0.k8s.it.helsinki.fi/Shibboleth.sso/Logout\" className=\"navItems\">{t('logOut')}</NavLink>\r\n          </Nav.Item>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigationbar;\r\n","import React from 'react';\r\n\r\nconst Sidebar = () => (\r\n  <div id=\"sidebar\" />\r\n);\r\n\r\nexport default Sidebar;\r\n","/* istanbul ignore file */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable no-undef */\r\nimport React from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst MessageBanner = () => (\r\n  <ToastContainer\r\n    position=\"top-center\"\r\n    autoClose={3000}\r\n    hideProgressBar\r\n    newestOnTop={false}\r\n    closeOnClick\r\n    rtl={false}\r\n    pauseOnFocusLoss={false}\r\n    draggable={false}\r\n    pauseOnHover\r\n  />\r\n);\r\n\r\nexport const setError = (message) => {\r\n  toast.error(message, {\r\n    position: 'top-center',\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: false,\r\n    draggable: false,\r\n    progress: undefined,\r\n  });\r\n};\r\n\r\nexport const setSuccess = (message) => {\r\n  toast.success(message, {\r\n    position: 'top-center',\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: false,\r\n    draggable: false,\r\n    progress: undefined,\r\n  });\r\n};\r\n\r\nexport default MessageBanner;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { validateName } from '../../../utils/Helper';\r\n\r\nconst newCaseForm = ({ addCase }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: '',\r\n      anamnesis: '',\r\n      hidden: false,\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: validateName(),\r\n      anamnesis: Yup.string(),\r\n      hidden: Yup.bool(),\r\n    }),\r\n    onSubmit: (values) => {\r\n      addCase({\r\n        title: values.title,\r\n        anamnesis: values.anamnesis,\r\n        hidden: values.hidden,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit} spellCheck=\"false\">\r\n      <Form.Group controlId=\"title\">\r\n        <Form.Label>{t('caseTitle')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          {...formik.getFieldProps('title')}\r\n          isInvalid={!!formik.errors.title}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {formik.errors.title}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"anamnesis\">\r\n        <Form.Label>{t('caseAnamnesis')}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={3}\r\n          {...formik.getFieldProps('anamnesis')}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"hidden\">\r\n        <Form.Check\r\n          label={t('hideCase')}\r\n          {...formik.getFieldProps('hidden')}\r\n        />\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewCase')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default newCaseForm;\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/differentialsUnderCases';\r\n\r\nconst getAll = (diffGroupCaseId) => {\r\n  const request = axios.get(`${baseUrl}/${diffGroupCaseId}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}/${getLanguage()}`, newObject, getConfig());\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n};\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/proceduresUnderCases';\r\n\r\nconst getAll = (caseId) => {\r\n  const request = axios.get(`${baseUrl}/${caseId}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject, getConfig());\r\n\r\nconst remove = (id) => axios.delete(`${baseUrl}/${id}`, getConfig());\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove,\r\n};\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/differentialGroupsUnderCases';\r\n\r\nconst getAll = (caseId) => {\r\n  const request = axios.get(`${baseUrl}/${caseId}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n};\r\n","import { Button } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport caseService from '../casesService';\r\nimport ducService from '../../differential/services/differentialsUnderCasesService';\r\nimport pucService from '../../procedure/services/proceduresUnderCaseService';\r\n\r\n// Caseen liitetyt diffiryhmät\r\nimport ducGroupService from '../../differential/services/differentialGroupsUnderCasesService';\r\n\r\nconst copyCase = ({\r\n  caseToBeCopied, createProcedures,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const oldCaseId = caseToBeCopied.id;\r\n  let newCopyId = 0;\r\n\r\n  /* istanbul ignore next */\r\n  const copyTheDamnThing = (newCaseId, result) => {\r\n    let duckling = {};\r\n    result.forEach((element) => {\r\n      duckling = {\r\n        caseId: newCaseId,\r\n        differentialGroupId: element.id,\r\n      };\r\n      ducGroupService.create(duckling).then((res) => {\r\n        ducService.getAll(element.diffGroupCaseId)\r\n          .then((result2) => {\r\n            result2.forEach((element2) => {\r\n              const did = element2.id;\r\n              const plaa = {\r\n                diffGroupCaseId: res.id,\r\n                differentialId: did,\r\n                description: element2.description,\r\n              };\r\n              ducService.create(plaa);\r\n            });\r\n          });\r\n      });\r\n    });\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleCopy = (event) => {\r\n    event.preventDefault();\r\n    const caseObject = ({\r\n      title: caseToBeCopied.title,\r\n      anamnesis: caseToBeCopied.anamnesis,\r\n      hidden: caseToBeCopied.hidden,\r\n    });\r\n    caseService.create(caseObject)\r\n      .then((copy) => {\r\n        newCopyId = copy.id;\r\n      })\r\n      .then(() => {\r\n        ducGroupService.getAll(oldCaseId)\r\n          .then((res) => {\r\n            copyTheDamnThing(newCopyId, res);\r\n          });\r\n      })\r\n      .then(() => {\r\n        pucService.getAll(oldCaseId)\r\n          .then((res) => {\r\n            createProcedures(newCopyId, res);\r\n          });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Button variant=\"warning\" size=\"sm\" onClick={handleCopy}>{t('copy')}</Button>\r\n  );\r\n};\r\n\r\nexport default copyCase;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Card,\r\n  Button,\r\n  ProgressBar,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport CopyCase from './CopyCase';\r\nimport { setError, setSuccess } from '../../../utils/MessageBanner';\r\nimport ducService from '../../differential/services/differentialsUnderCasesService';\r\nimport pucService from '../../procedure/services/proceduresUnderCaseService';\r\nimport { removeCase } from '../casesReducer';\r\n\r\nconst CaseCard = ({ c, admin }) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n\r\n  /* istanbul ignore next */\r\n  const createDifferentials = (copyId, result) => {\r\n    for (let i = 0; i < result.length; i += 1) {\r\n      const { id, description } = result[i];\r\n      const object = {\r\n        caseId: copyId,\r\n        differentialId: id,\r\n        description,\r\n      };\r\n      ducService.create(object);\r\n    }\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const createProcedures = (copyId, result) => {\r\n    for (let i = 0; i < result.length; i += 1) {\r\n      const { procedureId, priority } = result[i];\r\n      const object = {\r\n        caseId: copyId,\r\n        procedureId,\r\n        priority,\r\n      };\r\n      pucService.create(object);\r\n    }\r\n  };\r\n\r\n  /* istanbull ignore next */\r\n  const handleCaseRemove = () => {\r\n    // eslint-disable-next-line no-alert\r\n    const confirmBox = window.confirm(t('deleteCaseConfirmation'));\r\n    if (confirmBox === true) {\r\n      try {\r\n        dispatch(removeCase(c.id));\r\n        setSuccess(t('deleteCaseSuccess'));\r\n      } catch (error) {\r\n        setError(t('deleteCaseError'));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card as={Link} to={`/cases/${c.id}`} style={{ width: '20rem', cursor: 'pointer' }} className=\"caseCard\">\r\n        <Card.Body>\r\n          <Card.Title>{c.title}</Card.Title>\r\n          <Card.Text>{c.anamnesis}</Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <ProgressBar className=\"progsbar\" variant=\"success\" now={25} label={`${25}%`} />\r\n        </Card.Footer>\r\n      </Card>\r\n\r\n      { admin && (\r\n        <div className=\"cardButtons\">\r\n          <Button className=\"editButton\" as={Link} to={`/cases/${c.id}`} size=\"sm\">{t('buttonEdit')}</Button>\r\n          <CopyCase\r\n            caseToBeCopied={c}\r\n            createDifferentials={createDifferentials}\r\n            createProcedures={createProcedures}\r\n          />\r\n          <Button className=\"removeButton\" size=\"sm\" variant=\"danger\" onClick={handleCaseRemove}>{t('buttonRemove')}</Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CaseCard;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Search = ({ newSearch, searchCases }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"search\">\r\n        {t('searchByTitle')}\r\n        &nbsp;\r\n        <input\r\n          id=\"search\"\r\n          value={newSearch}\r\n          onChange={searchCases}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState, useImperativeHandle, forwardRef } from 'react';\r\nimport {\r\n  Button, Modal,\r\n} from 'react-bootstrap';\r\n\r\nconst AddUpdateModal = forwardRef((props, ref) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const toggleVisibility = () => setShow(!show);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    toggleVisibility,\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      <Button className={props.className ? props.className : 'addButton text'} onClick={toggleVisibility} size=\"sm\">\r\n        {props.buttonLabel}\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        onHide={toggleVisibility}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{props.titleLabel}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {props.children}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default AddUpdateModal;\r\n","import React, { useState, useRef } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Col,\r\n  Row,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { setSuccess, setError } from '../../utils/MessageBanner';\r\nimport { createCase } from '../case/casesReducer';\r\n\r\nimport NewCaseForm from '../case/components/NewCaseForm';\r\nimport CaseCard from '../case/components/CaseCard';\r\nimport Search from './Search';\r\nimport AddUpdateModal from '../../utils/AddUpdateModal';\r\n\r\nconst Frontpage = ({ admin }) => {\r\n  const { t } = useTranslation();\r\n  const [newSearch, setNewSearch] = useState('');\r\n  const dispatch = useDispatch();\r\n  const modalRef = useRef();\r\n  const cases = useSelector((state) => state.cases);\r\n\r\n  /* istanbul ignore next */\r\n  const handleCaseAdd = (newCase) => {\r\n    modalRef.current.toggleVisibility();\r\n    try {\r\n      dispatch(createCase(newCase));\r\n      setSuccess(t('caseAddSuccess'));\r\n    } catch (error) {\r\n      // eslint-disable-next-line no-console\r\n      console.log(error);\r\n      setError(t('caseAddError'));\r\n    }\r\n  };\r\n\r\n  const searchCases = (event) => {\r\n    setNewSearch(event.target.value);\r\n  };\r\n\r\n  const casesToShow = !newSearch\r\n    ? cases : cases.filter((c) => c.title.toLowerCase().includes(newSearch.toLowerCase()));\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('frontpageTitle')}</h2>\r\n      <p>{t('frontpageText')}</p>\r\n      <Search newSearch={newSearch} searchCases={searchCases} />\r\n      <br />\r\n      {admin && (\r\n        <div>\r\n          <AddUpdateModal buttonLabel={t('buttonNewCase')} titleLabel={t('addCase')} ref={modalRef}>\r\n            <NewCaseForm addCase={handleCaseAdd} />\r\n          </AddUpdateModal>\r\n          <br />\r\n          <h3>{t('caseHidden')}</h3>\r\n          <hr />\r\n        </div>\r\n      )}\r\n      <Row xs=\"auto\" md=\"auto\" className=\"g-4\">\r\n        {admin && (\r\n          casesToShow.filter((c) => c.hidden).map((c) => (\r\n            <Col key={c.id}>\r\n              <CaseCard c={c} admin={admin} />\r\n            </Col>\r\n          ))\r\n        )}\r\n      </Row>\r\n      <br />\r\n      <h3>{t('casePlayable')}</h3>\r\n      <hr />\r\n      <Row xs=\"auto\" md=\"auto\" className=\"g-4\">\r\n        {casesToShow.filter((c) => !c.hidden).map((c) => (\r\n          <Col key={c.id}>\r\n            <CaseCard c={c} admin={admin} />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default Frontpage;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst HowToPlay = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('howToPlay')}</h2>\r\n      <p>{t('gameInstructions')}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HowToPlay;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Profile = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('userProfile')}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Users = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('userInformation')}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { validateName } from '../../../utils/Helper';\r\n\r\nconst newProcedureForm = ({ addProcedure }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: validateName(),\r\n    }),\r\n    onSubmit: (values) => {\r\n      addProcedure({\r\n        name: values.title,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"title\">\r\n        <Form.Label>{t('procedureTitle')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          {...formik.getFieldProps('title')}\r\n          isInvalid={!!formik.errors.title}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {formik.errors.title}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Button type=\"submit\" className=\"submitButton\">{t('buttonSubmitNewProcedure')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default newProcedureForm;\r\n","import proceduresUnderCasesService from '../services/proceduresUnderCaseService';\r\n\r\nconst proceduresReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_PROCEDURES_UNDER_CASE':\r\n      return action.data;\r\n    case 'NEW_PROCEDURE_UNDER_CASE':\r\n      return [...state, action.data];\r\n    case 'UPDATE_PROCEDURE':\r\n      return state.map((p) => (p.id !== action.data.id\r\n        ? p\r\n        : action.data));\r\n    case 'REMOVE_PROCEDURE_UNDER_CASE':\r\n      return state.filter((p) => p.id !== action.data);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getProceduresUnderCase = (caseId) => async (dispatch) => {\r\n  const proceduresUnderCase = await proceduresUnderCasesService.getAll(caseId);\r\n  dispatch({\r\n    type: 'GET_PROCEDURES_UNDER_CASE',\r\n    data: proceduresUnderCase || null,\r\n  });\r\n};\r\n\r\nexport const createProcedureUnderCase = (content) => async (dispatch) => {\r\n  const newProcedureUnderCase = await proceduresUnderCasesService.create(content);\r\n  dispatch({\r\n    type: 'NEW_PROCEDURE_UNDER_CASE',\r\n    data: newProcedureUnderCase,\r\n  });\r\n};\r\n\r\nexport const updateProcedurePriority = (procedure) => async (dispatch) => {\r\n  await proceduresUnderCasesService.update(procedure.procedureCaseId, procedure);\r\n  dispatch({\r\n    type: 'UPDATE_PROCEDURE',\r\n    data: procedure,\r\n  });\r\n};\r\n\r\nexport const updateProcedurePriorities = (caseId, procedures) => async (dispatch) => {\r\n  await Promise.all(procedures.map((p, index) => proceduresUnderCasesService\r\n    .update(\r\n      p.procedureCaseId,\r\n      { priority: index + 1 },\r\n    )));\r\n  dispatch(getProceduresUnderCase(caseId));\r\n};\r\n\r\nexport const removeProcedureUnderCase = (procedureId) => async (dispatch) => {\r\n  await proceduresUnderCasesService.remove(procedureId);\r\n  dispatch({\r\n    type: 'REMOVE_PROCEDURE_UNDER_CASE',\r\n    data: procedureId,\r\n  });\r\n};\r\n\r\nexport default proceduresReducer;\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/procedures';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}/${getLanguage()}`, newObject, getConfig());\r\n\r\nexport default {\r\n  create,\r\n  getAll,\r\n  update,\r\n};\r\n","import proceduresService from '../services/proceduresService';\r\nimport { createProcedureUnderCase, updateProcedurePriority } from './proceduresUnderCasesReducer';\r\n\r\nconst proceduresReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_PROCEDURES':\r\n      return action.data;\r\n    case 'NEW_PROCEDURE':\r\n      return [...state, action.data];\r\n    case 'UPDATE_PROCEDURE':\r\n      return state.map((p) => (p.id !== action.data.id\r\n        ? p\r\n        : {\r\n          id: p.id,\r\n          name: p.name,\r\n        }));\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getProcedures = () => async (dispatch) => {\r\n  const procedures = await proceduresService.getAll();\r\n  dispatch({\r\n    type: 'GET_PROCEDURES',\r\n    data: procedures || null,\r\n  });\r\n};\r\n\r\nexport const createProcedure = (caseId, procedure) => async (dispatch) => {\r\n  const newProcedure = await proceduresService.create(procedure);\r\n\r\n  dispatch({\r\n    type: 'NEW_PROCEDURE',\r\n    data: newProcedure,\r\n  });\r\n\r\n  dispatch(createProcedureUnderCase({\r\n    caseId,\r\n    procedureId: newProcedure.id,\r\n    priority: 1,\r\n  }));\r\n};\r\n\r\nexport const updateProcedure = (procedure) => async (dispatch) => {\r\n  await proceduresService.update(procedure.id, procedure);\r\n  dispatch(updateProcedurePriority(procedure));\r\n};\r\n\r\nexport default proceduresReducer;\r\n","/* istanbul ignore file */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateProcedure } from '../reducers/proceduresReducer';\r\n\r\nconst EditProcedure = ({ procedure, caseId, editProcedureFunc }) => {\r\n  const [newPriority, setNewPriority] = useState(procedure.priority);\r\n  const [newProcedureTitle, setNewProcedureTitle] = useState(procedure.name);\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const baseUrl = `/cases/${caseId}`;\r\n\r\n  const handlePriorityChange = (event) => {\r\n    setNewPriority(event.target.value);\r\n  };\r\n\r\n  const handleTitleChange = (event) => {\r\n    setNewProcedureTitle(event.target.value);\r\n  };\r\n\r\n  const editProcedure = (event) => {\r\n    event.preventDefault();\r\n    setNewProcedureTitle(event.target[0].value);\r\n    setNewPriority(event.target[1].value);\r\n    // eslint-disable-next-line no-param-reassign\r\n\r\n    const procedureToBeUpdated = {\r\n      ...procedure,\r\n      priority: Number(event.target[1].value),\r\n      name: event.target[0].value,\r\n    };\r\n\r\n    if (editProcedureFunc != null) {\r\n      editProcedureFunc(procedureToBeUpdated);\r\n    }\r\n    dispatch(updateProcedure(procedureToBeUpdated));\r\n  };\r\n\r\n  return (\r\n    <div id=\"editProcedureForm\" key={procedure.priority}>\r\n      <h2>{t('editProcedure')}</h2>\r\n      <Button className=\"procedureButton goTo\" as={Link} to={`${baseUrl}/procedure/${procedure.id}`} style={{ margin: 15 }}>{t('goToProcedure')}</Button>\r\n      <form onSubmit={(e) => editProcedure(e)}>\r\n        <p>\r\n          <label htmlFor=\"title\">\r\n            {t('procedureTitle')}\r\n          </label>\r\n          <br />\r\n          <input\r\n            id=\"title\"\r\n            type=\"text\"\r\n            defaultValue={procedure.name}\r\n            onChange={handleTitleChange}\r\n            className=\"formInput\"\r\n          />\r\n        </p>\r\n        <p>\r\n          <label htmlFor=\"priority\">\r\n            {t('procedurePriority')}\r\n          </label>\r\n          <br />\r\n          <input\r\n            id=\"priority\"\r\n            type=\"integer\"\r\n            onChange={handlePriorityChange}\r\n            defaultValue={procedure.priority}\r\n            className=\"formInput\"\r\n          />\r\n        </p>\r\n        <p>\r\n          <Button type=\"submit\" id=\"submit\" className=\"submitButton\">{t('buttonSave')}</Button>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProcedure;\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { updateProcedurePriorities, removeProcedureUnderCase } from '../reducers/proceduresUnderCasesReducer';\r\nimport EditProcedure from './EditProcedure';\r\nimport { setSuccess, setError } from '../../../utils/MessageBanner';\r\n\r\nconst DragNDropList = ({\r\n  proceduresHook,\r\n  handleDragStart,\r\n  handleDragEnd,\r\n  handleDragEnter,\r\n  t,\r\n  submitForm,\r\n  handleProcedureRemove,\r\n}) => (\r\n  proceduresHook\r\n    && proceduresHook.map((p, index) => (\r\n      <h4\r\n        onDragStart={(e) => handleDragStart(e, index)}\r\n        onDragEnd={() => handleDragEnd()}\r\n        onDragEnter={(e) => handleDragEnter(e, index)}\r\n        key={index}\r\n        draggable\r\n      >\r\n        <div className=\"rows\">\r\n          <Button className=\"procedureButton\">\r\n            {p.priority}\r\n            &nbsp;\r\n            {p.name}\r\n          </Button>\r\n          <form onSubmit={(e) => submitForm(p, e)} className=\"handleEdits\">\r\n            <Button type=\"submit\" className=\"editButton\" key={index} size=\"sm\">{t('buttonEdit') }</Button>\r\n          </form>\r\n          <Button className=\"removeButton\" size=\"sm\" variant=\"danger\" onClick={() => handleProcedureRemove(p.id)}>{t('buttonRemove')}</Button>\r\n        </div>\r\n      </h4>\r\n    ))\r\n);\r\n\r\nconst ProcedureList = ({ id }) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const draggingItem = useRef();\r\n  const dragOverItem = useRef();\r\n  const [proceduresHook, setProceduresHook] = useState([]);\r\n  const [procedureToEdit, setProcedureToEdit] = useState(null);\r\n\r\n  const initialProcedures = useSelector((state) => {\r\n    const { proceduresUnderCase } = state;\r\n    return proceduresUnderCase\r\n      .sort((a, b) => a.priority - b.priority);\r\n  });\r\n\r\n  useEffect(() => {\r\n    setProceduresHook(initialProcedures);\r\n  }, [initialProcedures]);\r\n\r\n  /* istanbul ignore next */\r\n  const handleEditId = (p) => {\r\n    setProcedureToEdit(p);\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const submitForm = (p, e) => {\r\n    e.preventDefault();\r\n    handleEditId(p);\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleProcedureRemove = (procedureId) => {\r\n    // eslint-disable-next-line no-alert\r\n    const confirmBox = window.confirm(t('deleteProcedureUnderCaseConfirmation'));\r\n    if (confirmBox === true) {\r\n      try {\r\n        dispatch(removeProcedureUnderCase(procedureId));\r\n        setSuccess(t('deleteProcedureUnderCaseSuccess'));\r\n      } catch (error) {\r\n        setError(t('deleteProcedureUnderCaseError'));\r\n      }\r\n    }\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleDragStart = (e, position) => {\r\n    draggingItem.current = position;\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleDragEnter = (e, position) => {\r\n    dragOverItem.current = position;\r\n    const listCopy = [...proceduresHook];\r\n    const draggingItemContent = listCopy[draggingItem.current];\r\n    listCopy.splice(draggingItem.current, 1);\r\n    listCopy.splice(dragOverItem.current, 0, draggingItemContent);\r\n    draggingItem.current = dragOverItem.current;\r\n    dragOverItem.current = null;\r\n    setProceduresHook(listCopy);\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleDragEnd = () => {\r\n    dispatch(updateProcedurePriorities(id, proceduresHook));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DragNDropList\r\n        proceduresHook={proceduresHook}\r\n        handleDragStart={handleDragStart}\r\n        handleDragEnd={handleDragEnd}\r\n        handleDragEnter={handleDragEnter}\r\n        t={t}\r\n        submitForm={submitForm}\r\n        handleProcedureRemove={handleProcedureRemove}\r\n      />\r\n      { procedureToEdit ? (\r\n        <EditProcedure procedure={procedureToEdit} caseId={id} />\r\n      ) : (\r\n        <p> </p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedureList;\r\n","import React, { useRef } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport NewProcedureForm from './NewProcedureForm';\r\nimport ProcedureList from './ProcedureList';\r\nimport AddUpdateModal from '../../../utils/AddUpdateModal';\r\nimport { createProcedure } from '../reducers/proceduresReducer';\r\nimport { setSuccess, setError } from '../../../utils/MessageBanner';\r\n\r\nconst Procedures = ({ admin }) => {\r\n  const { t } = useTranslation();\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const modalRef = useRef();\r\n\r\n  /* istanbul ignore next */\r\n  const handleProcedureAdd = (procedureObject) => {\r\n    modalRef.current.toggleVisibility();\r\n    try {\r\n      dispatch(createProcedure(Number(id), procedureObject));\r\n      setSuccess(t('procedureAddSuccess'));\r\n    } catch (error) {\r\n      setError(t('procedureAddError'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{t('procedures')}</h2>\r\n      { admin && (\r\n        <AddUpdateModal buttonLabel={t('buttonNewProcedure')} titleLabel={t('addProcedure')} ref={modalRef}>\r\n          <NewProcedureForm addProcedure={handleProcedureAdd} />\r\n        </AddUpdateModal>\r\n      )}\r\n      <ProcedureList id={id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Procedures;\r\n","import differentialsUnderCasesService from '../services/differentialsUnderCasesService';\r\n\r\nconst differentialsUnderCasesReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_DIFFERENTIALSUNDERCASE':\r\n      return action.data;\r\n    case 'NEW_DIFFERENTIALUNDERCASE':\r\n      return [...state, action.data];\r\n    case 'UPDATE_DIFFERENTIALUNDERCASE':\r\n      return state.map((p) => (p.id !== action.data.id\r\n        ? p\r\n        : action.data\r\n      ));\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getDifferentialsUnderCase = (id) => async (dispatch) => {\r\n  const returnedDifferentialsUnderCase = await differentialsUnderCasesService.getAll(id);\r\n  dispatch({\r\n    type: 'GET_DIFFERENTIALSUNDERCASE',\r\n    data: returnedDifferentialsUnderCase || null,\r\n  });\r\n};\r\n\r\nexport const createDifferentialUnderCase = (content) => async (dispatch) => {\r\n  const newDifferentialUnderCase = await differentialsUnderCasesService.create(content);\r\n  dispatch({\r\n    type: 'NEW_DIFFERENTIALUNDERCASE',\r\n    data: newDifferentialUnderCase,\r\n  });\r\n};\r\n\r\nexport const updateDifferentialUnderCase = (content) => async (dispatch) => {\r\n  await differentialsUnderCasesService.update(content.id, content);\r\n  dispatch({\r\n    type: 'UPDATE_DIFFERENTIALUNDERCASE',\r\n    data: content,\r\n  });\r\n};\r\n\r\nexport default differentialsUnderCasesReducer;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\n\r\nconst UpdateDifferentialForm = ({\r\n  name,\r\n  description,\r\n  updateDifferential,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name,\r\n      description,\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      description: Yup.string(),\r\n    }),\r\n    onSubmit: (values) => {\r\n      updateDifferential({\r\n        description: values.description,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"name\">\r\n        <Form.Label>{t('title')}</Form.Label>\r\n        <Form.Control\r\n          disabled\r\n          type=\"text\"\r\n          placeholder={t('write')}\r\n          {...formik.getFieldProps('name')}\r\n        />\r\n        <Form.Text className=\"text-muted\">\r\n          {t('differentialNameInstruction')}\r\n        </Form.Text>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"description\">\r\n        <Form.Label>{t('description')}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={10}\r\n          {...formik.getFieldProps('description')}\r\n        />\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonUpdate')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default UpdateDifferentialForm;\r\n","import React, { useRef } from 'react';\r\nimport { Accordion, Card } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch } from 'react-redux';\r\nimport AddUpdateModal from '../../../utils/AddUpdateModal';\r\nimport { setError, setSuccess } from '../../../utils/MessageBanner';\r\nimport { updateDifferentialUnderCase } from '../reducers/differentialsUnderCasesReducer';\r\nimport UpdateDifferentialForm from './UpdateDifferentialForm';\r\n\r\nconst Differential = ({\r\n  d, admin,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const modalRef = useRef();\r\n\r\n  const handleDifferentialUpdate = (updatedDifferential) => {\r\n    modalRef.current.toggleVisibility();\r\n    try {\r\n      dispatch(updateDifferentialUnderCase({\r\n        ...d,\r\n        description: updatedDifferential.description,\r\n      }));\r\n      setSuccess(t('differentialUpdateSuccess'));\r\n    } catch {\r\n      setError('differentialUpdateError');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Accordion.Toggle as={Card.Header} eventKey={d.id} id=\"differentialName\">\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          {d.name}\r\n          {admin && (\r\n          <div className=\"cardButtons\">\r\n            <AddUpdateModal className=\"editButton\" buttonLabel={t('buttonEdit')} titleLabel={t('updateSubProcedure')} ref={modalRef}>\r\n              <UpdateDifferentialForm\r\n                name={d.name}\r\n                description={d.description}\r\n                updateDifferential={handleDifferentialUpdate}\r\n              />\r\n            </AddUpdateModal>\r\n          </div>\r\n          )}\r\n        </div>\r\n      </Accordion.Toggle>\r\n      <Accordion.Collapse eventKey={d.id}>\r\n        <Card.Body>{d.description}</Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Differential;\r\n","import React from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport Differential from './Differential';\r\n\r\nconst DifferentialList = ({ diffGroupCaseId, admin }) => {\r\n  const caseDifferentials = useSelector((state) => state.differentialsUnderCase);\r\n  const diffGroupDiffs = caseDifferentials.filter((d) => d.diffGroupCaseId === diffGroupCaseId);\r\n\r\n  return (\r\n    <Accordion>\r\n      {diffGroupDiffs.map((d) => (\r\n        <Differential\r\n          key={d.id}\r\n          d={d}\r\n          admin={admin}\r\n        />\r\n      ))}\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default DifferentialList;\r\n","import React from 'react';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport { useField } from 'formik';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst CustomTypeaheadSelect = (props) => {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [field, meta, helper] = useField(props);\r\n  const { t } = useTranslation();\r\n  return (\r\n    <>\r\n      <Form.Group controlId={`form-${props.name}`}>\r\n        <Form.Label>{props.label}</Form.Label>\r\n        <Typeahead\r\n          id={props.name}\r\n          multiple={false}\r\n          onChange={(selected) => {\r\n            const value = selected.length > 0 ? selected[0].name : '';\r\n            helper.setValue(value);\r\n          }}\r\n          onInputChange={(text) => helper.setValue(text)}\r\n          onBlur={() => helper.setTouched(true)}\r\n          allowNew={false}\r\n          labelKey={props.name}\r\n          options={props.options}\r\n          placeholder={t('write')}\r\n          emptyLabel=\"\"\r\n          {...(meta.touched && meta.error\r\n            ? { isInvalid: true, className: 'is-invalid' }\r\n            : { isInvalid: false })}\r\n          {...props}\r\n        />\r\n        {meta.touched && meta.error ? (\r\n          <div className=\"invalid-feedback\">{meta.error}</div>\r\n        ) : null}\r\n      </Form.Group>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomTypeaheadSelect;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useFormik, FormikProvider } from 'formik';\r\nimport { useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { validateName } from '../../../utils/Helper';\r\nimport CustomTypeaheadSelect from '../../../utils/CustomTypeaheadSelect';\r\n\r\nconst AddDifferentialForm = ({ addDifferential }) => {\r\n  const { t } = useTranslation();\r\n  const differentials = useSelector((state) => state.differentials);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      description: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: validateName(),\r\n      description: Yup.string(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      const differential = differentials.filter((r) => r.name === values.name);\r\n      addDifferential(\r\n        differential.length === 0\r\n          ? { ...values }\r\n          : { ...differential[0], ...values },\r\n      );\r\n    },\r\n  });\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form noValidate onSubmit={formik.handleSubmit}>\r\n        <Form.Group controlId=\"name\">\r\n          <CustomTypeaheadSelect\r\n            name=\"name\"\r\n            label={t('addDifferential')}\r\n            options={differentials}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>{t('description')}</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={3}\r\n            {...formik.getFieldProps('description')}\r\n          />\r\n        </Form.Group>\r\n        <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n};\r\n\r\nexport default AddDifferentialForm;\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/differentials';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}/${getLanguage()}`, newObject, getConfig());\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove,\r\n};\r\n","import differentialsService from '../services/differentialsService';\r\nimport { createDifferentialUnderCase } from './differentialsUnderCasesReducer';\r\n\r\nconst differentialsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_DIFFERENTIALS':\r\n      return action.data;\r\n    case 'NEW_DIFFERENTIAL':\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getDifferentials = () => async (dispatch) => {\r\n  const returnedDifferentials = await differentialsService.getAll();\r\n  dispatch({\r\n    type: 'GET_DIFFERENTIALS',\r\n    data: returnedDifferentials || null,\r\n  });\r\n};\r\n\r\nexport const createDifferential = (diffGroupCaseId, differential) => async (dispatch) => {\r\n  let { id } = differential;\r\n\r\n  if (id === undefined) {\r\n    const newDifferential = await differentialsService.create({ name: differential.name });\r\n\r\n    dispatch({\r\n      type: 'NEW_DIFFERENTIAL',\r\n      data: newDifferential,\r\n    });\r\n\r\n    id = newDifferential.id;\r\n  }\r\n\r\n  dispatch(createDifferentialUnderCase({\r\n    diffGroupCaseId,\r\n    differentialId: id,\r\n    description: differential.description,\r\n  }));\r\n};\r\n\r\nexport default differentialsReducer;\r\n","import React, { useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Card } from 'react-bootstrap';\r\nimport DifferentialList from '../DifferentialList';\r\nimport AddDifferentialForm from '../AddDifferentialForm';\r\nimport AddUpdateModal from '../../../../utils/AddUpdateModal';\r\nimport { createDifferential } from '../../reducers/differentialsReducer';\r\nimport { setSuccess, setError } from '../../../../utils/MessageBanner';\r\n\r\nconst DifferentialGroup = ({\r\n  diffGroupCaseId, name, admin,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const modalRef = useRef();\r\n\r\n  /* istanbul ignore next */\r\n  const handleDifferentialAdd = (differentialObject) => {\r\n    modalRef.current.toggleVisibility();\r\n    try {\r\n      dispatch(createDifferential(diffGroupCaseId, differentialObject));\r\n      setSuccess(t('differentialAddSuccess'));\r\n    } catch (error) {\r\n      // eslint-disable-next-line no-console\r\n      console.log(error);\r\n      setError(t('differentialAddError'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card style={{ width: '60rem' }}>\r\n      <Card.Header>{name}</Card.Header>\r\n      <Card.Body>\r\n        <DifferentialList diffGroupCaseId={diffGroupCaseId} admin={admin} />\r\n        {admin && (\r\n          <AddUpdateModal buttonLabel={t('buttonNewDifferential')} titleLabel={t('addDifferential')} ref={modalRef}>\r\n            <AddDifferentialForm addDifferential={handleDifferentialAdd} />\r\n          </AddUpdateModal>\r\n        )}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DifferentialGroup;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport DifferentialGroup from './DifferentialGroup';\r\n\r\nconst DifferentialGroupList = ({ admin }) => {\r\n  const caseDifferentialGroups = useSelector((state) => state.differentialGroupsUnderCase);\r\n\r\n  return (\r\n    <div data-testid=\"diffGroupList\">\r\n      {caseDifferentialGroups.map((d) => (\r\n        <DifferentialGroup\r\n          key={d.id}\r\n          diffGroupCaseId={d.diffGroupCaseId}\r\n          name={d.name}\r\n          admin={admin}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DifferentialGroupList;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector } from 'react-redux';\r\nimport { useFormik, FormikProvider } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { validateName } from '../../../../utils/Helper';\r\nimport CustomTypeaheadSelect from '../../../../utils/CustomTypeaheadSelect';\r\n\r\nconst AddDifferentialGroupForm = ({ addDifferentialGroup }) => {\r\n  const { t } = useTranslation();\r\n  const differentialGroups = useSelector((state) => state.differentialGroups);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: validateName(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      const group = differentialGroups.filter((r) => r.name === values.name);\r\n      addDifferentialGroup(\r\n        group.length === 0\r\n          ? values\r\n          : group[0],\r\n      );\r\n    },\r\n  });\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form noValidate onSubmit={formik.handleSubmit}>\r\n        <CustomTypeaheadSelect\r\n          name=\"name\"\r\n          label={t('addDifferentialGroup')}\r\n          options={differentialGroups}\r\n        />\r\n        <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n};\r\n\r\nexport default AddDifferentialGroupForm;\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/differentialGroups';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n};\r\n","import differentialGroupsUnderCasesService from '../services/differentialGroupsUnderCasesService';\r\n\r\nconst differentialGroupsUnderCasesReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_DIFFERENTIALGROUPS_UNDER_CASE':\r\n      return action.data;\r\n    case 'NEW_DIFFERENTIALGROUP_UNDER_CASE':\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getDifferentialGroupsUnderCase = (id) => async (dispatch) => {\r\n  const returnedDifferentialGroupsUnderCase = await differentialGroupsUnderCasesService.getAll(id);\r\n  dispatch({\r\n    type: 'GET_DIFFERENTIALGROUPS_UNDER_CASE',\r\n    data: returnedDifferentialGroupsUnderCase || null,\r\n  });\r\n};\r\n\r\nexport const createDifferentialGroupUnderCase = (content) => async (dispatch) => {\r\n  const newDifferentialGroupUnderCase = await differentialGroupsUnderCasesService.create(content);\r\n  dispatch({\r\n    type: 'NEW_DIFFERENTIALGROUP_UNDER_CASE',\r\n    data: newDifferentialGroupUnderCase,\r\n  });\r\n};\r\n\r\nexport default differentialGroupsUnderCasesReducer;\r\n","import differentialGroupsService from '../services/differentialGroupsService';\r\nimport { createDifferentialGroupUnderCase } from './differentialGroupsUnderCasesReducer';\r\n\r\nconst differentialGroupsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_DIFFERENTIALGROUPS':\r\n      return action.data;\r\n    case 'NEW_DIFFERENTIALGROUP':\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getDifferentialGroups = () => async (dispatch) => {\r\n  const returnedDifferentialGroups = await differentialGroupsService.getAll();\r\n  dispatch({\r\n    type: 'GET_DIFFERENTIALGROUPS',\r\n    data: returnedDifferentialGroups || null,\r\n  });\r\n};\r\n\r\nexport const createDifferentialGroup = (caseId, differentialGroup) => async (dispatch) => {\r\n  let { id } = differentialGroup;\r\n\r\n  if (id === undefined) {\r\n    const newDifferentialGroup = await differentialGroupsService.create(differentialGroup);\r\n\r\n    dispatch({\r\n      type: 'NEW_DIFFERENTIALGROUP',\r\n      data: newDifferentialGroup,\r\n    });\r\n\r\n    id = newDifferentialGroup.id;\r\n  }\r\n\r\n  dispatch(createDifferentialGroupUnderCase({\r\n    caseId,\r\n    differentialGroupId: id,\r\n  }));\r\n};\r\n\r\nexport default differentialGroupsReducer;\r\n","import React, { useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch } from 'react-redux';\r\nimport DifferentialGroupList from './differentialGroup/DifferentialGroupList';\r\nimport AddUpdateModal from '../../../utils/AddUpdateModal';\r\nimport AddDifferentialGroupForm from './differentialGroup/AddDifferentialGroupForm';\r\nimport { createDifferentialGroup } from '../reducers/differentialGroupsReducer';\r\nimport { setSuccess, setError } from '../../../utils/MessageBanner';\r\n\r\nconst Differentials = ({ admin }) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const modalRef = useRef();\r\n  const { id } = useParams();\r\n\r\n  /* istanbul ignore next */\r\n  const handleDifferentialGroupAdd = (differentialGroupObject) => {\r\n    modalRef.current.toggleVisibility();\r\n    try {\r\n      dispatch(createDifferentialGroup(Number(id), differentialGroupObject));\r\n      setSuccess(t('differentialGroupUpdateSuccess'));\r\n    } catch (error) {\r\n      // eslint-disable-next-line no-console\r\n      console.log(error);\r\n      setError(t('differentialGroupUpdateError'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        {t('Differentials')}\r\n      </h2>\r\n      {admin && (\r\n        <AddUpdateModal buttonLabel={t('buttonNewDifferentialGroup')} titleLabel={t('addDifferentialGroup')} ref={modalRef}>\r\n          <AddDifferentialGroupForm addDifferentialGroup={handleDifferentialGroupAdd} />\r\n        </AddUpdateModal>\r\n      )}\r\n      <DifferentialGroupList admin={admin} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Differentials;\r\n","import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst HideCase = ({ c, hideCase }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [newHidden, setNewHidden] = useState(c.hidden);\r\n\r\n  const handleVisibilityUpdate = (event) => {\r\n    event.preventDefault();\r\n    hideCase({\r\n      ...c,\r\n      hidden: newHidden,\r\n    });\r\n  };\r\n\r\n  const handleHiddenChange = () => {\r\n    setNewHidden(!newHidden);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleVisibilityUpdate}>\r\n        <label htmlFor=\"submit\" className=\"hidden\">{newHidden ? t('buttonShowCaseToStudents') : t('buttonHideCaseFromStudents')}</label>\r\n        <input id=\"submitHide\" className=\"hideCase\" type=\"submit\" onClick={handleHiddenChange} size=\"sm\" value={newHidden ? t('buttonShowCaseToStudents') : t('buttonHideCaseFromStudents')} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HideCase;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Form } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { validateName } from '../../../utils/Helper';\r\n\r\nconst UpdateCaseTitle = ({ c, updateCaseTitle }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: c.title,\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: validateName(),\r\n    }),\r\n    onSubmit: (values) => {\r\n      updateCaseTitle({\r\n        ...c,\r\n        title: values.title,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"updateTitle\" style={{ width: '30rem' }}>\r\n        <Form.Control\r\n          className=\"titleChangeInput\"\r\n          type=\"text\"\r\n          {...formik.getFieldProps('title')}\r\n          isInvalid={!!formik.errors.title}\r\n        />\r\n        <Form.Text className=\"text-muted\">\r\n          {t('caseTitleInstruction')}\r\n        </Form.Text>\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.title}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default UpdateCaseTitle;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst UpdateAnamnesis = ({ c, updateAnamnesis }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      anamnesis: c.anamnesis,\r\n    },\r\n    validationSchema: Yup.object({\r\n      anamnesis: Yup.string()\r\n        .min(2, t('warningShort'))\r\n        .max(5000, t('warningLong'))\r\n        .required(t('warningRequired')),\r\n    }),\r\n    onSubmit: (values) => {\r\n      updateAnamnesis({\r\n        ...c,\r\n        anamnesis: values.anamnesis,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"updateAnamnesis\">\r\n        <Form.Control\r\n          className=\"anamnesisForm\"\r\n          as=\"textarea\"\r\n          {...formik.getFieldProps('anamnesis')}\r\n          isInvalid={!!formik.errors.anamnesis}\r\n          rows={10}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.anamnesis}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSaveAnamneesi')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default UpdateAnamnesis;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport HideCase from '../case/components/HideCase';\r\nimport UpdateCaseTitle from '../case/components/UpdateCaseTitle';\r\nimport { setSuccess, setError } from '../../utils/MessageBanner';\r\nimport UpdateAnamnesis from './UpdateAnamnesis';\r\nimport { updateCase } from '../case/casesReducer';\r\n\r\nconst Anamnesis = ({ admin }) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n  const c = useSelector((state) => state.cases.find((a) => a.id === Number(id)));\r\n\r\n  /* istanbul ignore next */\r\n  const handleCaseUpdate = (updatedCase) => {\r\n    try {\r\n      dispatch(updateCase(updatedCase));\r\n      setSuccess(t('caseUpdateSuccess'));\r\n    } catch (error) {\r\n      // eslint-disable-next-line no-console\r\n      console.log(error);\r\n      setError(t('caseUpdateError'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {admin && c && (\r\n        <div id=\"casePageArea\">\r\n          <div className=\"rows\">\r\n            <UpdateCaseTitle c={c} updateCaseTitle={handleCaseUpdate} />\r\n            <HideCase c={c} hideCase={handleCaseUpdate} />\r\n          </div>\r\n          <UpdateAnamnesis c={c} updateAnamnesis={handleCaseUpdate} />\r\n        </div>\r\n      )}\r\n      {!admin && c && (\r\n        <p>{c.title}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Anamnesis;\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/subProcedures';\r\n\r\nconst getAll = (id) => {\r\n  const request = axios.get(`${baseUrl}/${id}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}/${getLanguage()}`, newObject, getConfig());\r\n\r\nexport default {\r\n  create,\r\n  getAll,\r\n  update,\r\n};\r\n","import subProceduresService from '../services/subProceduresService';\r\n\r\nconst subProceduresReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_SUBPROCEDURES':\r\n      return action.data;\r\n    case 'ADD_SUBPROCEDURE':\r\n      return [...state, action.data];\r\n    case 'UPDATE_SUBPROCEDURE': {\r\n      return state.map((p) => (p.id !== action.data.id\r\n        ? p\r\n        : action.data\r\n      ));\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getSubprocedures = (procedureCaseId) => async (dispatch) => {\r\n  const subprocedures = await subProceduresService.getAll(procedureCaseId);\r\n  dispatch({\r\n    type: 'GET_SUBPROCEDURES',\r\n    data: subprocedures || null,\r\n  });\r\n};\r\n\r\nexport const addSubprocedure = (subProcedureObject, procedureCaseId) => async (dispatch) => {\r\n  const addedSubprocedure = await subProceduresService.create({\r\n    ...subProcedureObject,\r\n    procedureCaseId,\r\n  });\r\n  dispatch({\r\n    type: 'ADD_SUBPROCEDURE',\r\n    data: addedSubprocedure,\r\n  });\r\n};\r\n\r\nexport const updateSubprocedure = (id, subProcedureObject) => async (dispatch) => {\r\n  await subProceduresService.update(id, subProcedureObject);\r\n  dispatch({\r\n    type: 'UPDATE_SUBPROCEDURE',\r\n    data: subProcedureObject,\r\n  });\r\n};\r\n\r\nexport default subProceduresReducer;\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/optionGroups';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n};\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/optionGroupsUnderSubProcedures';\r\n\r\nconst getAll = (caseId) => {\r\n  const request = axios.get(`${baseUrl}/${caseId}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n};\r\n","import service from '../services/optionGroupsUnderSubProceduresService';\r\n\r\nconst optionGroupsUnderSubProceduresReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_OPTIONGROUPS_UNDER_SUBPROCEDURES':\r\n      return action.data;\r\n    case 'NEW_OPTIONGROUP_UNDER_SUBPROCEDURE':\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getOptionGroupsUnderSubProcedures = (id) => async (dispatch) => {\r\n  const returnedOptionGroups = await service.getAll(id);\r\n  dispatch({\r\n    type: 'GET_OPTIONGROUPS_UNDER_SUBPROCEDURES',\r\n    data: returnedOptionGroups || null,\r\n  });\r\n};\r\n\r\nexport const createOptionGroupUnderSubProcedure = (content) => async (dispatch) => {\r\n  const newOptionGroupUnderSubProcedure = await service.create(content);\r\n  dispatch({\r\n    type: 'NEW_OPTIONGROUP_UNDER_SUBPROCEDURE',\r\n    data: newOptionGroupUnderSubProcedure,\r\n  });\r\n};\r\n\r\nexport default optionGroupsUnderSubProceduresReducer;\r\n","import optionGroupsService from '../services/optionGroupsService';\r\nimport { createOptionGroupUnderSubProcedure } from './optionGroupsUnderSubProceduresReducer';\r\n\r\nconst optionGroupsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_OPTIONGROUPS':\r\n      return action.data;\r\n    case 'NEW_OPTIONGROUP':\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getOptionGroups = () => async (dispatch) => {\r\n  const returnedOptionGroups = await optionGroupsService.getAll();\r\n  dispatch({\r\n    type: 'GET_OPTIONGROUPS',\r\n    data: returnedOptionGroups || null,\r\n  });\r\n};\r\n\r\nexport const createOptionGroup = (subProcedureId, optionGroup) => async (dispatch) => {\r\n  let { id } = optionGroup;\r\n\r\n  if (id === undefined) {\r\n    const newOptionGroup = await optionGroupsService.create(optionGroup);\r\n\r\n    dispatch({\r\n      type: 'NEW_OPTIONGROUP',\r\n      data: newOptionGroup,\r\n    });\r\n\r\n    id = newOptionGroup.id;\r\n  }\r\n\r\n  dispatch(createOptionGroupUnderSubProcedure({\r\n    subProcedureId,\r\n    optionGroupId: id,\r\n  }));\r\n};\r\n\r\nexport default optionGroupsReducer;\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/options';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n};\r\n","import axios from 'axios';\r\nimport { getConfig, getLanguage } from '../../../utils/Helper';\r\n\r\nconst baseUrl = '/api/optionsUnderSubProcedures';\r\n\r\nconst getAll = (id) => {\r\n  const request = axios.get(`${baseUrl}/${id}/INTERVIEW/${getLanguage()}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n};\r\n","import service from '../services/optionsUnderSubProceduresService';\r\n\r\nconst optionsUnderSubProceduresReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_OPTIONS_UNDER_SUBPROCEDURES':\r\n      return action.data;\r\n    case 'NEW_OPTION_UNDER_SUBPROCEDURE':\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getOptionsUnderSubProcedures = (id) => async (dispatch) => {\r\n  const returnedOptions = await service.getAll(id);\r\n  dispatch({\r\n    type: 'GET_OPTIONS_UNDER_SUBPROCEDURES',\r\n    data: returnedOptions || null,\r\n  });\r\n};\r\n\r\nexport const createOptionUnderSubProcedure = (content) => async (dispatch) => {\r\n  const newOption = await service.create(content);\r\n  dispatch({\r\n    type: 'NEW_OPTION_UNDER_SUBPROCEDURE',\r\n    data: newOption,\r\n  });\r\n};\r\n\r\nexport default optionsUnderSubProceduresReducer;\r\n","import service from '../services/optionsService';\r\nimport { createOptionUnderSubProcedure } from './optionsUnderSubProceduresReducer';\r\n\r\nconst optionsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_OPTIONS':\r\n      return action.data;\r\n    case 'NEW_OPTION':\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getOptions = () => async (dispatch) => {\r\n  const returnedOptions = await service.getAll();\r\n  dispatch({\r\n    type: 'GET_OPTIONS',\r\n    data: returnedOptions || null,\r\n  });\r\n};\r\n\r\nexport const createOption = (optionGroupSubProcedureId, content) => async (dispatch) => {\r\n  let { id } = content;\r\n\r\n  if (id === undefined) {\r\n    const newOption = await service.create({ name: content.name });\r\n\r\n    dispatch({\r\n      type: 'NEW_OPTION',\r\n      data: newOption,\r\n    });\r\n\r\n    id = newOption.id;\r\n  }\r\n\r\n  dispatch(createOptionUnderSubProcedure({\r\n    optionGroupSubProcedureId,\r\n    optionId: id,\r\n    description: content.description,\r\n    isRequired: content.isRequired,\r\n  }));\r\n};\r\n\r\nexport default optionsReducer;\r\n","import React, { useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Link, useParams, Switch, Route, Redirect,\r\n} from 'react-router-dom';\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport Procedures from '../../procedure/components/Procedures';\r\nimport Differentials from '../../differential/components/Differentials';\r\nimport Anamnesis from '../../anamnesis/Anamnesis';\r\nimport { getProcedures } from '../../procedure/reducers/proceduresReducer';\r\nimport { getProceduresUnderCase } from '../../procedure/reducers/proceduresUnderCasesReducer';\r\nimport { getDifferentials } from '../../differential/reducers/differentialsReducer';\r\nimport { getDifferentialGroups } from '../../differential/reducers/differentialGroupsReducer';\r\nimport { getDifferentialGroupsUnderCase } from '../../differential/reducers/differentialGroupsUnderCasesReducer';\r\nimport { getDifferentialsUnderCase } from '../../differential/reducers/differentialsUnderCasesReducer';\r\nimport { getSubprocedures } from '../../subprocedure/reducers/subProceduresReducer';\r\nimport { getOptionGroups } from '../../subprocedure/reducers/optionGroupsReducer';\r\nimport { getOptionGroupsUnderSubProcedures } from '../../subprocedure/reducers/optionGroupsUnderSubProceduresReducer';\r\nimport { getOptions } from '../../subprocedure/reducers/optionReducer';\r\nimport { getOptionsUnderSubProcedures } from '../../subprocedure/reducers/optionsUnderSubProceduresReducer';\r\n\r\nconst Case = ({ admin }) => {\r\n  const { t } = useTranslation();\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const baseUrl = `/cases/${id}`;\r\n\r\n  useEffect(() => {\r\n    dispatch(getProcedures());\r\n    dispatch(getProceduresUnderCase(id));\r\n    dispatch(getSubprocedures(id));\r\n    dispatch(getOptionGroups());\r\n    dispatch(getOptionGroupsUnderSubProcedures(id));\r\n    dispatch(getOptions());\r\n    dispatch(getOptionsUnderSubProcedures(id));\r\n    dispatch(getDifferentials());\r\n    dispatch(getDifferentialsUnderCase(id));\r\n    dispatch(getDifferentialGroups());\r\n    dispatch(getDifferentialGroupsUnderCase(id));\r\n  }, []);\r\n\r\n  const buttonGroupStyle = {\r\n    marginBottom: 25,\r\n  };\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <ButtonGroup style={buttonGroupStyle}>\r\n        <Button className=\"tabs\" as={Link} to={`${baseUrl}/anamnesis`} disabled>{t('caseAnamnesis')}</Button>\r\n        <Button className=\"tabs\" as={Link} to={`${baseUrl}/procedures`}>{t('caseProcedures')}</Button>\r\n        <Button className=\"tabs\" as={Link} to={`${baseUrl}/differentials`}>{t('caseDifferentials')}</Button>\r\n      </ButtonGroup>\r\n\r\n      <Switch>\r\n        <Route path=\"/cases/:id/anamnesis\">\r\n          <Anamnesis admin={admin} />\r\n        </Route>\r\n        <Route path=\"/cases/:id/procedures\">\r\n          <Procedures admin={admin} />\r\n        </Route>\r\n        <Route path=\"/cases/:id/differentials\">\r\n          <Differentials admin={admin} />\r\n        </Route>\r\n        <Route path=\"/cases/:id\">\r\n          <Redirect to={`${baseUrl}/anamnesis`} />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Case;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { useFormik, FormikProvider } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector } from 'react-redux';\r\nimport CustomTypeaheadSelect from '../../../../../utils/CustomTypeaheadSelect';\r\nimport { validateName } from '../../../../../utils/Helper';\r\n\r\nconst NewOptionGroupForm = ({ addOptionGroup }) => {\r\n  const { t } = useTranslation();\r\n  const optionGroups = useSelector((state) => state.optionGroups);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      name: validateName(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      const group = optionGroups.filter((r) => r.name === values.name);\r\n      addOptionGroup(\r\n        group.length === 0\r\n          ? values\r\n          : group[0],\r\n      );\r\n    },\r\n  });\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form noValidate onSubmit={formik.handleSubmit}>\r\n        <CustomTypeaheadSelect\r\n          name=\"name\"\r\n          label={t('addOptionGroup')}\r\n          options={optionGroups}\r\n        />\r\n        <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n};\r\n\r\nexport default NewOptionGroupForm;\r\n","import React from 'react';\r\nimport { Accordion, Card } from 'react-bootstrap';\r\n\r\nconst Option = ({ optionObject }) => (\r\n  <Card>\r\n    <Accordion.Toggle\r\n      className={`optionCard-${optionObject.isRequired}`}\r\n      as={Card.Header}\r\n      eventKey={optionObject.id}\r\n    >\r\n      {optionObject.name}\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey={optionObject.id}>\r\n      <Card.Body>{optionObject.description}</Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n);\r\n\r\nexport default Option;\r\n","import React from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport Option from './Option';\r\n\r\nconst OptionList = ({ optionGroupSubProcedureId }) => {\r\n  const caseOptions = useSelector((state) => state.optionsUnderSubProcedure);\r\n  const options = caseOptions.filter(\r\n    (o) => o.optionGroupSubProcedureId === optionGroupSubProcedureId,\r\n  );\r\n\r\n  return (\r\n    <Accordion>\r\n      {options.map((o) => (\r\n        <Option key={o.id} optionObject={o} />\r\n      ))}\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default OptionList;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { useFormik, FormikProvider } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport CustomTypeaheadSelect from '../../../../utils/CustomTypeaheadSelect';\r\nimport { validateName } from '../../../../utils/Helper';\r\n\r\nconst AddOptionForm = ({ addOption }) => {\r\n  const { t } = useTranslation();\r\n  const options = useSelector((state) => state.options);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      description: '',\r\n      isRequired: 2,\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      name: validateName(),\r\n      description: Yup.string(),\r\n      isRequired: Yup.number()\r\n        .required(t('warningRequired'))\r\n        .integer(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      const option = options.filter((r) => r.name === values.name);\r\n      addOption(\r\n        option.length === 0\r\n          ? { ...values, isRequired: Number(values.isRequired) }\r\n          : { ...option[0], ...values, isRequired: Number(values.isRequired) },\r\n      );\r\n    },\r\n  });\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form noValidate onSubmit={formik.handleSubmit}>\r\n        <CustomTypeaheadSelect\r\n          name=\"name\"\r\n          label={t('addOption')}\r\n          options={options}\r\n        />\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>{t('description')}</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={3}\r\n            {...formik.getFieldProps('description')}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"isRequired\">\r\n          <Form.Check\r\n            defaultChecked\r\n            id=\"required\"\r\n            label={t('required')}\r\n            name=\"isRequired\"\r\n            type=\"radio\"\r\n            value={2}\r\n            onChange={formik.getFieldProps('isRequired').onChange}\r\n          />\r\n          <Form.Check\r\n            id=\"voluntary\"\r\n            label={t('voluntary')}\r\n            name=\"isRequired\"\r\n            type=\"radio\"\r\n            value={1}\r\n            onChange={formik.getFieldProps('isRequired').onChange}\r\n          />\r\n          <Form.Check\r\n            id=\"wrong\"\r\n            label={t('wrong')}\r\n            name=\"isRequired\"\r\n            type=\"radio\"\r\n            value={0}\r\n            onChange={formik.getFieldProps('isRequired').onChange}\r\n          />\r\n        </Form.Group>\r\n        <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n};\r\n\r\nexport default AddOptionForm;\r\n","import React, { useRef } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch } from 'react-redux';\r\nimport OptionList from '../OptionList';\r\nimport AddOptionForm from '../AddOptionForm';\r\nimport AddUpdateModal from '../../../../../utils/AddUpdateModal';\r\nimport { createOption } from '../../../reducers/optionReducer';\r\nimport { setSuccess, setError } from '../../../../../utils/MessageBanner';\r\n\r\nconst OptionGroup = ({\r\n  optionGroupSubProcedureId, name, admin,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const modalRef = useRef();\r\n\r\n  /* istanbul ignore next */\r\n  const handleOptionAdd = (newOption) => {\r\n    modalRef.current.toggleVisibility();\r\n    try {\r\n      dispatch(createOption(optionGroupSubProcedureId, newOption));\r\n      setSuccess(t('optionGroupAddSuccess'));\r\n    } catch (error) {\r\n      setError(t('optionGroupAddError'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>{name}</Card.Header>\r\n      <Card.Body>\r\n        <OptionList optionGroupSubProcedureId={optionGroupSubProcedureId} />\r\n        {admin && (\r\n        <AddUpdateModal buttonLabel={t('buttonAddNewOption')} titleLabel={t('addOption')} ref={modalRef}>\r\n          <AddOptionForm addOption={handleOptionAdd} />\r\n        </AddUpdateModal>\r\n        )}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default OptionGroup;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport OptionGroup from './OptionGroup';\r\n\r\nconst OptionGroupList = ({ subProcedureId, admin }) => {\r\n  const caseOptionGroups = useSelector((state) => state.optionGroupsUnderSubProcedure);\r\n  const subProcedureOptionGroups = caseOptionGroups.filter(\r\n    (o) => o.subProcedureId === subProcedureId,\r\n  );\r\n\r\n  return (\r\n    <div data-testid=\"optionGroupList\">\r\n      {subProcedureOptionGroups.map((d) => (\r\n        <OptionGroup\r\n          key={d.id}\r\n          optionGroupSubProcedureId={d.optionGroupSubProcedureId}\r\n          name={d.name}\r\n          admin={admin}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionGroupList;\r\n","import React, { useRef } from 'react';\r\nimport { Accordion, Card } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch } from 'react-redux';\r\nimport AddUpdateModal from '../../../../utils/AddUpdateModal';\r\nimport AddOptionGroupForm from '../option/optionGroup/AddOptionGroupForm';\r\nimport { createOptionGroup } from '../../reducers/optionGroupsReducer';\r\nimport { setSuccess, setError } from '../../../../utils/MessageBanner';\r\nimport OptionGroupList from '../option/optionGroup/OptionGroupList';\r\n\r\nconst InterviewSubProcedure = ({ d, admin }) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const modalRef = useRef();\r\n\r\n  /* istanbul ignore next */\r\n  const handleOptionGroupAdd = (optionGroup) => {\r\n    modalRef.current.toggleVisibility();\r\n    try {\r\n      dispatch(createOptionGroup(d.id, optionGroup));\r\n      setSuccess(t('optionGroupAddSuccess'));\r\n    } catch (error) {\r\n      setError(t('optionGroupAddError'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card style={{ width: '60rem' }}>\r\n        <Accordion.Toggle as={Card.Header} eventKey={d.id}>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            {d.title}\r\n          </div>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey={d.id}>\r\n          <Card.Body>\r\n            { admin\r\n            && (\r\n            <AddUpdateModal buttonLabel={t('buttonAddNewOptionGroup')} titleLabel={t('addOptionGroup')} ref={modalRef}>\r\n              <AddOptionGroupForm addOptionGroup={handleOptionGroupAdd} />\r\n            </AddUpdateModal>\r\n            )}\r\n            <OptionGroupList subProcedureId={d.id} admin={admin} />\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterviewSubProcedure;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { validateName } from '../../../../utils/Helper';\r\n\r\nconst UpdateTextSubProcedureForm = ({\r\n  title,\r\n  text,\r\n  updateTextSubProcedure,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title,\r\n      text,\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      title: validateName(),\r\n      text: Yup.string(),\r\n    }),\r\n    onSubmit: (values) => {\r\n      updateTextSubProcedure({\r\n        text: values.text,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"title\">\r\n        <Form.Label>{t('title')}</Form.Label>\r\n        <Form.Control\r\n          disabled\r\n          type=\"text\"\r\n          placeholder={t('write')}\r\n          {...formik.getFieldProps('title')}\r\n          isInvalid={!!formik.errors.title}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.title}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"text\">\r\n        <Form.Label>{t('textToAdd')}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={10}\r\n          {...formik.getFieldProps('text')}\r\n        />\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonUpdate')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default UpdateTextSubProcedureForm;\r\n","import React, { useRef } from 'react';\r\nimport { Accordion, Card } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch } from 'react-redux';\r\nimport UpdateTextSubProcedureForm from './UpdateTextSubProcedureForm';\r\nimport { updateSubprocedure } from '../../reducers/subProceduresReducer';\r\nimport { setSuccess, setError } from '../../../../utils/MessageBanner';\r\nimport AddUpdateModal from '../../../../utils/AddUpdateModal';\r\n\r\nconst TextSubProcedure = ({ d, admin }) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const modalRef = useRef();\r\n\r\n  /* istanbul ignore next */\r\n  const handleTextSubProcedureUpdate = (updatedObject) => {\r\n    modalRef.current.toggleVisibility();\r\n    try {\r\n      dispatch(updateSubprocedure(d.id, {\r\n        ...d,\r\n        text: updatedObject.text,\r\n      }));\r\n      setSuccess(t('subProcedureUpdateSuccess'));\r\n    } catch (error) {\r\n      setError(t('subProcedureUpdateError'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card style={{ width: '60rem' }}>\r\n        <Accordion.Toggle as={Card.Header} eventKey={d.id}>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            {d.title}\r\n            {admin && (\r\n            <div className=\"cardButtons\">\r\n              <AddUpdateModal className=\"editButton\" buttonLabel={t('buttonEdit')} titleLabel={t('updateSubProcedure')} ref={modalRef}>\r\n                <UpdateTextSubProcedureForm\r\n                  title={d.title}\r\n                  text={d.text}\r\n                  updateTextSubProcedure={handleTextSubProcedureUpdate}\r\n                />\r\n              </AddUpdateModal>\r\n            </div>\r\n            )}\r\n          </div>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey={d.id}>\r\n          <Card.Body>{d.text}</Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextSubProcedure;\r\n","import React from 'react';\r\nimport InterviewSubProcedure from './interviewSubProcedure/InterviewSubProcedure';\r\nimport TextSubProcedure from './textSubProcedure/TextSubProcedure';\r\n\r\n// eslint-disable-next-line consistent-return\r\nconst SubProcedure = ({ d, admin }) => {\r\n  if (d.type === 'TEXT') {\r\n    return (\r\n      <TextSubProcedure\r\n        d={d}\r\n        admin={admin}\r\n      />\r\n    );\r\n  } if (d.type === 'INTERVIEW') {\r\n    return (\r\n      <InterviewSubProcedure\r\n        d={d}\r\n        admin={admin}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nexport default SubProcedure;\r\n","import React from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport SubProcedure from './SubProcedure';\r\n\r\nconst SubProcedureList = ({ procedureCaseId, admin }) => {\r\n  const caseSubProcedures = useSelector((state) => state.subProcedures);\r\n  const listedProcedures = caseSubProcedures\r\n    .filter((p) => p.procedureCaseId === Number(procedureCaseId))\r\n    .sort((a, b) => a.priority - b.priority);\r\n\r\n  return (\r\n    <Accordion>\r\n      {listedProcedures.map((d) => (\r\n        <SubProcedure key={d.id} d={d} admin={admin} />\r\n      ))}\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default SubProcedureList;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { validateName, validatePriority } from '../../../../utils/Helper';\r\n\r\nconst AddTextSubProcedure = ({ addSubProcedure }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      priority: '',\r\n      title: '',\r\n      text: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: validateName(),\r\n      priority: validatePriority(),\r\n      text: Yup.string(),\r\n    }),\r\n    onSubmit: (values) => {\r\n      addSubProcedure({\r\n        ...values,\r\n        priority: Number(values.priority),\r\n        type: 'TEXT',\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"title\">\r\n        <Form.Label>{t('title')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder={t('write')}\r\n          {...formik.getFieldProps('title')}\r\n          isInvalid={!!formik.errors.title}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.title}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"priority\">\r\n        <Form.Label>{t('subProcedurePriority')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder={t('giveNumber')}\r\n          {...formik.getFieldProps('priority')}\r\n          isInvalid={!!formik.errors.priority}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.priority}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"text\">\r\n        <Form.Label>{t('textToAdd')}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={10}\r\n          {...formik.getFieldProps('text')}\r\n        />\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmit')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddTextSubProcedure;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { validateName, validatePriority } from '../../../../utils/Helper';\r\n\r\nconst AddInterviewSubProcedure = ({ addSubProcedure }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      priority: '',\r\n      title: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: validateName(),\r\n      priority: validatePriority(),\r\n    }),\r\n    onSubmit: (values) => {\r\n      addSubProcedure({\r\n        priority: Number(values.priority),\r\n        type: 'INTERVIEW',\r\n        title: values.title,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form noValidate onSubmit={formik.handleSubmit}>\r\n      <Form.Group controlId=\"title\">\r\n        <Form.Label>{t('title')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder={t('write')}\r\n          {...formik.getFieldProps('title')}\r\n          isInvalid={!!formik.errors.title}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.title}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"priority\">\r\n        <Form.Label>{t('subProcedurePriority')}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder={t('giveNumber')}\r\n          {...formik.getFieldProps('priority')}\r\n          isInvalid={!!formik.errors.priority}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n          {formik.errors.priority}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmit')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddInterviewSubProcedure;\r\n","import React, { useState, useRef } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  useParams,\r\n} from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport AddUpdateModal from '../../../utils/AddUpdateModal';\r\nimport SubProcedureList from '../../subprocedure/components/SubProcedureList';\r\nimport AddTextSubProcedure from '../../subprocedure/components/textSubProcedure/AddTextSubProcedure';\r\nimport { addSubprocedure } from '../../subprocedure/reducers/subProceduresReducer';\r\nimport { setSuccess, setError } from '../../../utils/MessageBanner';\r\nimport AddInterviewSubProcedure from '../../subprocedure/components/interviewSubProcedure/AddInterviewSubProcedure';\r\n\r\nconst Procedure = ({ admin }) => {\r\n  const { t } = useTranslation();\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const [show, setShow] = useState(false);\r\n  const modalRef = useRef();\r\n\r\n  const showWhenVisible = { display: show ? '' : 'none' };\r\n\r\n  const handleVisibility = () => {\r\n    setShow(!show);\r\n  };\r\n\r\n  /* istanbull ignore next */\r\n  const handleSubProcedureAdd = (newSubProcedure) => {\r\n    modalRef.current.toggleVisibility();\r\n    try {\r\n      dispatch(addSubprocedure(newSubProcedure, Number(id)));\r\n      setSuccess(t('subProcedureUpdateSuccess'));\r\n    } catch (error) {\r\n      setError(t('subProcedureUpdateError'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>\r\n        {t('subProcedures')}\r\n      </h2>\r\n      {admin && (\r\n        <div>\r\n          <Button className=\"addButton\" onClick={handleVisibility} id=\"addNew\">\r\n            {t('buttonNewSubProcedure')}\r\n          </Button>\r\n          <div className=\"rows\" style={showWhenVisible}>\r\n            <AddUpdateModal buttonLabel={t('buttonAddNewText')} titleLabel={t('addTextSubProcedure')} ref={modalRef}>\r\n              <AddTextSubProcedure addSubProcedure={handleSubProcedureAdd} />\r\n            </AddUpdateModal>\r\n            <Button className=\"addButton question\" size=\"sm\">{t('buttonAddNewQuestion')}</Button>\r\n            <AddUpdateModal buttonLabel={t('buttonAddNewInterview')} titleLabel={t('addInterviewSubProcedure')} ref={modalRef}>\r\n              <AddInterviewSubProcedure addSubProcedure={handleSubProcedureAdd} />\r\n            </AddUpdateModal>\r\n            <Button className=\"addButton diagnosis\" size=\"sm\">{t('buttonAddFinalDiagnosis')}</Button>\r\n          </div>\r\n          <SubProcedureList procedureCaseId={id} admin={admin} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Procedure;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst FileBank = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('fileBank')}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileBank;\r\n","import React from 'react';\r\nimport {\r\n  Switch, Route, Redirect,\r\n} from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Frontpage from '../frontpage/Frontpage';\r\nimport HowToPlay from '../instructions/HowToPlay';\r\nimport Profile from '../users/Profile';\r\nimport Users from '../users/Users';\r\nimport Case from '../case/components/Case';\r\nimport Procedure from '../procedure/components/Procedure';\r\nimport FileBank from '../files/FileBank';\r\n\r\nconst Routing = () => {\r\n  const admin = useSelector((state) => state.admin);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/howtoplay\">\r\n        <HowToPlay />\r\n      </Route>\r\n      <Route path=\"/profile\">\r\n        <Profile />\r\n      </Route>\r\n      <Route path=\"/users\">\r\n        {admin ? <Users /> : <Redirect to=\"/\" />}\r\n      </Route>\r\n      <Route path=\"/cases/:id/procedure/:id\">\r\n        <Procedure admin={admin} />\r\n      </Route>\r\n      <Route path=\"/cases/:id\">\r\n        <Case admin={admin} />\r\n      </Route>\r\n      <Route path=\"/files\">\r\n        {admin ? <FileBank /> : <Redirect to=\"/\" />}\r\n      </Route>\r\n      <Route path=\"/\">\r\n        <Frontpage admin={admin} />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routing;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n} from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { initializeCasesAndUser } from './App/case/casesReducer';\r\nimport Navigationbar from './App/navigation/Navbar';\r\nimport Sidebar from './App/navigation/Sidebar';\r\nimport Routing from './App/navigation/Routing';\r\nimport MessageBanner from './utils/MessageBanner';\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  /* istanbul ignore next */\r\n  React.useEffect(() => {\r\n    dispatch(initializeCasesAndUser());\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Navigationbar />\r\n      <Sidebar />\r\n      <MessageBanner />\r\n      <Routing />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default (App);\r\n","const userReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case 'INITIALIZE_USER':\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport casesReducer from './App/case/casesReducer';\r\nimport userReducer from './App/users/reducers/userReducer';\r\nimport proceduresReducer from './App/procedure/reducers/proceduresReducer';\r\nimport proceduresUnderCasesReducer from './App/procedure/reducers/proceduresUnderCasesReducer';\r\nimport subProceduresReducer from './App/subprocedure/reducers/subProceduresReducer';\r\nimport differentialsReducer from './App/differential/reducers/differentialsReducer';\r\nimport differentialsUnderCasesReducer from './App/differential/reducers/differentialsUnderCasesReducer';\r\nimport differentialGroupsReducer from './App/differential/reducers/differentialGroupsReducer';\r\nimport differentialGroupsUnderCasesReducer from './App/differential/reducers/differentialGroupsUnderCasesReducer';\r\nimport optionGroupsReducer from './App/subprocedure/reducers/optionGroupsReducer';\r\nimport optionGroupsUnderSubProceduresReducer from './App/subprocedure/reducers/optionGroupsUnderSubProceduresReducer';\r\nimport optionsReducer from './App/subprocedure/reducers/optionReducer';\r\nimport optionsUnderSubProceduresReducer from './App/subprocedure/reducers/optionsUnderSubProceduresReducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\n\r\nconst reducer = combineReducers({\r\n  cases: casesReducer,\r\n  admin: userReducer,\r\n  procedures: proceduresReducer,\r\n  proceduresUnderCase: proceduresUnderCasesReducer,\r\n  subProcedures: subProceduresReducer,\r\n  optionGroups: optionGroupsReducer,\r\n  optionGroupsUnderSubProcedure: optionGroupsUnderSubProceduresReducer,\r\n  options: optionsReducer,\r\n  optionsUnderSubProcedure: optionsUnderSubProceduresReducer,\r\n  differentials: differentialsReducer,\r\n  differentialsUnderCase: differentialsUnderCasesReducer,\r\n  differentialGroups: differentialGroupsReducer,\r\n  differentialGroupsUnderCase: differentialGroupsUnderCasesReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\n\r\nexport default () => {\r\n  const store = createStore(\r\n    persistedReducer,\r\n    composeWithDevTools(\r\n      applyMiddleware(thunk),\r\n    ),\r\n  );\r\n  const persistor = persistStore(store);\r\n  return { store, persistor };\r\n};\r\n","/* eslint-disable linebreak-style */\r\n/* istanbul ignore file */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' // [::1] is the IPv6 localhost address.\r\n      || window.location.hostname === '[::1]'\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      || window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n      ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        // eslint-disable-next-line no-use-before-define\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        // eslint-disable-next-line no-use-before-define\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      // eslint-disable-next-line no-param-reassign\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n\r\n              // Execute callback\r\n              // eslint-disable-next-line no-lonely-if\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n          || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      });\r\n  }\r\n}\r\n","/* eslint-disable linebreak-style */\r\n/* istanbul ignore file */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport App from './App';\r\nimport createStore from './store';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './i18n/config';\r\n\r\nconst { store, persistor } = createStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}