{"version":3,"sources":["i18n/config.js","components/navigation/Navbar.js","services/cases.js","components/case/RemoveCase.js","components/case/CaseCard.js","components/frontpage/Search.js","components/frontpage/Frontpage.js","components/frontpage/GuestFrontpage.js","components/navigation/Sidebar.js","components/instructions/HowToPlay.js","components/user/Profile.js","services/differentials.js","services/differentialsUnderCases.js","components/differential/AddDifferentialForm.js","components/differential/SelectDifferentialForm.js","components/differential/NewDifferential.js","components/differential/Differential.js","components/differential/DifferentialList.js","components/differential/Differentials.js","components/case/HideCase.js","components/case/UpdateCaseTitle.js","components/anamnesis/Anamnesis.js","services/procedures.js","services/proceduresUnderCase.js","components/procedure/NewProcedure.js","components/procedure/EditProcedure.js","components/procedure/ProcedureList.js","components/procedure/Procedures.js","components/case/Case.js","components/case/NewCase.js","App.js","serviceWorker.js","index.js"],"names":["i18n","use","LanguageDetector","init","initReactI18next","fallbackLng","lng","localStorage","getItem","resources","fi","translations","require","en","ns","defaultNS","languages","Navigationbar","user","admin","guest","changeUser","changeAdmin","changeGuest","t","useTranslation","changeLanguage","language","Navbar","collapseOnSelect","expand","variant","sticky","Brand","as","Link","to","Toggle","Collapse","id","Nav","className","NavDropdown","title","Item","onClick","eventKey","NavLink","baseUrl","axios","get","then","response","data","newObject","post","put","delete","removeCase","caseToBeRemoved","removeCaseFunc","Button","size","event","preventDefault","window","confirm","service","message","CaseCard","c","Card","style","width","cursor","Body","Title","Text","anamnesis","Footer","ProgressBar","now","label","RemoveCase","Search","newSearch","searchCases","htmlFor","value","onChange","Frontpage","cases","useState","setNewSearch","casesToShow","filter","toLowerCase","includes","target","Row","xs","md","hidden","map","Col","GuestFrontpage","Sidebar","HowToPlay","Profile","caseId","AddDifferentialForm","addDifferential","newDifferentialSchema","Yup","shape","name","min","max","required","description","initialValues","validationSchema","onSubmit","values","handleSubmit","handleChange","errors","Form","noValidate","Group","controlId","Label","Control","type","placeholder","isInvalid","Feedback","role","rows","SelectDifferentialForm","differentials","selectDifferential","selectedDiff","setSelectedDiff","setDescription","differential","d","differentialId","labelKey","options","selected","e","NewDifferential","alertMessage","setAlertMessage","errorMessage","setErrorMessage","show","setShow","setDifferentials","React","useEffect","initialDifferentials","catch","error","console","log","toggleVisibility","handleDifferentialSelection","ducObject","serviceUnderCases","setTimeout","handleError","Alert","Modal","onHide","backdrop","keyboard","Header","closeButton","Tabs","defaultActiveKey","Tab","differentialObject","res","Differential","Accordion","DifferentialList","caseDifferentials","setCaseDifferentials","Differentials","HideCase","caseToBeHidden","hideCaseFunc","hideStatus","newHidden","setNewHidden","caseObject","UpdateCaseTitle","updateCaseTitle","setTitle","caseSchema","Anamnesis","updatedCase","newProcedure","addProcedureFunc","newTitle","setNewTitle","addProcedure","a","procedureObject","receivedID","procedureId","priority","EditProcedure","procedure","editProcedureFunc","proceduresUnderCase","setNewPriority","setNewProcedureTitle","history","useHistory","procedureUnderCaseObject","serviceUnderProcedure","push","editProcedure","defaultValue","DragNDropList","proceduresHook","handleDragStart","handleDragEnd","handleDragEnter","submitForm","p","index","onDragStart","onDragEnd","onDragEnter","draggable","ProcedureList","draggingItem","useRef","dragOverItem","setProceduresHook","procedureToEdit","setProcedureToEdit","procedureList","list","procedures","sort","b","position","current","givenProcedure","dragDropEditProcedure","listCopy","draggingItemContent","splice","handleEditId","Procedures","NewProcedure","Case","useParams","find","Number","path","newCase","addCaseFunc","newCaseSchema","undefined","Check","App","setUser","setAdmin","setGuest","setCases","initialCases","NewCase","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kzMAMAA,IAAKC,IAAIC,KAAkBC,OAE3BH,IAAKC,IAAIG,KAAkBD,KAAK,CAC9BE,YAAa,KAGbC,IAAKC,aAAaC,QAAQ,eAAiB,KAC3CC,UAAW,CACTC,GAAI,CAEFC,aAAcC,EAAQ,MAExBC,GAAI,CAEFF,aAAcC,EAAQ,OAG1BE,GAAI,CAAC,gBACLC,UAAW,iBAGbf,IAAKgB,UAAY,CAAC,KAAM,MAEThB,QAAf,E,OCwCeiB,EAvDO,SAAC,GAEhB,IADLC,EACI,EADJA,KAAMC,EACF,EADEA,MAAOC,EACT,EADSA,MAAOC,EAChB,EADgBA,WAAYC,EAC5B,EAD4BA,YAAaC,EACzC,EADyCA,YAErCC,EAAMC,cAAND,EAEFE,EAAiB,SAACC,GACtB3B,EAAK0B,eAAeC,IAGtB,OACE,eAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,QAAQ,OAAOC,OAAO,MAA3D,UACE,cAACJ,EAAA,EAAOK,MAAR,CAAcC,GAAIC,IAAMC,GAAG,IAA3B,SAAgCZ,EAAE,mBAClC,cAACI,EAAA,EAAOS,OAAR,CAAe,gBAAc,0BAC7B,cAACT,EAAA,EAAOU,SAAR,CAAiBC,GAAG,wBAApB,SACE,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,eAACC,EAAA,EAAD,CAAaC,MAAOnB,EAAE,cAAtB,UACE,cAACkB,EAAA,EAAYE,KAAb,CAAkBC,QAAS,kBAAMtB,KAAeuB,SAAS,QAAzD,SAAkEtB,EAAE,WACpE,cAACkB,EAAA,EAAYE,KAAb,CAAkBC,QAAS,kBAAMxB,KAAcyB,SAAS,UAAxD,SAAmEtB,EAAE,aACrE,cAACkB,EAAA,EAAYE,KAAb,CAAkBC,QAAS,kBAAMvB,KAAewB,SAAS,UAAzD,SAAoEtB,EAAE,gBAExE,eAACkB,EAAA,EAAD,CAAaC,MAAOnB,EAAE,kBAAtB,UACE,cAACkB,EAAA,EAAYE,KAAb,CAAkBC,QAAS,kBAAMnB,EAAe,OAAOoB,SAAS,KAAhE,SAAsEtB,EAAE,qBACxE,cAACkB,EAAA,EAAYE,KAAb,CAAkBC,QAAS,kBAAMnB,EAAe,OAAOoB,SAAS,KAAhE,SAAsEtB,EAAE,wBAExEL,GACF,cAACqB,EAAA,EAAII,KAAL,UACE,cAACG,EAAA,EAAD,CAASb,GAAIC,IAAMC,GAAG,SAAtB,SAAgCZ,EAAE,uBAGlCL,GACF,cAACqB,EAAA,EAAII,KAAL,UACE,cAACG,EAAA,EAAD,CAASb,GAAIC,IAAMC,GAAG,SAAtB,SAAgCZ,EAAE,iBAGjCN,GAAQE,GAASD,IACpB,cAACqB,EAAA,EAAII,KAAL,UACE,cAACG,EAAA,EAAD,CAASb,GAAIC,IAAMC,GAAG,aAAtB,SAAoCZ,EAAE,iBAGtCN,GACF,cAACsB,EAAA,EAAII,KAAL,UACE,cAACG,EAAA,EAAD,CAASb,GAAIC,IAAMC,GAAG,WAAtB,SAAkCZ,EAAE,mBAGtC,cAACgB,EAAA,EAAII,KAAL,UACK1B,GAAQC,EACP,cAAC4B,EAAA,EAAD,CAASb,GAAIC,IAAMC,GAAG,UAAtB,SAAiCZ,EAAE,YACnC,cAACuB,EAAA,EAAD,CAASb,GAAIC,IAAMC,GAAG,SAAtB,SAAgCZ,EAAE,sB,iBC1D5CwB,EAAU,kCAmBD,EAjBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAACC,GAAD,OAAcA,EAASC,SAe9B,EAZA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAU9B,EAPA,SAACd,EAAIe,GAAL,OAAmBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBT,GAAMe,IAOjD,EALA,SAACf,GAEd,OADgBU,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BT,IAC5BY,MAAK,SAACC,GAAD,OAAcA,EAASC,S,6CCc9BK,EA1BI,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,gBAAiBC,EAAqB,EAArBA,eAC7BpC,EAAMC,cAAND,EAoBR,OACE,cAACqC,EAAA,EAAD,CAAQpB,UAAU,eAAeqB,KAAK,KAAK/B,QAAQ,SAASc,QAnBzC,SAACkB,IACpBA,EAAMC,iBAEgB,MAAlBJ,IACFA,EAAeD,EAAgBpB,IAE/BoB,EAAgBpB,GAAK,KACrBqB,EAAeD,EAAgBpB,MAIZ,IADA0B,OAAOC,QAAQ1C,EAAE,4BAElC2C,EAAeR,EAAgBpB,IAC5BY,MAAK,SAACC,GAAD,OAAeA,EAASgB,YAMpC,SAAoF5C,EAAE,mBCS3E6C,EA1BE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,EAAGnD,EAAY,EAAZA,MACbK,EAAMC,cAAND,EAER,OACE,gCACE,eAAC+C,EAAA,EAAD,CAAMrC,GAAIC,IAAMC,GAAE,iBAAYkC,EAAE/B,IAAMiC,MAAO,CAAEC,MAAO,QAASC,OAAQ,WAAajC,UAAU,WAA9F,UACE,eAAC8B,EAAA,EAAKI,KAAN,WACE,cAACJ,EAAA,EAAKK,MAAN,UAAaN,EAAE3B,QACf,cAAC4B,EAAA,EAAKM,KAAN,UAAYP,EAAEQ,eAEhB,cAACP,EAAA,EAAKQ,OAAN,UACE,cAACC,EAAA,EAAD,CAAavC,UAAU,WAAWV,QAAQ,UAAUkD,IAAK,GAAIC,MAAK,UAAK,GAAL,YAIpE/D,GACA,sBAAKsB,UAAU,cAAf,UACE,cAACoB,EAAA,EAAD,CAAQ3B,GAAIC,IAAMC,GAAE,iBAAYkC,EAAE/B,IAAME,UAAU,aAAaqB,KAAK,KAApE,SAA0EtC,EAAE,gBAC5E,cAACqC,EAAA,EAAD,CAAQpB,UAAU,aAAaqB,KAAK,KAAK/B,QAAQ,UAAjD,SAA4DP,EAAE,UAC9D,cAAC2D,EAAD,CAAYxB,gBAAiBW,WCVxBc,EAlBA,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YACnB9D,EAAMC,cAAND,EAER,OACE,8BACE,wBAAO+D,QAAQ,SAAf,UACG/D,EAAE,iBADL,OAGE,uBACEe,GAAG,SACHiD,MAAOH,EACPI,SAAUH,UC+CLI,EA/CG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOxE,EAAY,EAAZA,MAClBK,EAAMC,cAAND,EACR,EAAkCoE,mBAAS,IAA3C,mBAAOP,EAAP,KAAkBQ,EAAlB,KAMMC,EAAeT,EACTM,EAAMI,QAAO,SAACzB,GAAD,OAAOA,EAAE3B,MAAMqD,cAAcC,SAASZ,EAAUW,kBAArEL,EAEJ,OACE,sBAAKpD,GAAG,UAAR,UACE,6BAAKf,EAAE,oBACP,4BAAIA,EAAE,mBACN,cAAC,EAAD,CAAQ6D,UAAWA,EAAWC,YAXd,SAACvB,GACnB8B,EAAa9B,EAAMmC,OAAOV,UAWxB,uBACCrE,GACC,gCACE,cAAC0C,EAAA,EAAD,CAAQ3B,GAAIC,IAAMC,GAAG,WAArB,SAAiCZ,EAAE,mBACnC,uBACA,6BAAKA,EAAE,gBACP,0BAGJ,cAAC2E,EAAA,EAAD,CAAKC,GAAG,OAAOC,GAAG,OAAO5D,UAAU,MAAnC,SACGtB,GACC2E,EAAYC,QAAO,SAACzB,GAAD,OAAOA,EAAEgC,UAAQC,KAAI,SAACjC,GAAD,OACtC,cAACkC,EAAA,EAAD,UACE,cAAC,EAAD,CAAUlC,EAAGA,EAAGnD,MAAOA,KADfmD,EAAE/B,SAMlB,uBACA,6BAAKf,EAAE,kBACP,uBACA,cAAC2E,EAAA,EAAD,CAAKC,GAAG,OAAOC,GAAG,OAAO5D,UAAU,MAAnC,SACGqD,EAAYC,QAAO,SAACzB,GAAD,OAAQA,EAAEgC,UAAQC,KAAI,SAACjC,GAAD,OACxC,cAACkC,EAAA,EAAD,UACE,cAAC,EAAD,CAAUlC,EAAGA,EAAGnD,MAAOA,KADfmD,EAAE/B,aCvCPkE,EAVQ,WACrB,IAAQjF,EAAMC,cAAND,EAER,OACE,sBAAKe,GAAG,UAAR,UACE,6BAAKf,EAAE,yBACP,4BAAIA,EAAE,4BCHGkF,EAJC,kBACd,qBAAKnE,GAAG,aCUKoE,EAVG,WAChB,IAAQnF,EAAMC,cAAND,EAER,OACE,qBAAKe,GAAG,UAAR,SACE,6BAAKf,EAAE,kBCKEoF,EAVC,WACd,IAAQpF,EAAMC,cAAND,EAER,OACE,qBAAKe,GAAG,UAAR,SACE,6BAAKf,EAAE,oB,oCCNPwB,EAAU,0CAmBD,EAjBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAACC,GAAD,OAAcA,EAASC,SAe9B,EAZA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SCTvCL,EAAU,oDAcD,EAZA,SAAC6D,GAEd,OADgB5D,IAAMC,IAAN,UAAaF,EAAb,YAAwB6D,IACzB1D,MAAK,SAACC,GAAD,OAAcA,EAASC,SAU9B,EAPA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,S,yBC8D9ByD,GAjEa,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACrBvF,EAAMC,cAAND,EAEFwF,EAAwBC,MAAaC,MAAM,CAC/CC,KAAMF,MACHG,IAAI,EAAG5F,EAAE,iBACT6F,IAAI,IAAK7F,EAAE,gBACX8F,SAAS9F,EAAE,oBACd+F,YAAaN,QAUf,OACE,cAAC,IAAD,CACEO,cAAe,CACbL,KAAM,GACNI,YAAa,IAEfE,iBAAkBT,EAClBU,SAd0B,SAACC,GAC7BZ,EAAgB,CACdI,KAAMQ,EAAOR,KACbI,YAAaI,EAAOJ,eAKtB,SAQG,gBACCK,EADD,EACCA,aACAC,EAFD,EAECA,aACAF,EAHD,EAGCA,OACAG,EAJD,EAICA,OAJD,OAMC,eAACC,EAAA,EAAD,CAAMC,YAAU,EAACN,SAAUE,EAA3B,UACE,eAACG,EAAA,EAAKE,MAAN,CAAY5B,GAAG,IAAI6B,UAAU,OAA7B,UACE,cAACH,EAAA,EAAKI,MAAN,UAAa3G,EAAE,qBACf,cAACuG,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLlB,KAAK,OACLmB,YAAa9G,EAAE,SACfgE,MAAOmC,EAAOR,KACd1B,SAAUoC,EACVU,YAAaT,EAAOX,OAEtB,cAACY,EAAA,EAAKK,QAAQI,SAAd,CAAuBH,KAAK,UAAUI,KAAK,QAAQ,aAAW,gBAA9D,SACGX,EAAOX,UAGZ,eAACY,EAAA,EAAKE,MAAN,CAAYxF,UAAU,OAAOyF,UAAU,cAAvC,UACE,cAACH,EAAA,EAAKI,MAAN,UAAa3G,EAAE,iBACf,cAACuG,EAAA,EAAKK,QAAN,CACElG,GAAG,WACHiF,KAAK,cACLuB,KAAM,EACNlD,MAAOmC,EAAOJ,YACd9B,SAAUoC,OAGd,cAAChE,EAAA,EAAD,CAAQwE,KAAK,SAAb,SAAuB7G,EAAE,wC,UCZpBmH,GA/CgB,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,cAAeC,EAAiC,EAAjCA,mBAAoBhC,EAAa,EAAbA,OAC3DrF,EAAMC,cAAND,EAER,EAAwCoE,mBAAS,IAAjD,mBAAOkD,EAAP,KAAqBC,EAArB,KACA,EAAsCnD,mBAAS,IAA/C,mBAAO2B,EAAP,KAAoByB,EAApB,KAeA,OACE,eAACjB,EAAA,EAAD,CAAML,SAdyB,SAAC3D,GAChCA,EAAMC,iBACN,IAAMiF,EAAeL,EAAc7C,QAAO,SAACmD,GAAD,OAAOA,EAAE/B,OAAS2B,EAAa,MAAI,GAC7ED,EAAmB,CACjBhC,SACAsC,eAAgBF,EAAa1G,GAC7BgF,gBAGFyB,EAAe,IACfD,EAAgB,KAIhB,UACE,eAAChB,EAAA,EAAKE,MAAN,WACE,cAACF,EAAA,EAAKI,MAAN,UAAa3G,EAAE,gCACf,cAAC,KAAD,CACEe,GAAG,yBACH6G,SAAS,OACTC,QAAST,EAAcrC,KAAI,SAAC2C,GAAD,OAAOA,EAAE/B,QACpCmB,YAAa9G,EAAE,sBACfiE,SAAUsD,EACVO,SAAUR,OAGd,eAACf,EAAA,EAAKE,MAAN,CAAYxF,UAAU,OAAOyF,UAAU,cAAvC,UACE,cAACH,EAAA,EAAKI,MAAN,UAAa3G,EAAE,iBACf,cAACuG,EAAA,EAAKK,QAAN,CACElG,GAAG,WACHiF,KAAK,cACLuB,KAAM,EACNlD,MAAO+B,EACP9B,SAAU,SAAC8D,GAAD,OAAOP,EAAeO,EAAErD,OAAOV,aAG7C,cAAC3B,EAAA,EAAD,CAAQwE,KAAK,SAAb,SAAuB7G,EAAE,qCCyDhBgI,GAhGS,SAAC,GAAgB,IAAd3C,EAAa,EAAbA,OACjBrF,EAAMC,cAAND,EAER,EAAwCoE,mBAAS,MAAjD,mBAAO6D,EAAP,KAAqBC,EAArB,KACA,EAAwC9D,mBAAS,MAAjD,mBAAO+D,EAAP,KAAqBC,EAArB,KACA,EAAwBhE,oBAAS,GAAjC,mBAAOiE,EAAP,KAAaC,EAAb,KACA,EAA0ClE,mBAAS,IAAnD,mBAAOgD,EAAP,KAAsBmB,EAAtB,KAEAC,IAAMC,WAAU,WACd9F,IACGhB,MAAK,SAAC+G,GACLH,EAAiBG,MAElBC,OAAM,SAACC,GAENC,QAAQC,IAAIF,QAEf,IAEH,IAAMG,EAAmB,kBAAMT,GAASD,IAoBlCW,EAA8B,SAACC,GACnCC,EAAyBD,GACtBtH,MAAK,kBAnBRoH,IACAb,EAAgBlI,EAAE,mCAClBmJ,YAAW,WACTjB,EAAgB,QACf,QAgBAS,OAAM,SAACC,GAAD,OAbS,SAACA,GAEnBC,QAAQC,IAAIF,GACZG,IACAX,EAAgBpI,EAAE,4BAClBmJ,YAAW,WACTf,EAAgB,QACf,KAMiBgB,CAAYR,OAelC,OACE,gCACqB,OAAjBX,GACF,cAACoB,EAAA,EAAD,CAAO9I,QAAQ,UAAf,SAA0B0H,IAEP,OAAjBE,GACF,cAACkB,EAAA,EAAD,CAAO9I,QAAQ,SAAf,SAAyB4H,IAEzB,cAAC9F,EAAA,EAAD,CAAQ9B,QAAQ,UAAUc,QAAS0H,EAAkBhI,GAAG,SAAxD,SACGf,EAAE,2BAEL,eAACsJ,EAAA,EAAD,CACEjB,KAAMA,EACNkB,OAAQR,EACRS,SAAS,SACTC,UAAU,EAJZ,UAME,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMlG,MAAP,UAAcpD,EAAE,uBAElB,cAACsJ,EAAA,EAAMnG,KAAP,UACE,eAACyG,EAAA,EAAD,CAAMC,iBAAiB,SAAS9I,GAAG,gBAAgBE,UAAU,OAA7D,UACE,cAAC6I,EAAA,EAAD,CAAKxI,SAAS,SAASH,MAAOnB,EAAE,kBAAhC,SACE,cAAC,GAAD,CACEoH,cAAeA,EACfC,mBAAoB2B,EACpB3D,OAAQA,MAGZ,cAACyE,EAAA,EAAD,CAAKxI,SAAS,MAAMH,MAAOnB,EAAE,uBAA7B,SACE,cAAC,GAAD,CAAqBuF,gBA1CH,SAACwE,GAC7BpH,EAAe,CAAEgD,KAAMoE,EAAmBpE,OACvChE,MAAK,SAACqI,GACL,IAAMrC,EAAiBqC,EAAI,GAAGjJ,GAC9BiI,EAA4B,CAC1B3D,SACAsC,iBACA5B,YAAagE,EAAmBhE,kC,UChD3BkE,GAXM,SAAC,GAAD,IAAGlJ,EAAH,EAAGA,GAAI4E,EAAP,EAAOA,KAAMI,EAAb,EAAaA,YAAb,OACnB,eAAChD,EAAA,EAAD,WACE,cAACmH,GAAA,EAAUrJ,OAAX,CAAkBH,GAAIqC,IAAK2G,OAAQpI,SAAUP,EAA7C,SACG4E,IAEH,cAACuE,GAAA,EAAUpJ,SAAX,CAAoBQ,SAAUP,EAA9B,SACE,cAACgC,EAAA,EAAKI,KAAN,UAAY4C,UCmBHoE,GAvBU,SAAC,GAAgB,IAAd9E,EAAa,EAAbA,OAC1B,EAAkDjB,mBAAS,IAA3D,mBAAOgG,EAAP,KAA0BC,EAA1B,KAaA,OAXA7B,IAAMC,WAAU,WACdS,EAAyB7D,GACtB1D,MAAK,SAAC+G,GACL2B,EAAqB3B,MAEtBC,OAAM,SAACC,GAENC,QAAQC,IAAIF,QAEf,IAGD,cAACsB,GAAA,EAAD,UACGE,EAAkBrF,KAAI,SAAC2C,GAAD,OACrB,cAAC,GAAD,CAAyB3G,GAAI2G,EAAE3G,GAAI4E,KAAM+B,EAAE/B,KAAMI,YAAa2B,EAAE3B,aAA7C2B,EAAE3G,UCEduJ,GAlBO,SAAC,GAAuB,IAArB3K,EAAoB,EAApBA,MAAO0F,EAAa,EAAbA,OACtBrF,EAAMC,cAAND,EAER,OACE,gCACE,6BACGA,EAAE,mBAEJL,GACC,8BACE,cAAC,GAAD,CAAiB0F,OAAQA,MAG7B,cAAC,GAAD,CAAkBA,OAAQA,QC0BjBkF,GAzCE,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,aAC5B3H,EAAI0H,EACNE,GAAa,EAEG,MAAhBD,IACFC,EAAa5H,EAAEgC,QAGjB,MAAkCV,mBAASsG,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACQ5K,EAAMC,cAAND,EAsBR,OACE,8BACE,uBAAMkG,SAtBO,SAAC3D,GAChBA,EAAMC,iBAEN,IAAMqI,EAAc,CAClB1J,MAAO2B,EAAE3B,MACTmC,UAAWR,EAAEQ,UACbwB,OAAQ6F,GAGU,MAAhBF,EACFA,EAAaI,GAEblI,EAAeG,EAAE/B,GAAI8J,IAUK5J,UAAU,aAApC,UACE,uBAAO8C,QAAQ,SAAS9C,UAAU,SAAlC,SAAwDjB,EAAZ2K,EAAc,2BAAgC,gCAC1F,uBAAO9D,KAAK,SAASxF,QARA,WACzBuJ,GAAcD,IAOwC5J,GAAG,SAASiD,MAAmBhE,EAAZ2K,EAAc,2BAAgC,sCCyB5GG,GA1DS,SAAC,GAA4B,IAA1BhI,EAAyB,EAAzBA,EAAGiI,EAAsB,EAAtBA,gBACpB/K,EAAMC,cAAND,EAER,EAA0BoE,mBAAStB,EAAE3B,OAArC,mBAAOA,EAAP,KAAc6J,EAAd,KAEMC,EAAaxF,MAAaC,MAAM,CACpCvE,MAAOsE,MACJG,IAAI,EAAG5F,EAAE,iBACT6F,IAAI,IAAK7F,EAAE,gBACX8F,SAAS9F,EAAE,sBAahB,OACE,cAAC,IAAD,CACEgG,cAAe,CACb7E,SAEF8E,iBAAkBgF,EAClB/E,SAhBsB,SAACC,GACzB4E,EAAgB,CACd5J,MAAOgF,EAAOhF,MACdmC,UAAWR,EAAEQ,UACbwB,OAAQhC,EAAEgC,SAGZkG,EAAS7E,EAAOhF,QAIhB,SAOG,gBACCiF,EADD,EACCA,aACAC,EAFD,EAECA,aACAF,EAHD,EAGCA,OACAG,EAJD,EAICA,OAJD,OAMC,cAACC,EAAA,EAAD,CAAMC,YAAU,EAACN,SAAUE,EAA3B,SACE,eAACG,EAAA,EAAKE,MAAN,CAAYxF,UAAU,OAAOyF,UAAU,cAAvC,UACE,cAACH,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLlB,KAAK,QACL3B,MAAOmC,EAAOhF,MACd8C,SAAUoC,EACVU,YAAaT,EAAOnF,QAEtB,cAACoF,EAAA,EAAKlD,KAAN,CAAWpC,UAAU,aAArB,SACGjB,EAAE,0BAEL,cAACuG,EAAA,EAAKK,QAAQI,SAAd,CAAuBH,KAAK,UAAUI,KAAK,QAAQ,aAAW,gBAA9D,SACGX,EAAOnF,iBCfP+J,GAjCG,SAAC,GAAkB,IAAhBpI,EAAe,EAAfA,EAAGnD,EAAY,EAAZA,MACdK,EAAMC,cAAND,EAER,EAAwCoE,mBAAS,MAAjD,mBAAO6D,EAAP,KAAqBC,EAArB,KAUA,OACE,gCACqB,OAAjBD,GACA,cAACoB,EAAA,EAAD,CAAO9I,QAAQ,UAAf,SAA0B0H,IAE5B,4EACEtI,GACA,gCACE,cAAC,GAAD,CAAiBmD,EAAGA,EAAGiI,gBAhBL,SAACI,GACzBxI,EAAeG,EAAE/B,GAAIoK,GACrBjD,EAAgBlI,EAAE,sBAClBmJ,YAAW,WACTjB,EAAgB,QACf,QAYG,cAAC,GAAD,CAAUsC,eAAgB1H,QAG3BnD,GACD,4BAAImD,EAAE3B,QAER,4BAAI2B,EAAEQ,gB,+BCjCN9B,GAAU,uCAcD,GAPA,SAACM,GAEd,OADgBL,IAAMM,KAAKP,GAASM,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAK9B,GAZA,SAACd,GAEd,OADgBU,IAAMC,IAAN,UAAaF,GAAb,YAAwBT,IACzBY,MAAK,SAACC,GAAD,OAAcA,EAASC,SAU9B,GAFA,SAACd,EAAIe,GAAL,OAAmBL,IAAMO,IAAN,UAAaR,GAAb,YAAwBT,GAAMe,ICZ1DN,GAAU,iDAcD,GAPA,SAACM,GAEd,OADgBL,IAAMM,KAAKP,GAASM,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAK9B,GAFA,SAACd,EAAIe,GAAL,OAAmBL,IAAMO,IAAN,UAAaR,GAAb,YAAwBT,GAAMe,IC6DjDsJ,GArEM,SAAC,GAA8B,IAA5BrK,EAA2B,EAA3BA,GAAIsK,EAAuB,EAAvBA,iBAClBrL,EAAMC,cAAND,EACR,EAAgCoE,mBAAS,IAAzC,mBAAOkH,EAAP,KAAiBC,EAAjB,KAeMC,EAAY,yCAAG,WAAOjJ,GAAP,kBAAAkJ,EAAA,yDACnBlJ,EAAMC,iBAEAkJ,EAAmB,CACvBvK,MAAOmK,GAGe,MAApBD,EAPe,gBAQjBA,EAAiBK,GARA,uCAUQ/I,GAAe+I,GACrC/J,MAAK,SAACE,GAEL,OADA0J,EAAY,IACL1J,EAAKd,MAbC,OAUX4K,EAVW,OAsBjBzC,GANkC,CAChC7D,OAAQtE,EACR6K,YAAaD,EACbE,SAAU,IAnBK,4CAAH,sDA0BlB,OACE,gCACE,6BAAK7L,EAAE,kBAEP,uBAAMkG,SAAUsF,EAAhB,UACE,8BACE,uBAAOzH,QAAQ,QAAf,SACG/D,EAAE,oBAEL,uBACA,uBACEe,GAAG,QACH8F,KAAK,OACL7C,MAAOsH,EACPrH,SA5CgB,SAAC1B,GACzBgJ,EAAYhJ,EAAMmC,OAAOV,aA8CrB,4BACE,uBAAO6C,KAAK,SAAS9F,GAAG,SAASiD,MAAOhE,EAAE,uC,SCiBrC8L,GA5EO,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,kBAClC,EAAsC5H,mBAAS2H,EAAUE,oBAAoBJ,UAA7E,mBAAoBK,GAApB,WACA,EAAkD9H,mBAAS2H,EAAU5K,OAArE,mBAA0BgL,GAA1B,WACQnM,EAAMC,cAAND,EACFoM,EAAUC,cAmChB,OACE,sBAAKtL,GAAG,UAAR,UACE,6BAAKf,EAAE,mBAEP,uBAAMkG,SAAU,SAAC6B,GAAD,OA7BE,SAACxF,GACrBA,EAAMC,iBACN2J,EAAqB5J,EAAMmC,OAAO,GAAGV,OACrCkI,EAAe3J,EAAMmC,OAAO,GAAGV,OAE/B,IAAMsI,EAA4B,CAChCjH,OAAQ0G,EAAUE,oBAAoB5G,OACtCuG,YAAaG,EAAUE,oBAAoBL,YAC3CC,SAAUtJ,EAAMmC,OAAO,GAAGV,OAGtB0H,EAAmB,CACvBvK,MAAOoB,EAAMmC,OAAO,GAAGV,OAGA,MAArBgI,GACFA,EAAkBM,GAEpB3J,GAAeoJ,EAAUhL,GAAI2K,GAC7Ba,GAA6BR,EAAUhL,GAAIuL,GAClB,MAArBN,GACFI,EAAQI,KAAK,KAQUC,CAAc1E,IAArC,UACE,8BACE,uBAAOhE,QAAQ,QAAf,SACG/D,EAAE,oBAEL,uBACA,uBACEe,GAAG,QACH8F,KAAK,OACL6F,aAAcX,EAAU5K,MACxB8C,SA3CgB,SAAC1B,GACzB4J,EAAqB5J,EAAMmC,OAAOV,aA6C9B,8BACE,uBAAOD,QAAQ,WAAf,SACG/D,EAAE,uBAEL,uBACA,uBACEe,GAAG,WACH8F,KAAK,UACL5C,SA1DmB,SAAC1B,GAC5B2J,EAAe3J,EAAMmC,OAAOV,QA0DpB0I,aAAcX,EAAUE,oBAAoBJ,cAGhD,4BACE,uBAAOhF,KAAK,SAAS9F,GAAG,SAASiD,MAAOhE,EAAE,uBA7BzB+L,EAAUE,oBAAoBJ,WCpCnDc,GAAgB,SAAC,GAAD,IACpBC,EADoB,EACpBA,eAAgBC,EADI,EACJA,gBAAiBC,EADb,EACaA,cAAeC,EAD5B,EAC4BA,gBAAiB/M,EAD7C,EAC6CA,EAAGgN,EADhD,EACgDA,WADhD,OAGpBJ,GACKA,EAAe7H,KAAI,SAACkI,EAAGC,GAAJ,OACpB,oBACEC,YAAa,SAACpF,GAAD,OAAO8E,EAAgB9E,EAAGmF,IACvCE,UAAW,kBAAMN,KACjBO,YAAa,SAACtF,GAAD,OAAOgF,EAAgBhF,EAAGmF,IAEvCI,WAAS,EALX,SAOE,gCACE,eAACjL,EAAA,EAAD,CAAQpB,UAAU,kBAAlB,cAAsCgM,EAAEhB,oBAAoBJ,SAA5D,IAAuEoB,EAAE9L,MAAzE,OACA,sBAAM+E,SAAU,SAAC6B,GAAD,OAAOiF,EAAWC,EAAGlF,IAAI9G,UAAU,cAAnD,SACE,cAACoB,EAAA,EAAD,CAAQwE,KAAK,SAAS5F,UAAU,aAAyBqB,KAAK,KAA9D,SAAoEtC,EAAE,eAApBkN,SANjDA,OA0FEK,GA7EO,SAAC,GAAY,IAAVxM,EAAS,EAATA,GACff,EAAMC,cAAND,EACFwN,EAAeC,mBACfC,EAAeD,mBACrB,EAA4CrJ,mBAAS,IAArD,mBAAOwI,EAAP,KAAuBe,EAAvB,KACA,EAA8CvJ,mBAAS,MAAvD,mBAAOwJ,EAAP,KAAwBC,EAAxB,KAEApF,qBAAU,WACR9F,GACU5B,GACPY,MAAK,SAACmM,GACL,IAAMC,EAAOD,EAAc,GAAGE,WAC9BD,EAAKE,MAAK,SAACxC,EAAGyC,GAAJ,OAAUzC,EAAEQ,oBAAoBJ,SAAWqC,EAAEjC,oBAAoBJ,YAC3E8B,EAAkBI,QAErB,IA2CH,OACE,qCACE,cAAC,GAAD,CACEnB,eAAgBA,EAChBC,gBApCkB,SAAC9E,EAAGoG,GAC1BX,EAAaY,QAAUD,GAoCnBrB,cAXgB,WACpBF,EAAe7H,KAAI,SAACkI,EAAGC,GAAJ,OAZS,SAACmB,EAAgBnB,GAE7C,IAAMZ,EAA4B,CAChCjH,OAAQgJ,EAAepC,oBAAoB5G,OAC3CuG,YAAayC,EAAepC,oBAAoBL,YAChDC,SAAUqB,EAAQ,GAGpBX,GAA6B8B,EAAepC,oBAAoBL,YAAaU,GAK3EgC,CAAsBrB,EAAGC,OAUvBH,gBAlCkB,SAAChF,EAAGoG,GAC1BT,EAAaU,QAAUD,EACvB,IAAMI,EAAQ,aAAO3B,GACf4B,EAAsBD,EAASf,EAAaY,SAClDG,EAASE,OAAOjB,EAAaY,QAAS,GACtCG,EAASE,OAAOf,EAAaU,QAAS,EAAGI,GACzChB,EAAaY,QAAUV,EAAaU,QACpCV,EAAaU,QAAU,KACvBT,EAAkBY,IA2BdvO,EAAGA,EACHgN,WA7Ca,SAACC,EAAGlF,GACrBA,EAAEvF,iBALiB,SAACyK,GACpBY,EAAmBZ,GAKnByB,CAAazB,MA6CTW,EACA,cAAC,GAAD,CAAe7B,UAAW6B,IAE1B,sCC7FOe,GARI,SAAC,GAAD,IAAG5N,EAAH,EAAGA,GAAH,OACjB,gCACE,4EACA,cAAC6N,GAAD,CAAc7N,GAAIA,IAClB,cAAC,GAAD,CAAeA,GAAIA,QCmCR8N,GAhCF,SAAC,GAAsB,IAApB1K,EAAmB,EAAnBA,MAAOxE,EAAY,EAAZA,MACbK,EAAMC,cAAND,EAEAe,EAAO+N,cAAP/N,GACF+B,EAAIqB,EAAM4K,MAAK,SAACtD,GAAD,OAAOA,EAAE1K,KAAOiO,OAAOjO,MACtCS,EAAO,iBAAaT,GAE1B,OACE,cAAC,IAAD,UACE,sBAAKA,GAAG,UAAR,UACE,cAACsB,EAAA,EAAD,CAAQ3B,GAAIC,IAAMC,GAAIY,EAAtB,SAAgCxB,EAAE,mBAClC,cAACqC,EAAA,EAAD,CAAQ3B,GAAIC,IAAMC,GAAE,UAAKY,EAAL,eAApB,SAAgDxB,EAAE,oBAClD,cAACqC,EAAA,EAAD,CAAQ3B,GAAIC,IAAMC,GAAE,UAAKY,EAAL,kBAApB,SAAmDxB,EAAE,uBAErD,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiP,KAAI,UAAKzN,EAAL,eAAX,SACE,cAAC,GAAD,CAAYT,GAAIA,MAElB,cAAC,IAAD,CAAOkO,KAAI,UAAKzN,EAAL,kBAAX,SACE,cAAC,GAAD,CAAe7B,MAAOA,EAAO0F,OAAQtE,MAEvC,cAAC,IAAD,CAAOkO,KAAMzN,EAAb,SACE,cAAC,GAAD,CAAWsB,EAAGA,EAAGnD,MAAOA,eC+DrBuP,GAxFC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACTnP,EAAMC,cAAND,EACFoM,EAAUC,cAEV+C,EAAgB3J,MAAaC,MAAM,CACvCvE,MAAOsE,MACJG,IAAI,EAAG5F,EAAE,iBACT6F,IAAI,IAAK7F,EAAE,gBACX8F,SAAS9F,EAAE,oBACdsD,UAAWmC,MACXX,OAAQW,QAkBV,OACE,sBAAK1E,GAAG,UAAR,UACE,6BAAKf,EAAE,aAEP,cAAC,IAAD,CACEgG,cAAe,CACb7E,MAAO,GACPmC,UAAW,GACXwB,QAAQ,GAEVmB,iBAAkBmJ,EAClBlJ,SA1BU,SAACC,GACf,IAAM0E,EAAc,CAClB1J,MAAOgF,EAAOhF,MACdmC,UAAW6C,EAAO7C,UAClBwB,OAAQqB,EAAOrB,aAGGuK,IAAhBF,EACFA,EAAYtE,IAEZlI,EAAekI,GACfuB,EAAQI,KAAK,OAQb,SASG,gBACCpG,EADD,EACCA,aACAC,EAFD,EAECA,aACAF,EAHD,EAGCA,OACAG,EAJD,EAICA,OAJD,OAMC,eAACC,EAAA,EAAD,CAAMC,YAAU,EAACN,SAAUE,EAA3B,UACE,eAACG,EAAA,EAAKE,MAAN,CAAY5B,GAAG,IAAI6B,UAAU,QAA7B,UACE,cAACH,EAAA,EAAKI,MAAN,UAAa3G,EAAE,eACf,cAACuG,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLlB,KAAK,QACL3B,MAAOmC,EAAOhF,MACd8C,SAAUoC,EACVU,YAAaT,EAAOnF,QAEtB,cAACoF,EAAA,EAAKK,QAAQI,SAAd,CAAuBH,KAAK,UAA5B,SACGP,EAAOnF,WAGZ,eAACoF,EAAA,EAAKE,MAAN,CAAYxF,UAAU,OAAOyF,UAAU,YAAvC,UACE,cAACH,EAAA,EAAKI,MAAN,UAAa3G,EAAE,mBACf,cAACuG,EAAA,EAAKK,QAAN,CACElG,GAAG,WACHiF,KAAK,YACLuB,KAAM,EACNlD,MAAOmC,EAAO7C,UACdW,SAAUoC,OAGd,cAACE,EAAA,EAAKE,MAAN,CAAYxF,UAAU,OAAOyF,UAAU,SAAvC,SACE,cAACH,EAAA,EAAK+I,MAAN,CACExJ,UAAQ,EACRH,KAAK,SACLjC,MAAO1D,EAAE,YACTgE,MAAOmC,EAAOrB,OACdb,SAAUoC,MAGd,cAAChE,EAAA,EAAD,CAAQwE,KAAK,SAAb,SAAuB7G,EAAE,mCCarBuP,GAjFJ,WACV,MAAwBnL,oBAAS,GAAjC,mBAAO1E,EAAP,KAAa8P,EAAb,KACA,EAA0BpL,oBAAS,GAAnC,mBAAOzE,EAAP,KAAc8P,EAAd,KACA,EAA0BrL,oBAAS,GAAnC,mBAAOxE,EAAP,KAAc8P,EAAd,KACA,EAA0BtL,mBAAS,IAAnC,mBAAOD,EAAP,KAAcwL,EAAd,KAgCA,OAZAnH,IAAMC,WAAU,WACd9F,IAEGhB,MAAK,SAACiO,GACLD,EAASC,MAEVjH,OAAM,SAACC,GAENC,QAAQC,IAAIF,QAEf,IAGD,eAAC,IAAD,WACE,cAAC,EAAD,CACElJ,KAAMA,EACNC,MAAOA,EACPC,MAAOA,EACPC,WApCa,WACjB2P,GAAQ,GACRE,GAAS,GACTD,GAAS,IAkCL3P,YAzBc,WAClB0P,GAAQ,GACRE,GAAS,GACTD,GAAS,IAuBL1P,YAhCc,WAClByP,GAAQ,GACRE,GAAS,GACTD,GAAS,IA8BLtL,MAAOA,IAEPvE,EACE,IACA,cAAC,EAAD,IAEJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqP,KAAK,aAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,GAAD,CAAM9K,MAAOA,EAAOxE,MAAOA,MAE3BA,GACF,cAAC,IAAD,CAAOsP,KAAK,gBAAZ,SACE,cAAC,GAAD,CAAU9K,MAAOA,MAGjBxE,GACF,cAAC,IAAD,CAAOsP,KAAK,WAAZ,SACE,cAACY,GAAD,MAGF,cAAC,IAAD,CAAOZ,KAAK,IAAZ,SACIrP,EACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWD,MAAOA,EAAOwE,MAAOA,aCnF1B2L,QACW,cAA7BrN,OAAOsN,SAASC,UACoB,UAA7BvN,OAAOsN,SAASC,UAEhBvN,OAAOsN,SAASC,SAASC,MAC1B,2DCTRC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SDyGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7O,MAAK,SAAC8O,GACLA,EAAaC,kB","file":"static/js/main.c36eaf13.chunk.js","sourcesContent":["/* eslint-disable linebreak-style */\r\nimport i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n// eslint-disable-next-line import/no-unresolved\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\ni18n.use(LanguageDetector).init();\r\n\r\ni18n.use(initReactI18next).init({\r\n  fallbackLng: 'fi',\r\n\r\n  // eslint-disable-next-line no-undef\r\n  lng: localStorage.getItem('i18nextLng') || 'fi',\r\n  resources: {\r\n    fi: {\r\n      // eslint-disable-next-line global-require\r\n      translations: require('./locales/fi/translations.json'),\r\n    },\r\n    en: {\r\n      // eslint-disable-next-line global-require\r\n      translations: require('./locales/en/translations.json'),\r\n    },\r\n  },\r\n  ns: ['translations'],\r\n  defaultNS: 'translations',\r\n});\r\n\r\ni18n.languages = ['fi', 'en'];\r\n\r\nexport default i18n;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavLink,\r\n  NavDropdown,\r\n} from 'react-bootstrap';\r\n\r\n// Import translations\r\nimport { useTranslation } from 'react-i18next';\r\nimport i18n from '../../i18n/config';\r\n\r\nconst Navigationbar = ({\r\n  user, admin, guest, changeUser, changeAdmin, changeGuest,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  const changeLanguage = (language) => {\r\n    i18n.changeLanguage(language);\r\n  };\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\" sticky=\"top\">\r\n      <Navbar.Brand as={Link} to=\"/\">{t('nameOfTheGame')}</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <NavDropdown title={t('selectUser')}>\r\n            <NavDropdown.Item onClick={() => changeGuest()} eventKey=\"guest\">{t('guest')}</NavDropdown.Item>\r\n            <NavDropdown.Item onClick={() => changeUser()} eventKey=\"student\">{t('student')}</NavDropdown.Item>\r\n            <NavDropdown.Item onClick={() => changeAdmin()} eventKey=\"teacher\">{t('teacher')}</NavDropdown.Item>\r\n          </NavDropdown>\r\n          <NavDropdown title={t('selectLanguage')}>\r\n            <NavDropdown.Item onClick={() => changeLanguage('fi')} eventKey=\"fi\">{t('languageFinnish')}</NavDropdown.Item>\r\n            <NavDropdown.Item onClick={() => changeLanguage('en')} eventKey=\"en\">{t('languageEnglish')}</NavDropdown.Item>\r\n          </NavDropdown>\r\n          { admin && (\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/users\">{t('userInformation')}</NavLink>\r\n          </Nav.Item>\r\n          )}\r\n          { admin && (\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/files\">{t('fileBank')}</NavLink>\r\n          </Nav.Item>\r\n          )}\r\n          { (user || guest || admin) && (\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/howtoplay\">{t('howToPlay')}</NavLink>\r\n          </Nav.Item>\r\n          )}\r\n          { user && (\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/profile\">{t('userProfile')}</NavLink>\r\n          </Nav.Item>\r\n          )}\r\n          <Nav.Item>\r\n            { (user || admin)\r\n              ? <NavLink as={Link} to=\"/logout\">{t('logOut')}</NavLink>\r\n              : <NavLink as={Link} to=\"/login\">{t('logIn')}</NavLink> }\r\n          </Nav.Item>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigationbar;\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:8080/api/cases';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject);\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove,\r\n};\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport { Button } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport service from '../../services/cases';\r\n\r\nconst removeCase = ({ caseToBeRemoved, removeCaseFunc }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const handleDelete = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (removeCaseFunc != null) {\r\n      removeCaseFunc(caseToBeRemoved.id);\r\n      // eslint-disable-next-line no-param-reassign\r\n      caseToBeRemoved.id = null;\r\n      removeCaseFunc(caseToBeRemoved.id);\r\n    } else {\r\n      // eslint-disable-next-line no-alert\r\n      const confirmBox = window.confirm(t('deleteCaseConfirmation'));\r\n      if (confirmBox === true) {\r\n        service.remove(caseToBeRemoved.id)\r\n          .then((response) => (response.message));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Button className=\"removeButton\" size=\"sm\" variant=\"danger\" onClick={handleDelete}>{t('buttonRemove')}</Button>\r\n  );\r\n};\r\n\r\nexport default removeCase;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Card,\r\n  Button,\r\n  ProgressBar,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport RemoveCase from './RemoveCase';\r\n// import RemoveCase from './RemoveCase';\r\n\r\nconst CaseCard = ({ c, admin }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div>\r\n      <Card as={Link} to={`/cases/${c.id}`} style={{ width: '20rem', cursor: 'pointer' }} className=\"caseCard\">\r\n        <Card.Body>\r\n          <Card.Title>{c.title}</Card.Title>\r\n          <Card.Text>{c.anamnesis}</Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <ProgressBar className=\"progsbar\" variant=\"success\" now={25} label={`${25}%`} />\r\n        </Card.Footer>\r\n      </Card>\r\n\r\n      { admin && (\r\n        <div className=\"cardButtons\">\r\n          <Button as={Link} to={`/cases/${c.id}`} className=\"editButton\" size=\"sm\">{t('buttonEdit')}</Button>\r\n          <Button className=\"copyButton\" size=\"sm\" variant=\"warning\">{t('copy')}</Button>\r\n          <RemoveCase caseToBeRemoved={c} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CaseCard;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Search = ({ newSearch, searchCases }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"search\">\r\n        {t('searchByTitle')}\r\n        &nbsp;\r\n        <input\r\n          id=\"search\"\r\n          value={newSearch}\r\n          onChange={searchCases}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable array-callback-return */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Col,\r\n  Row,\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport CaseCard from '../case/CaseCard';\r\nimport Search from './Search';\r\n\r\nconst Frontpage = ({ cases, admin }) => {\r\n  const { t } = useTranslation();\r\n  const [newSearch, setNewSearch] = useState('');\r\n\r\n  const searchCases = (event) => {\r\n    setNewSearch(event.target.value);\r\n  };\r\n\r\n  const casesToShow = !newSearch\r\n    ? cases : cases.filter((c) => c.title.toLowerCase().includes(newSearch.toLowerCase()));\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('frontpageTitle')}</h2>\r\n      <p>{t('frontpageText')}</p>\r\n      <Search newSearch={newSearch} searchCases={searchCases} />\r\n      <br />\r\n      {admin && (\r\n        <div>\r\n          <Button as={Link} to=\"/newcase\">{t('buttonNewCase')}</Button>\r\n          <br />\r\n          <h3>{t('caseHidden')}</h3>\r\n          <hr />\r\n        </div>\r\n      )}\r\n      <Row xs=\"auto\" md=\"auto\" className=\"g-4\">\r\n        {admin && (\r\n          casesToShow.filter((c) => c.hidden).map((c) => (\r\n            <Col key={c.id}>\r\n              <CaseCard c={c} admin={admin} />\r\n            </Col>\r\n          ))\r\n        )}\r\n      </Row>\r\n      <br />\r\n      <h3>{t('casePlayable')}</h3>\r\n      <hr />\r\n      <Row xs=\"auto\" md=\"auto\" className=\"g-4\">\r\n        {casesToShow.filter((c) => !c.hidden).map((c) => (\r\n          <Col key={c.id}>\r\n            <CaseCard c={c} admin={admin} />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default Frontpage;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst GuestFrontpage = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('GuestFrontpageTitle')}</h2>\r\n      <p>{t('GuestFrontpageText')}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default GuestFrontpage;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\n\r\nconst Sidebar = () => (\r\n  <div id=\"sidebar\" />\r\n);\r\n\r\nexport default Sidebar;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst HowToPlay = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('howToPlay')}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HowToPlay;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Profile = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('userProfile')}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:8080/api/differentials';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject);\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove,\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:8080/api/differentialsUnderCases';\r\n\r\nconst getAll = (caseId) => {\r\n  const request = axios.get(`${baseUrl}/${caseId}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject);\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\n\r\nconst AddDifferentialForm = ({ addDifferential }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const newDifferentialSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .min(2, t('warningShort'))\r\n      .max(999, t('warningLong'))\r\n      .required(t('warningRequired')),\r\n    description: Yup.string(),\r\n  });\r\n\r\n  const handleDifferentialAdd = (values) => {\r\n    addDifferential({\r\n      name: values.name,\r\n      description: values.description,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: '',\r\n        description: '',\r\n      }}\r\n      validationSchema={newDifferentialSchema}\r\n      onSubmit={handleDifferentialAdd}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        values,\r\n        errors,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Group md=\"6\" controlId=\"name\">\r\n            <Form.Label>{t('addDifferential')}</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder={t('write')}\r\n              value={values.name}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.name}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n              {errors.name}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"description\">\r\n            <Form.Label>{t('description')}</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              name=\"description\"\r\n              rows={3}\r\n              value={values.description}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddDifferentialForm;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\n\r\nconst SelectDifferentialForm = ({ differentials, selectDifferential, caseId }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [selectedDiff, setSelectedDiff] = useState([]);\r\n  const [description, setDescription] = useState('');\r\n\r\n  const handleDifferentialChoose = (event) => {\r\n    event.preventDefault();\r\n    const differential = differentials.filter((d) => d.name === selectedDiff[0])[0];\r\n    selectDifferential({\r\n      caseId,\r\n      differentialId: differential.id,\r\n      description,\r\n    });\r\n\r\n    setDescription('');\r\n    setSelectedDiff([]);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleDifferentialChoose}>\r\n      <Form.Group>\r\n        <Form.Label>{t('selectExistingDifferential')}</Form.Label>\r\n        <Typeahead\r\n          id=\"basic-typeahead-single\"\r\n          labelKey=\"name\"\r\n          options={differentials.map((d) => d.name)}\r\n          placeholder={t('selectDifferential')}\r\n          onChange={setSelectedDiff}\r\n          selected={selectedDiff}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"description\">\r\n        <Form.Label>{t('description')}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          name=\"description\"\r\n          rows={3}\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Button type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SelectDifferentialForm;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Button, Modal, Tabs, Tab, Alert,\r\n} from 'react-bootstrap';\r\nimport service from '../../services/differentials';\r\nimport serviceUnderCases from '../../services/differentialsUnderCases';\r\nimport AddDifferentialForm from './AddDifferentialForm';\r\nimport SelectDifferentialForm from './SelectDifferentialForm';\r\n\r\nconst NewDifferential = ({ caseId }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [alertMessage, setAlertMessage] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const [differentials, setDifferentials] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    service.getAll()\r\n      .then((initialDifferentials) => {\r\n        setDifferentials(initialDifferentials);\r\n      })\r\n      .catch((error) => {\r\n        // eslint-disable-next-line\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const toggleVisibility = () => setShow(!show);\r\n\r\n  const handleSuccess = () => {\r\n    toggleVisibility();\r\n    setAlertMessage(t('differentialUpdateSuccess'));\r\n    setTimeout(() => {\r\n      setAlertMessage(null);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleError = (error) => {\r\n    // eslint-disable-next-line no-console\r\n    console.log(error);\r\n    toggleVisibility();\r\n    setErrorMessage(t('differentialUpdateError'));\r\n    setTimeout(() => {\r\n      setErrorMessage(null);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleDifferentialSelection = (ducObject) => {\r\n    serviceUnderCases.create(ducObject)\r\n      .then(() => handleSuccess())\r\n      .catch((error) => handleError(error));\r\n  };\r\n\r\n  const handleDifferentialAdd = (differentialObject) => {\r\n    service.create({ name: differentialObject.name })\r\n      .then((res) => {\r\n        const differentialId = res[0].id;\r\n        handleDifferentialSelection({\r\n          caseId,\r\n          differentialId,\r\n          description: differentialObject.description,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      { alertMessage !== null && (\r\n      <Alert variant=\"success\">{alertMessage}</Alert>\r\n      )}\r\n      { errorMessage !== null && (\r\n      <Alert variant=\"danger\">{errorMessage}</Alert>\r\n      )}\r\n      <Button variant=\"primary\" onClick={toggleVisibility} id=\"addNew\">\r\n        {t('buttonNewDifferential')}\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        onHide={toggleVisibility}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{t('addDifferential')}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Tabs defaultActiveKey=\"select\" id=\"differentials\" className=\"mb-3\">\r\n            <Tab eventKey=\"select\" title={t('selectExisting')}>\r\n              <SelectDifferentialForm\r\n                differentials={differentials}\r\n                selectDifferential={handleDifferentialSelection}\r\n                caseId={caseId}\r\n              />\r\n            </Tab>\r\n            <Tab eventKey=\"add\" title={t('addNewDifferential2')}>\r\n              <AddDifferentialForm addDifferential={handleDifferentialAdd} />\r\n            </Tab>\r\n          </Tabs>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewDifferential;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { Accordion, Card } from 'react-bootstrap';\r\n\r\nconst Differential = ({ id, name, description }) => (\r\n  <Card>\r\n    <Accordion.Toggle as={Card.Header} eventKey={id}>\r\n      {name}\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey={id}>\r\n      <Card.Body>{description}</Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n);\r\n\r\nexport default Differential;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport serviceUnderCases from '../../services/differentialsUnderCases';\r\nimport Differential from './Differential';\r\n\r\nconst DifferentialList = ({ caseId }) => {\r\n  const [caseDifferentials, setCaseDifferentials] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    serviceUnderCases.getAll(caseId)\r\n      .then((initialDifferentials) => {\r\n        setCaseDifferentials(initialDifferentials);\r\n      })\r\n      .catch((error) => {\r\n        // eslint-disable-next-line\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Accordion>\r\n      {caseDifferentials.map((d) => (\r\n        <Differential key={d.id} id={d.id} name={d.name} description={d.description} />\r\n      ))}\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default DifferentialList;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable array-callback-return */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport NewDifferential from './NewDifferential';\r\nimport DifferentialList from './DifferentialList';\r\n\r\nconst Differentials = ({ admin, caseId }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        {t('Differentials')}\r\n      </h2>\r\n      {admin && (\r\n        <div>\r\n          <NewDifferential caseId={caseId} />\r\n        </div>\r\n      )}\r\n      <DifferentialList caseId={caseId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Differentials;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport service from '../../services/cases';\r\n\r\nconst HideCase = ({ caseToBeHidden, hideCaseFunc }) => {\r\n  const c = caseToBeHidden;\r\n  let hideStatus = false;\r\n\r\n  if (hideCaseFunc == null) {\r\n    hideStatus = c.hidden;\r\n  }\r\n\r\n  const [newHidden, setNewHidden] = useState(hideStatus);\r\n  const { t } = useTranslation();\r\n\r\n  const hideCase = (event) => {\r\n    event.preventDefault();\r\n    // eslint-disable-next-line no-param-reassign\r\n    const caseObject = ({\r\n      title: c.title,\r\n      anamnesis: c.anamnesis,\r\n      hidden: newHidden,\r\n    });\r\n\r\n    if (hideCaseFunc != null) {\r\n      hideCaseFunc(caseObject);\r\n    } else {\r\n      service.update(c.id, caseObject);\r\n    }\r\n  };\r\n\r\n  const handleHiddenChange = () => {\r\n    setNewHidden(!newHidden);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={hideCase} className=\"buttonLeft\">\r\n        <label htmlFor=\"submit\" className=\"hidden\">{newHidden ? t('buttonShowCaseToStudents') : t('buttonHideCaseFromStudents')}</label>\r\n        <input type=\"submit\" onClick={handleHiddenChange} id=\"submit\" value={newHidden ? t('buttonShowCaseToStudents') : t('buttonHideCaseFromStudents')} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HideCase;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Form } from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst UpdateCaseTitle = ({ c, updateCaseTitle }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [title, setTitle] = useState(c.title);\r\n\r\n  const caseSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n      .min(2, t('warningShort'))\r\n      .max(999, t('warningLong'))\r\n      .required(t('warningRequired')),\r\n  });\r\n\r\n  const handleTitleUpdate = (values) => {\r\n    updateCaseTitle({\r\n      title: values.title,\r\n      anamnesis: c.anamnesis,\r\n      hidden: c.hidden,\r\n    });\r\n\r\n    setTitle(values.title);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        title,\r\n      }}\r\n      validationSchema={caseSchema}\r\n      onSubmit={handleTitleUpdate}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        values,\r\n        errors,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Group className=\"mb-3\" controlId=\"updateTitle\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.title}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              {t('caseTitleInstruction')}\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n              {errors.title}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default UpdateCaseTitle;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Alert } from 'react-bootstrap';\r\nimport HideCase from '../case/HideCase';\r\nimport service from '../../services/cases';\r\nimport UpdateCaseTitle from '../case/UpdateCaseTitle';\r\n\r\nconst Anamnesis = ({ c, admin }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [alertMessage, setAlertMessage] = useState(null);\r\n\r\n  const handleTitleUpdate = (updatedCase) => {\r\n    service.update(c.id, updatedCase);\r\n    setAlertMessage(t('caseUpdateSuccess'));\r\n    setTimeout(() => {\r\n      setAlertMessage(null);\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      { alertMessage !== null && (\r\n        <Alert variant=\"success\">{alertMessage}</Alert>\r\n      )}\r\n      <p>Casen tiedot löytyvät täältä</p>\r\n      { admin && (\r\n        <div>\r\n          <UpdateCaseTitle c={c} updateCaseTitle={handleTitleUpdate} />\r\n          <HideCase caseToBeHidden={c} />\r\n        </div>\r\n      )}\r\n      { !admin && (\r\n        <p>{c.title}</p>\r\n      )}\r\n      <p>{c.anamnesis}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Anamnesis;\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:8080/api/procedures';\r\n\r\nconst getAll = (id) => {\r\n  const request = axios.get(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject);\r\n\r\nexport default {\r\n  create,\r\n  getAll,\r\n  update,\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:8080/api/proceduresUnderCases';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject);\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport service from '../../services/procedures';\r\nimport serviceUnderCases from '../../services/proceduresUnderCase';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst newProcedure = ({ id, addProcedureFunc }) => {\r\n  const { t } = useTranslation();\r\n  const [newTitle, setNewTitle] = useState('');\r\n  //  const [procedures, setProcedures] = useState([]);\r\n\r\n  /*   useEffect(() => {\r\n    service\r\n      .getAll()\r\n      .then((proceduresList) => {\r\n        setProcedures(proceduresList);\r\n      });\r\n  }); */\r\n\r\n  const handleTitleChange = (event) => {\r\n    setNewTitle(event.target.value);\r\n  };\r\n\r\n  const addProcedure = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const procedureObject = ({\r\n      title: newTitle,\r\n    });\r\n\r\n    if (addProcedureFunc != null) {\r\n      addProcedureFunc(procedureObject);\r\n    } else {\r\n      const receivedID = await service.create(procedureObject)\r\n        .then((data) => {\r\n          setNewTitle('');\r\n          return data.id;\r\n        });\r\n\r\n      const procedureUnderCaseObject = ({\r\n        caseId: id,\r\n        procedureId: receivedID,\r\n        priority: 1,\r\n      });\r\n\r\n      serviceUnderCases.create(procedureUnderCaseObject);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{t('addProcedure')}</h2>\r\n\r\n      <form onSubmit={addProcedure}>\r\n        <p>\r\n          <label htmlFor=\"title\">\r\n            {t('procedureTitle')}\r\n          </label>\r\n          <br />\r\n          <input\r\n            id=\"title\"\r\n            type=\"text\"\r\n            value={newTitle}\r\n            onChange={handleTitleChange}\r\n          />\r\n        </p>\r\n        <p>\r\n          <input type=\"submit\" id=\"submit\" value={t('buttonSubmitNewProcedure')} />\r\n        </p>\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default newProcedure;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-unused-expressions */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router-dom';\r\nimport service from '../../services/procedures';\r\nimport serviceUnderProcedure from '../../services/proceduresUnderCase';\r\n\r\nconst EditProcedure = ({ procedure, editProcedureFunc }) => {\r\n  const [newPriority, setNewPriority] = useState(procedure.proceduresUnderCase.priority);\r\n  const [newProcedureTitle, setNewProcedureTitle] = useState(procedure.title);\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n\r\n  const handlePriorityChange = (event) => {\r\n    setNewPriority(event.target.value);\r\n  };\r\n\r\n  const handleTitleChange = (event) => {\r\n    setNewProcedureTitle(event.target.value);\r\n  };\r\n\r\n  const editProcedure = (event) => {\r\n    event.preventDefault();\r\n    setNewProcedureTitle(event.target[0].value);\r\n    setNewPriority(event.target[1].value);\r\n    // eslint-disable-next-line no-param-reassign\r\n    const procedureUnderCaseObject = ({\r\n      caseId: procedure.proceduresUnderCase.caseId,\r\n      procedureId: procedure.proceduresUnderCase.procedureId,\r\n      priority: event.target[1].value,\r\n    });\r\n\r\n    const procedureObject = ({\r\n      title: event.target[0].value,\r\n    });\r\n\r\n    if (editProcedureFunc != null) {\r\n      editProcedureFunc(procedureUnderCaseObject);\r\n    }\r\n    service.update(procedure.id, procedureObject);\r\n    serviceUnderProcedure.update(procedure.id, procedureUnderCaseObject);\r\n    if (editProcedureFunc == null) {\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"wrapper\" key={procedure.proceduresUnderCase.priority}>\r\n      <h2>{t('editProcedure')}</h2>\r\n\r\n      <form onSubmit={(e) => editProcedure(e)}>\r\n        <p>\r\n          <label htmlFor=\"title\">\r\n            {t('procedureTitle')}\r\n          </label>\r\n          <br />\r\n          <input\r\n            id=\"title\"\r\n            type=\"text\"\r\n            defaultValue={procedure.title}\r\n            onChange={handleTitleChange}\r\n          />\r\n        </p>\r\n        <p>\r\n          <label htmlFor=\"priority\">\r\n            {t('procedurePriority')}\r\n          </label>\r\n          <br />\r\n          <input\r\n            id=\"priority\"\r\n            type=\"integer\"\r\n            onChange={handlePriorityChange}\r\n            defaultValue={procedure.proceduresUnderCase.priority}\r\n          />\r\n        </p>\r\n        <p>\r\n          <input type=\"submit\" id=\"submit\" value={t('buttonEdit')} />\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProcedure;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-restricted-globals */\r\n/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport service from '../../services/procedures';\r\nimport EditProcedure from './EditProcedure';\r\nimport serviceUnderProcedure from '../../services/proceduresUnderCase';\r\n\r\nconst DragNDropList = ({\r\n  proceduresHook, handleDragStart, handleDragEnd, handleDragEnter, t, submitForm,\r\n}) => (\r\n  proceduresHook\r\n    && proceduresHook.map((p, index) => (\r\n      <h4\r\n        onDragStart={(e) => handleDragStart(e, index)}\r\n        onDragEnd={() => handleDragEnd()}\r\n        onDragEnter={(e) => handleDragEnter(e, index)}\r\n        key={index}\r\n        draggable\r\n      >\r\n        <div>\r\n          <Button className=\"procedureButton\"> {p.proceduresUnderCase.priority} {p.title} </Button>\r\n          <form onSubmit={(e) => submitForm(p, e)} className=\"handleEdits\">\r\n            <Button type=\"submit\" className=\"editButton\" key={index} size=\"sm\">{t('buttonEdit') }</Button>\r\n          </form>\r\n        </div>\r\n      </h4>\r\n    ))\r\n);\r\n\r\nconst ProcedureList = ({ id }) => {\r\n  const { t } = useTranslation();\r\n  const draggingItem = useRef();\r\n  const dragOverItem = useRef();\r\n  const [proceduresHook, setProceduresHook] = useState([]);\r\n  const [procedureToEdit, setProcedureToEdit] = useState(null);\r\n\r\n  useEffect(() => {\r\n    service\r\n      .getAll(id)\r\n      .then((procedureList) => {\r\n        const list = procedureList[0].procedures;\r\n        list.sort((a, b) => a.proceduresUnderCase.priority - b.proceduresUnderCase.priority);\r\n        setProceduresHook(list);\r\n      });\r\n  }, []);\r\n\r\n  const handleEditId = (p) => {\r\n    setProcedureToEdit(p);\r\n  };\r\n\r\n  const submitForm = (p, e) => {\r\n    e.preventDefault();\r\n    handleEditId(p);\r\n  };\r\n\r\n  const handleDragStart = (e, position) => {\r\n    draggingItem.current = position;\r\n  };\r\n\r\n  const handleDragEnter = (e, position) => {\r\n    dragOverItem.current = position;\r\n    const listCopy = [...proceduresHook];\r\n    const draggingItemContent = listCopy[draggingItem.current];\r\n    listCopy.splice(draggingItem.current, 1);\r\n    listCopy.splice(dragOverItem.current, 0, draggingItemContent);\r\n    draggingItem.current = dragOverItem.current;\r\n    dragOverItem.current = null;\r\n    setProceduresHook(listCopy);\r\n  };\r\n\r\n  const dragDropEditProcedure = (givenProcedure, index) => {\r\n    // eslint-disable-next-line no-param-reassign\r\n    const procedureUnderCaseObject = ({\r\n      caseId: givenProcedure.proceduresUnderCase.caseId,\r\n      procedureId: givenProcedure.proceduresUnderCase.procedureId,\r\n      priority: index + 1,\r\n    });\r\n    // eslint-disable-next-line max-len\r\n    serviceUnderProcedure.update(givenProcedure.proceduresUnderCase.procedureId, procedureUnderCaseObject);\r\n  };\r\n\r\n  const handleDragEnd = () => {\r\n    proceduresHook.map((p, index) => (\r\n      dragDropEditProcedure(p, index)\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DragNDropList\r\n        proceduresHook={proceduresHook}\r\n        handleDragStart={handleDragStart}\r\n        handleDragEnd={handleDragEnd}\r\n        handleDragEnter={handleDragEnter}\r\n        t={t}\r\n        submitForm={submitForm}\r\n      />\r\n      { procedureToEdit ? (\r\n        <EditProcedure procedure={procedureToEdit} />\r\n      ) : (\r\n        <p> </p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedureList;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport NewProcedure from './NewProcedure';\r\nimport ProcedureList from './ProcedureList';\r\n\r\nconst Procedures = ({ id }) => (\r\n  <div>\r\n    <p>Toimenpiteet löytyvät täältä</p>\r\n    <NewProcedure id={id} />\r\n    <ProcedureList id={id} />\r\n  </div>\r\n);\r\n\r\nexport default Procedures;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch, Route, Link, useParams,\r\n} from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport Differentials from '../differential/Differentials';\r\nimport Anamnesis from '../anamnesis/Anamnesis';\r\nimport Procedures from '../procedure/Procedures';\r\n\r\nconst Case = ({ cases, admin }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const { id } = useParams();\r\n  const c = cases.find((a) => a.id === Number(id));\r\n  const baseUrl = `/cases/${id}`;\r\n\r\n  return (\r\n    <Router>\r\n      <div id=\"wrapper\">\r\n        <Button as={Link} to={baseUrl}>{t('caseAnamnesis')}</Button>\r\n        <Button as={Link} to={`${baseUrl}/procedures`}>{t('caseProcedures')}</Button>\r\n        <Button as={Link} to={`${baseUrl}/differentials`}>{t('caseDifferentials')}</Button>\r\n\r\n        <Switch>\r\n          <Route path={`${baseUrl}/procedures`}>\r\n            <Procedures id={id} />\r\n          </Route>\r\n          <Route path={`${baseUrl}/differentials`}>\r\n            <Differentials admin={admin} caseId={id} />\r\n          </Route>\r\n          <Route path={baseUrl}>\r\n            <Anamnesis c={c} admin={admin} />\r\n          </Route>\r\n        </Switch>\r\n\r\n      </div>\r\n\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Case;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport service from '../../services/cases';\r\n\r\nconst newCase = ({ addCaseFunc }) => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n\r\n  const newCaseSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n      .min(2, t('warningShort'))\r\n      .max(999, t('warningLong'))\r\n      .required(t('warningRequired')),\r\n    anamnesis: Yup.string(),\r\n    hidden: Yup.bool(),\r\n  });\r\n\r\n  const addCase = (values) => {\r\n    const caseObject = ({\r\n      title: values.title,\r\n      anamnesis: values.anamnesis,\r\n      hidden: values.hidden,\r\n    });\r\n\r\n    if (addCaseFunc !== undefined) {\r\n      addCaseFunc(caseObject);\r\n    } else {\r\n      service.create(caseObject);\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('addCase')}</h2>\r\n\r\n      <Formik\r\n        initialValues={{\r\n          title: '',\r\n          anamnesis: '',\r\n          hidden: false,\r\n        }}\r\n        validationSchema={newCaseSchema}\r\n        onSubmit={addCase}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          values,\r\n          errors,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Form.Group md=\"6\" controlId=\"title\">\r\n              <Form.Label>{t('caseTitle')}</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.title}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.title}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"anamnesis\">\r\n              <Form.Label>{t('caseAnamnesis')}</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                name=\"anamnesis\"\r\n                rows={3}\r\n                value={values.anamnesis}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"hidden\">\r\n              <Form.Check\r\n                required\r\n                name=\"hidden\"\r\n                label={t('hideCase')}\r\n                value={values.hidden}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Button type=\"submit\">{t('buttonSubmitNewCase')}</Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default newCase;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch, Route,\r\n} from 'react-router-dom';\r\n\r\n// Import components\r\nimport Navigationbar from './components/navigation/Navbar';\r\nimport service from './services/cases';\r\nimport Frontpage from './components/frontpage/Frontpage';\r\nimport GuestFrontpage from './components/frontpage/GuestFrontpage';\r\nimport Sidebar from './components/navigation/Sidebar';\r\nimport HowToPlay from './components/instructions/HowToPlay';\r\nimport Profile from './components/user/Profile';\r\nimport Case from './components/case/Case';\r\nimport HideCase from './components/case/HideCase';\r\nimport NewCase from './components/case/NewCase';\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(false);\r\n  const [admin, setAdmin] = useState(false);\r\n  const [guest, setGuest] = useState(true);\r\n  const [cases, setCases] = useState([]);\r\n\r\n  const changeUser = () => {\r\n    setUser(true);\r\n    setGuest(false);\r\n    setAdmin(false);\r\n  };\r\n\r\n  const changeGuest = () => {\r\n    setUser(false);\r\n    setGuest(true);\r\n    setAdmin(false);\r\n  };\r\n\r\n  const changeAdmin = () => {\r\n    setUser(false);\r\n    setGuest(false);\r\n    setAdmin(true);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    service\r\n      .getAll()\r\n      .then((initialCases) => {\r\n        setCases(initialCases);\r\n      })\r\n      .catch((error) => {\r\n        // eslint-disable-next-line\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Navigationbar\r\n        user={user}\r\n        admin={admin}\r\n        guest={guest}\r\n        changeUser={changeUser}\r\n        changeAdmin={changeAdmin}\r\n        changeGuest={changeGuest}\r\n        cases={cases}\r\n      />\r\n      { guest\r\n        ? ' '\r\n        : <Sidebar /> }\r\n\r\n      <Switch>\r\n        <Route path=\"/howtoplay\">\r\n          <HowToPlay />\r\n        </Route>\r\n        <Route path=\"/profile\">\r\n          <Profile />\r\n        </Route>\r\n        <Route path=\"/cases/:id\">\r\n          <Case cases={cases} admin={admin} />\r\n        </Route>\r\n        { admin && (\r\n        <Route path=\"/editcase/:id\">\r\n          <HideCase cases={cases} />\r\n        </Route>\r\n        )}\r\n        { admin && (\r\n        <Route path=\"/newcase\">\r\n          <NewCase />\r\n        </Route>\r\n        )}\r\n        <Route path=\"/\">\r\n          { guest\r\n            ? <GuestFrontpage />\r\n            : <Frontpage admin={admin} cases={cases} /> }\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default (App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' // [::1] is the IPv6 localhost address.\n      || window.location.hostname === '[::1]'\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      || window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n      ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        // eslint-disable-next-line no-use-before-define\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        // eslint-disable-next-line no-use-before-define\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n\n              // Execute callback\n              // eslint-disable-next-line no-lonely-if\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n          || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n/config';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}