{"version":3,"sources":["utils/Helper.js","App/case/casesService.js","App/case/casesReducer.js","i18n/config.js","App/navigation/Navbar.js","App/navigation/Sidebar.js","utils/MessageBanner.js","App/case/components/NewCaseForm.js","App/differential/services/differentialsUnderCasesService.js","App/procedure/services/proceduresUnderCaseService.js","App/differential/services/differentialGroupsUnderCasesService.js","App/case/components/CopyCase.js","App/case/components/CaseCard.js","App/frontpage/Search.js","utils/AddUpdateModal.js","App/frontpage/Frontpage.js","App/instructions/HowToPlay.js","App/users/Profile.js","App/users/Users.js","App/procedure/components/NewProcedureForm.js","App/procedure/reducers/proceduresUnderCasesReducer.js","App/procedure/services/proceduresService.js","App/procedure/reducers/proceduresReducer.js","App/procedure/components/EditProcedure.js","App/procedure/components/ProcedureList.js","App/procedure/components/Procedures.js","App/differential/reducers/differentialsUnderCasesReducer.js","App/differential/components/UpdateDifferentialForm.js","App/differential/components/Differential.js","App/differential/components/DifferentialList.js","utils/CustomTypeaheadSelect.js","App/differential/components/AddDifferentialForm.js","App/differential/services/differentialsService.js","App/differential/reducers/differentialsReducer.js","App/differential/components/differentialGroup/DifferentialGroup.js","App/differential/components/differentialGroup/DifferentialGroupList.js","App/differential/components/differentialGroup/AddDifferentialGroupForm.js","App/differential/services/differentialGroupsService.js","App/differential/reducers/differentialGroupsUnderCasesReducer.js","App/differential/reducers/differentialGroupsReducer.js","App/differential/components/Differentials.js","App/case/components/HideCase.js","App/case/components/UpdateCaseTitle.js","App/anamnesis/UpdateAnamnesis.js","App/anamnesis/Anamnesis.js","App/subprocedure/services/subProceduresService.js","App/subprocedure/reducers/subProceduresReducer.js","App/subprocedure/services/optionGroupsService.js","App/subprocedure/services/optionGroupsUnderSubProceduresService.js","App/subprocedure/reducers/optionGroupsUnderSubProceduresReducer.js","App/subprocedure/reducers/optionGroupsReducer.js","App/subprocedure/services/optionsService.js","App/subprocedure/services/optionsUnderSubProceduresService.js","App/subprocedure/reducers/optionsUnderSubProceduresReducer.js","App/subprocedure/reducers/optionReducer.js","App/case/components/Case.js","App/subprocedure/components/option/optionGroup/AddOptionGroupForm.js","App/subprocedure/components/option/Option.js","App/subprocedure/components/option/OptionList.js","App/subprocedure/components/option/AddOptionForm.js","App/subprocedure/components/option/optionGroup/OptionGroup.js","App/subprocedure/components/option/optionGroup/OptionGroupList.js","App/subprocedure/components/interviewSubProcedure/InterviewSubProcedure.js","App/subprocedure/components/textSubProcedure/UpdateTextSubProcedureForm.js","App/subprocedure/components/textSubProcedure/TextSubProcedure.js","App/subprocedure/components/SubProcedure.js","App/subprocedure/components/SubProcedureList.js","App/subprocedure/components/textSubProcedure/AddTextSubProcedure.js","App/subprocedure/components/interviewSubProcedure/AddInterviewSubProcedure.js","App/procedure/components/Procedure.js","App/files/FileBank.js","App/files/filesService.js","App/files/PrivacyNotice.js","App/navigation/Routing.js","App/navigation/Footer.js","App.js","App/users/reducers/userReducer.js","store.js","serviceWorker.js","index.js"],"names":["token","getConfig","headers","Authorization","getLanguage","localStorage","getItem","validateName","t","useTranslation","Yup","min","max","required","validatePriority","typeError","positive","integer","baseUrl","axios","get","then","response","data","newObject","post","put","id","delete","casesReducer","state","action","type","filter","c","map","i18n","use","LanguageDetector","init","initReactI18next","fallbackLng","lng","resources","fi","translations","require","en","ns","defaultNS","languages","Navigationbar","admin","useSelector","changeLanguage","language","window","location","reload","Navbar","collapseOnSelect","expand","variant","sticky","Brand","as","Link","to","Toggle","Collapse","Nav","className","NavDropdown","title","Item","onClick","eventKey","NavLink","href","Sidebar","setError","message","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","setSuccess","success","MessageBanner","newestOnTop","rtl","pauseOnFocusLoss","newCaseForm","addCase","formik","useFormik","initialValues","anamnesis","hidden","validationSchema","onSubmit","values","Form","noValidate","handleSubmit","spellCheck","Group","controlId","Label","Control","getFieldProps","isInvalid","errors","Feedback","rows","Check","label","Button","diffGroupCaseId","caseId","copyCase","caseToBeCopied","createProcedures","oldCaseId","newCopyId","size","event","preventDefault","caseObject","caseService","copy","ducGroupService","res","newCaseId","result","duckling","forEach","element","differentialGroupId","ducService","result2","element2","did","plaa","differentialId","description","copyTheDamnThing","pucService","CaseCard","dispatch","useDispatch","Card","style","width","cursor","Body","Title","Text","Footer","ProgressBar","now","CopyCase","createDifferentials","copyId","i","length","procedureId","priority","confirm","a","casesService","Search","newSearch","searchCases","htmlFor","value","onChange","AddUpdateModal","forwardRef","props","ref","useState","show","setShow","toggleVisibility","useImperativeHandle","buttonLabel","Modal","onHide","backdrop","keyboard","Header","closeButton","titleLabel","children","Frontpage","setNewSearch","modalRef","useRef","cases","casesToShow","toLowerCase","includes","target","NewCaseForm","newCase","current","content","console","log","Row","xs","md","Col","HowToPlay","Profile","Users","newProcedureForm","addProcedure","name","getProceduresUnderCase","proceduresUnderCasesService","proceduresUnderCase","createProcedureUnderCase","newProcedureUnderCase","updateProcedurePriority","procedure","procedureCaseId","proceduresReducer","p","EditProcedure","editProcedureFunc","setNewPriority","setNewProcedureTitle","useHistory","editProcedure","procedureToBeUpdated","Number","proceduresService","updateProcedure","margin","e","defaultValue","DragNDropList","proceduresHook","handleDragStart","handleDragEnd","handleDragEnter","submitForm","handleProcedureRemove","index","onDragStart","onDragEnd","onDragEnter","ProcedureList","draggingItem","dragOverItem","setProceduresHook","procedureToEdit","setProcedureToEdit","initialProcedures","sort","b","useEffect","procedures","Promise","all","listCopy","draggingItemContent","splice","handleEditId","removeProcedureUnderCase","Procedures","useParams","NewProcedureForm","procedureObject","newProcedure","createDifferentialUnderCase","differentialsUnderCasesService","newDifferentialUnderCase","differentialsUnderCasesReducer","UpdateDifferentialForm","updateDifferential","shape","disabled","placeholder","Differential","d","Accordion","updatedDifferential","DifferentialList","diffGroupDiffs","differentialsUnderCase","CustomTypeaheadSelect","useField","meta","helper","multiple","selected","setValue","onInputChange","text","onBlur","setTouched","allowNew","labelKey","options","emptyLabel","touched","AddDifferentialForm","addDifferential","differentials","differential","r","differentialsReducer","DifferentialGroup","differentialObject","differentialsService","newDifferential","createDifferential","DifferentialGroupList","caseDifferentialGroups","differentialGroupsUnderCase","AddDifferentialGroupForm","addDifferentialGroup","differentialGroups","group","createDifferentialGroupUnderCase","differentialGroupsUnderCasesService","newDifferentialGroupUnderCase","differentialGroupsUnderCasesReducer","differentialGroupsReducer","Differentials","differentialGroupObject","differentialGroup","differentialGroupsService","newDifferentialGroup","HideCase","hideCase","newHidden","setNewHidden","UpdateCaseTitle","updateCaseTitle","role","UpdateAnamnesis","updateAnamnesis","Anamnesis","find","handleCaseUpdate","updatedCase","subProceduresReducer","createOptionGroupUnderSubProcedure","service","newOptionGroupUnderSubProcedure","optionGroupsUnderSubProceduresReducer","optionGroupsReducer","createOptionUnderSubProcedure","newOption","optionsUnderSubProceduresReducer","optionsReducer","Case","subProceduresService","subprocedures","optionGroupsService","returnedOptionGroups","getOptionGroupsUnderSubProcedures","returnedOptions","getOptionsUnderSubProcedures","returnedDifferentials","returnedDifferentialsUnderCase","getDifferentialsUnderCase","returnedDifferentialGroups","returnedDifferentialGroupsUnderCase","getDifferentialGroupsUnderCase","ButtonGroup","marginBottom","path","NewOptionGroupForm","addOptionGroup","optionGroups","Option","optionObject","isRequired","OptionList","optionGroupSubProcedureId","optionsUnderSubProcedure","o","AddOptionForm","addOption","option","defaultChecked","OptionGroup","optionId","createOption","OptionGroupList","subProcedureId","subProcedureOptionGroups","optionGroupsUnderSubProcedure","InterviewSubProcedure","AddOptionGroupForm","optionGroup","newOptionGroup","optionGroupId","createOptionGroup","UpdateTextSubProcedureForm","updateTextSubProcedure","TextSubProcedure","updatedObject","subProcedureObject","SubProcedure","SubProcedureList","listedProcedures","subProcedures","AddTextSubProcedure","addSubProcedure","AddInterviewSubProcedure","Procedure","showWhenVisible","display","handleSubProcedureAdd","newSubProcedure","addedSubprocedure","FileBank","config","responseType","PrivacyNotice","pdf","setPdf","numPages","setNumPages","pageNumber","setPageNumber","filesService","fetchedPdf","changePage","offset","prevPageNumber","file","onLoadSuccess","Routing","color","App","React","user","newToken","userReducer","persistConfig","key","storage","reducer","combineReducers","proceduresUnderCasesReducer","persistedReducer","persistReducer","Boolean","hostname","match","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46396c3b.chunk.js","sourcesContent":["import * as Yup from 'yup';\nimport { useTranslation } from 'react-i18next';\n\nlet token = null;\n\nexport const setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nexport const getConfig = () => ({ headers: { Authorization: token } });\n\nexport const getLanguage = () => (localStorage.getItem('i18nextLng') || 'fi');\n\nexport const validateName = () => {\n  const { t } = useTranslation();\n\n  return (\n    Yup.string()\n      .min(2, t('warningShort'))\n      .max(999, t('warningLong'))\n      .required(t('warningRequired'))\n  );\n};\n\nexport const validatePriority = () => {\n  const { t } = useTranslation();\n\n  return (\n    Yup.number()\n      .typeError(t('warningPositiveInteger'))\n      .required(t('warningRequired'))\n      .positive(t('warningPositiveInteger'))\n      .integer(t('warningPositiveInteger'))\n  );\n};\n","import axios from 'axios';\nimport { getConfig, getLanguage } from '../../utils/Helper';\n\nconst baseUrl = '/api/cases';\n\nconst getAll = () => {\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst update = (newObject) => axios.put(`${baseUrl}/${newObject.id}/${getLanguage()}`, newObject, getConfig());\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`, getConfig());\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove,\n};\n","import casesService from './casesService';\nimport { setToken } from '../../utils/Helper';\n\nconst casesReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INITIALIZE_CASES':\n      return action.data;\n    case 'NEW_CASE':\n      return [...state, action.data];\n    case 'REMOVE_CASE':\n      return state.filter((c) => c.id !== action.data);\n    case 'UPDATE_CASE':\n      return state.map((c) => (c.id !== action.data.id\n        ? c\n        : action.data));\n    default:\n      return state;\n  }\n};\n\nexport const initializeCasesAndUser = () => async (dispatch) => {\n  const { data, user } = await casesService.getAll();\n  dispatch({\n    type: 'INITIALIZE_CASES',\n    data,\n  });\n\n  setToken(user.token);\n  dispatch({\n    type: 'INITIALIZE_USER',\n    data: user.admin,\n  });\n};\n\nexport const createCase = (content) => async (dispatch) => {\n  const newCase = await casesService.create(content);\n  dispatch({\n    type: 'NEW_CASE',\n    data: newCase,\n  });\n};\n\nexport const removeCase = (id) => async (dispatch) => {\n  await casesService.remove(id);\n  dispatch({\n    type: 'REMOVE_CASE',\n    data: id,\n  });\n};\n\nexport const updateCase = (content) => async (dispatch) => {\n  await casesService.update(content);\n  dispatch({\n    type: 'UPDATE_CASE',\n    data: content,\n  });\n};\n\nexport default casesReducer;\n","/* eslint-disable linebreak-style */\n/* istanbul ignore file */\n/* eslint-disable linebreak-style */\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n// eslint-disable-next-line import/no-unresolved\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n.use(LanguageDetector).init();\n\ni18n.use(initReactI18next).init({\n  fallbackLng: 'fi',\n\n  // eslint-disable-next-line no-undef\n  lng: localStorage.getItem('i18nextLng') || 'fi',\n  resources: {\n    fi: {\n      // eslint-disable-next-line global-require\n      translations: require('./locales/fi/translations.json'),\n    },\n    en: {\n      // eslint-disable-next-line global-require\n      translations: require('./locales/en/translations.json'),\n    },\n  },\n  ns: ['translations'],\n  defaultNS: 'translations',\n});\n\ni18n.languages = ['fi', 'en'];\n\nexport default i18n;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Navbar,\n  Nav,\n  NavLink,\n  NavDropdown,\n} from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\n\n// Import translations\nimport { useTranslation } from 'react-i18next';\nimport i18n from '../../i18n/config';\n\nconst Navigationbar = () => {\n  const admin = useSelector((state) => state.admin);\n  const { t } = useTranslation();\n\n  /* istanbul ignore next */\n  const changeLanguage = (language) => {\n    i18n.changeLanguage(language);\n    window.location.reload(false);\n  };\n\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\" sticky=\"top\">\n      <Navbar.Brand as={Link} to=\"/\">{t('nameOfTheGame')}</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <NavDropdown title={t('selectLanguage')} id=\"selectLanguage\" className=\"navItems\">\n            <NavDropdown.Item onClick={() => changeLanguage('fi')} eventKey=\"fi\">{t('languageFinnish')}</NavDropdown.Item>\n            <NavDropdown.Item onClick={() => changeLanguage('en')} eventKey=\"en\">{t('languageEnglish')}</NavDropdown.Item>\n          </NavDropdown>\n          { admin && (\n          <Nav.Item>\n            <NavLink as={Link} to=\"/users\" className=\"navItems\">{t('userInformation')}</NavLink>\n          </Nav.Item>\n          )}\n          { admin && (\n          <Nav.Item>\n            <NavLink as={Link} to=\"/files\" className=\"navItems\">{t('fileBank')}</NavLink>\n          </Nav.Item>\n          )}\n          <Nav.Item>\n            <NavLink as={Link} to=\"/howtoplay\" className=\"navItems\">{t('howToPlay')}</NavLink>\n          </Nav.Item>\n          <Nav.Item>\n            <NavLink as={Link} to=\"/profile\" className=\"navItems\">{t('userProfile')}</NavLink>\n          </Nav.Item>\n          <Nav.Item>\n            <NavLink href=\"https://taudinpurkauspeli-taudinpurkauspeli2021.apps.ocp-prod-0.k8s.it.helsinki.fi/Shibboleth.sso/Logout\" className=\"navItems\">{t('logOut')}</NavLink>\n          </Nav.Item>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default Navigationbar;\n","import React from 'react';\n\nconst Sidebar = () => (\n  <div id=\"sidebar\" />\n);\n\nexport default Sidebar;\n","/* istanbul ignore file */\n/* eslint-disable linebreak-style */\n/* eslint-disable no-undef */\nimport React from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst MessageBanner = () => (\n  <ToastContainer\n    position=\"top-center\"\n    autoClose={3000}\n    hideProgressBar\n    newestOnTop={false}\n    closeOnClick\n    rtl={false}\n    pauseOnFocusLoss={false}\n    draggable={false}\n    pauseOnHover\n  />\n);\n\nexport const setError = (message) => {\n  toast.error(message, {\n    position: 'top-center',\n    autoClose: 3000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: false,\n    draggable: false,\n    progress: undefined,\n  });\n};\n\nexport const setSuccess = (message) => {\n  toast.success(message, {\n    position: 'top-center',\n    autoClose: 3000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: false,\n    draggable: false,\n    progress: undefined,\n  });\n};\n\nexport default MessageBanner;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Button } from 'react-bootstrap';\nimport { validateName } from '../../../utils/Helper';\n\nconst newCaseForm = ({ addCase }) => {\n  const { t } = useTranslation();\n\n  const formik = useFormik({\n    initialValues: {\n      title: '',\n      anamnesis: '',\n      hidden: false,\n    },\n    validationSchema: Yup.object({\n      title: validateName(),\n      anamnesis: Yup.string(),\n      hidden: Yup.bool(),\n    }),\n    onSubmit: (values) => {\n      addCase({\n        title: values.title,\n        anamnesis: values.anamnesis,\n        hidden: values.hidden,\n      });\n    },\n  });\n\n  return (\n    <Form noValidate onSubmit={formik.handleSubmit} spellCheck=\"false\">\n      <Form.Group controlId=\"title\">\n        <Form.Label>{t('caseTitle')}</Form.Label>\n        <Form.Control\n          type=\"text\"\n          {...formik.getFieldProps('title')}\n          isInvalid={!!formik.errors.title}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          {formik.errors.title}\n        </Form.Control.Feedback>\n      </Form.Group>\n      <Form.Group controlId=\"anamnesis\">\n        <Form.Label>{t('caseAnamnesis')}</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          rows={3}\n          {...formik.getFieldProps('anamnesis')}\n        />\n      </Form.Group>\n      <Form.Group controlId=\"hidden\">\n        <Form.Check\n          label={t('hideCase')}\n          {...formik.getFieldProps('hidden')}\n        />\n      </Form.Group>\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewCase')}</Button>\n    </Form>\n  );\n};\n\nexport default newCaseForm;\n","import axios from 'axios';\nimport { getConfig, getLanguage } from '../../../utils/Helper';\n\nconst baseUrl = '/api/differentialsUnderCases';\n\nconst getAll = (diffGroupCaseId) => {\n  const request = axios.get(`${baseUrl}/${diffGroupCaseId}/${getLanguage()}`, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}/${getLanguage()}`, newObject, getConfig());\n\nexport default {\n  getAll,\n  create,\n  update,\n};\n","import axios from 'axios';\nimport { getConfig, getLanguage } from '../../../utils/Helper';\n\nconst baseUrl = '/api/proceduresUnderCases';\n\nconst getAll = (caseId) => {\n  const request = axios.get(`${baseUrl}/${caseId}/${getLanguage()}`, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject, getConfig());\n\nconst remove = (id) => axios.delete(`${baseUrl}/${id}`, getConfig());\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove,\n};\n","import axios from 'axios';\nimport { getConfig, getLanguage } from '../../../utils/Helper';\n\nconst baseUrl = '/api/differentialGroupsUnderCases';\n\nconst getAll = (caseId) => {\n  const request = axios.get(`${baseUrl}/${caseId}/${getLanguage()}`, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n};\n","import { Button } from 'react-bootstrap';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport caseService from '../casesService';\nimport ducService from '../../differential/services/differentialsUnderCasesService';\nimport pucService from '../../procedure/services/proceduresUnderCaseService';\n\n// Caseen liitetyt diffiryhmät\nimport ducGroupService from '../../differential/services/differentialGroupsUnderCasesService';\n\nconst copyCase = ({\n  caseToBeCopied, createProcedures,\n}) => {\n  const { t } = useTranslation();\n  const oldCaseId = caseToBeCopied.id;\n  let newCopyId = 0;\n\n  /* istanbul ignore next */\n  const copyTheDamnThing = (newCaseId, result) => {\n    let duckling = {};\n    result.forEach((element) => {\n      duckling = {\n        caseId: newCaseId,\n        differentialGroupId: element.id,\n      };\n      ducGroupService.create(duckling).then((res) => {\n        ducService.getAll(element.diffGroupCaseId)\n          .then((result2) => {\n            result2.forEach((element2) => {\n              const did = element2.id;\n              const plaa = {\n                diffGroupCaseId: res.id,\n                differentialId: did,\n                description: element2.description,\n              };\n              ducService.create(plaa);\n            });\n          });\n      });\n    });\n  };\n\n  /* istanbul ignore next */\n  const handleCopy = (event) => {\n    event.preventDefault();\n    const caseObject = ({\n      title: caseToBeCopied.title,\n      anamnesis: caseToBeCopied.anamnesis,\n      hidden: caseToBeCopied.hidden,\n    });\n    caseService.create(caseObject)\n      .then((copy) => {\n        newCopyId = copy.id;\n      })\n      .then(() => {\n        ducGroupService.getAll(oldCaseId)\n          .then((res) => {\n            copyTheDamnThing(newCopyId, res);\n          });\n      })\n      .then(() => {\n        pucService.getAll(oldCaseId)\n          .then((res) => {\n            createProcedures(newCopyId, res);\n          });\n      });\n  };\n\n  return (\n    <Button variant=\"warning\" size=\"sm\" onClick={handleCopy}>{t('copy')}</Button>\n  );\n};\n\nexport default copyCase;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Card,\n  Button,\n  ProgressBar,\n} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport CopyCase from './CopyCase';\nimport { setError, setSuccess } from '../../../utils/MessageBanner';\nimport ducService from '../../differential/services/differentialsUnderCasesService';\nimport pucService from '../../procedure/services/proceduresUnderCaseService';\nimport { removeCase } from '../casesReducer';\n\nconst CaseCard = ({ c, admin }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  /* istanbul ignore next */\n  const createDifferentials = (copyId, result) => {\n    for (let i = 0; i < result.length; i += 1) {\n      const { id, description } = result[i];\n      const object = {\n        caseId: copyId,\n        differentialId: id,\n        description,\n      };\n      ducService.create(object);\n    }\n  };\n\n  /* istanbul ignore next */\n  const createProcedures = (copyId, result) => {\n    for (let i = 0; i < result.length; i += 1) {\n      const { procedureId, priority } = result[i];\n      const object = {\n        caseId: copyId,\n        procedureId,\n        priority,\n      };\n      pucService.create(object);\n    }\n  };\n\n  /* istanbull ignore next */\n  const handleCaseRemove = () => {\n    // eslint-disable-next-line no-alert\n    const confirmBox = window.confirm(t('deleteCaseConfirmation'));\n    if (confirmBox === true) {\n      try {\n        dispatch(removeCase(c.id));\n        setSuccess(t('deleteCaseSuccess'));\n      } catch (error) {\n        setError(t('deleteCaseError'));\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Card as={Link} to={`/cases/${c.id}`} style={{ width: '20rem', cursor: 'pointer' }} className=\"caseCard\">\n        <Card.Body>\n          <Card.Title>{c.title}</Card.Title>\n          <Card.Text>{c.anamnesis}</Card.Text>\n        </Card.Body>\n        <Card.Footer>\n          <ProgressBar className=\"progsbar\" variant=\"success\" now={25} label={`${25}%`} />\n        </Card.Footer>\n      </Card>\n\n      { admin && (\n        <div className=\"cardButtons\">\n          <Button className=\"editButton\" as={Link} to={`/cases/${c.id}`} size=\"sm\">{t('buttonEdit')}</Button>\n          <CopyCase\n            caseToBeCopied={c}\n            createDifferentials={createDifferentials}\n            createProcedures={createProcedures}\n          />\n          <Button className=\"removeButton\" size=\"sm\" variant=\"danger\" onClick={handleCaseRemove}>{t('buttonRemove')}</Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CaseCard;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst Search = ({ newSearch, searchCases }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div>\n      <label htmlFor=\"search\">\n        {t('searchByTitle')}\n        &nbsp;\n        <input\n          id=\"search\"\n          value={newSearch}\n          onChange={searchCases}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Search;\n","/* eslint-disable linebreak-style */\nimport React, { useState, useImperativeHandle, forwardRef } from 'react';\nimport {\n  Button, Modal,\n} from 'react-bootstrap';\n\nconst AddUpdateModal = forwardRef((props, ref) => {\n  const [show, setShow] = useState(false);\n\n  const toggleVisibility = () => setShow(!show);\n\n  useImperativeHandle(ref, () => ({\n    toggleVisibility,\n  }));\n\n  return (\n    <div>\n      <Button className={props.className ? props.className : 'addButton text'} onClick={toggleVisibility} size=\"sm\">\n        {props.buttonLabel}\n      </Button>\n      <Modal\n        show={show}\n        onHide={toggleVisibility}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{props.titleLabel}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {props.children}\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n});\n\nexport default AddUpdateModal;\n","import React, { useState, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Col,\n  Row,\n} from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setSuccess, setError } from '../../utils/MessageBanner';\nimport { createCase } from '../case/casesReducer';\n\nimport NewCaseForm from '../case/components/NewCaseForm';\nimport CaseCard from '../case/components/CaseCard';\nimport Search from './Search';\nimport AddUpdateModal from '../../utils/AddUpdateModal';\n\nconst Frontpage = ({ admin }) => {\n  const { t } = useTranslation();\n  const [newSearch, setNewSearch] = useState('');\n  const dispatch = useDispatch();\n  const modalRef = useRef();\n  const cases = useSelector((state) => state.cases);\n\n  /* istanbul ignore next */\n  const handleCaseAdd = (newCase) => {\n    modalRef.current.toggleVisibility();\n    try {\n      dispatch(createCase(newCase));\n      setSuccess(t('caseAddSuccess'));\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n      setError(t('caseAddError'));\n    }\n  };\n\n  const searchCases = (event) => {\n    setNewSearch(event.target.value);\n  };\n\n  const casesToShow = !newSearch\n    ? cases : cases.filter((c) => c.title.toLowerCase().includes(newSearch.toLowerCase()));\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('frontpageTitle')}</h2>\n      <p>{t('frontpageText')}</p>\n      <Search newSearch={newSearch} searchCases={searchCases} />\n      <br />\n      {admin && (\n        <div>\n          <AddUpdateModal buttonLabel={t('buttonNewCase')} titleLabel={t('addCase')} ref={modalRef}>\n            <NewCaseForm addCase={handleCaseAdd} />\n          </AddUpdateModal>\n          <br />\n          <h3>{t('caseHidden')}</h3>\n          <hr />\n        </div>\n      )}\n      <Row xs=\"auto\" md=\"auto\" className=\"g-4\">\n        {admin && (\n          casesToShow.filter((c) => c.hidden).map((c) => (\n            <Col key={c.id}>\n              <CaseCard c={c} admin={admin} />\n            </Col>\n          ))\n        )}\n      </Row>\n      <br />\n      <h3>{t('casePlayable')}</h3>\n      <hr />\n      <Row xs=\"auto\" md=\"auto\" className=\"g-4\">\n        {casesToShow.filter((c) => !c.hidden).map((c) => (\n          <Col key={c.id}>\n            <CaseCard c={c} admin={admin} />\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\nexport default Frontpage;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst HowToPlay = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('howToPlay')}</h2>\n      <p>{t('gameInstructions')}</p>\n    </div>\n  );\n};\n\nexport default HowToPlay;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst Profile = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('userProfile')}</h2>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst Users = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('userInformation')}</h2>\n    </div>\n  );\n};\n\nexport default Users;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Button } from 'react-bootstrap';\nimport { validateName } from '../../../utils/Helper';\n\nconst newProcedureForm = ({ addProcedure }) => {\n  const { t } = useTranslation();\n\n  const formik = useFormik({\n    initialValues: {\n      title: '',\n    },\n    validationSchema: Yup.object({\n      title: validateName(),\n    }),\n    onSubmit: (values) => {\n      addProcedure({\n        name: values.title,\n      });\n    },\n  });\n\n  return (\n    <Form noValidate onSubmit={formik.handleSubmit}>\n      <Form.Group controlId=\"title\">\n        <Form.Label>{t('procedureTitle')}</Form.Label>\n        <Form.Control\n          type=\"text\"\n          {...formik.getFieldProps('title')}\n          isInvalid={!!formik.errors.title}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          {formik.errors.title}\n        </Form.Control.Feedback>\n      </Form.Group>\n      <Button type=\"submit\" className=\"submitButton\">{t('buttonSubmitNewProcedure')}</Button>\n    </Form>\n  );\n};\n\nexport default newProcedureForm;\n","import proceduresUnderCasesService from '../services/proceduresUnderCaseService';\n\nconst proceduresReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'GET_PROCEDURES_UNDER_CASE':\n      return action.data;\n    case 'NEW_PROCEDURE_UNDER_CASE':\n      return [...state, action.data];\n    case 'UPDATE_PROCEDURE':\n      return state.map((p) => (p.id !== action.data.id\n        ? p\n        : action.data));\n    case 'REMOVE_PROCEDURE_UNDER_CASE':\n      return state.filter((p) => p.id !== action.data);\n    default:\n      return state;\n  }\n};\n\nexport const getProceduresUnderCase = (caseId) => async (dispatch) => {\n  const proceduresUnderCase = await proceduresUnderCasesService.getAll(caseId);\n  dispatch({\n    type: 'GET_PROCEDURES_UNDER_CASE',\n    data: proceduresUnderCase || null,\n  });\n};\n\nexport const createProcedureUnderCase = (content) => async (dispatch) => {\n  const newProcedureUnderCase = await proceduresUnderCasesService.create(content);\n  dispatch({\n    type: 'NEW_PROCEDURE_UNDER_CASE',\n    data: newProcedureUnderCase,\n  });\n};\n\nexport const updateProcedurePriority = (procedure) => async (dispatch) => {\n  await proceduresUnderCasesService.update(procedure.procedureCaseId, procedure);\n  dispatch({\n    type: 'UPDATE_PROCEDURE',\n    data: procedure,\n  });\n};\n\nexport const updateProcedurePriorities = (caseId, procedures) => async (dispatch) => {\n  await Promise.all(procedures.map((p, index) => proceduresUnderCasesService\n    .update(\n      p.procedureCaseId,\n      { priority: index + 1 },\n    )));\n  dispatch(getProceduresUnderCase(caseId));\n};\n\nexport const removeProcedureUnderCase = (procedureId) => async (dispatch) => {\n  await proceduresUnderCasesService.remove(procedureId);\n  dispatch({\n    type: 'REMOVE_PROCEDURE_UNDER_CASE',\n    data: procedureId,\n  });\n};\n\nexport default proceduresReducer;\n","import axios from 'axios';\nimport { getConfig, getLanguage } from '../../../utils/Helper';\n\nconst baseUrl = '/api/procedures';\n\nconst getAll = () => {\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}/${getLanguage()}`, newObject, getConfig());\n\nexport default {\n  create,\n  getAll,\n  update,\n};\n","import proceduresService from '../services/proceduresService';\nimport { createProcedureUnderCase, updateProcedurePriority } from './proceduresUnderCasesReducer';\n\nconst proceduresReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'GET_PROCEDURES':\n      return action.data;\n    case 'NEW_PROCEDURE':\n      return [...state, action.data];\n    case 'UPDATE_PROCEDURE':\n      return state.map((p) => (p.id !== action.data.id\n        ? p\n        : {\n          id: p.id,\n          name: p.name,\n        }));\n    default:\n      return state;\n  }\n};\n\nexport const getProcedures = () => async (dispatch) => {\n  const procedures = await proceduresService.getAll();\n  dispatch({\n    type: 'GET_PROCEDURES',\n    data: procedures || null,\n  });\n};\n\nexport const createProcedure = (caseId, procedure) => async (dispatch) => {\n  const newProcedure = await proceduresService.create(procedure);\n\n  dispatch({\n    type: 'NEW_PROCEDURE',\n    data: newProcedure,\n  });\n\n  dispatch(createProcedureUnderCase({\n    caseId,\n    procedureId: newProcedure.id,\n    priority: 1,\n  }));\n};\n\nexport const updateProcedure = (procedure) => async (dispatch) => {\n  await proceduresService.update(procedure.id, procedure);\n  dispatch(updateProcedurePriority(procedure));\n};\n\nexport default proceduresReducer;\n","/* istanbul ignore file */\n/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory, Link } from 'react-router-dom';\nimport {\n  Button,\n} from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport { updateProcedure } from '../reducers/proceduresReducer';\n\nconst EditProcedure = ({ procedure, caseId, editProcedureFunc }) => {\n  const [newPriority, setNewPriority] = useState(procedure.priority);\n  const [newProcedureTitle, setNewProcedureTitle] = useState(procedure.name);\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const baseUrl = `/cases/${caseId}`;\n\n  const handlePriorityChange = (event) => {\n    setNewPriority(event.target.value);\n  };\n\n  const handleTitleChange = (event) => {\n    setNewProcedureTitle(event.target.value);\n  };\n\n  const editProcedure = (event) => {\n    event.preventDefault();\n    setNewProcedureTitle(event.target[0].value);\n    setNewPriority(event.target[1].value);\n    // eslint-disable-next-line no-param-reassign\n\n    const procedureToBeUpdated = {\n      ...procedure,\n      priority: Number(event.target[1].value),\n      name: event.target[0].value,\n    };\n\n    if (editProcedureFunc != null) {\n      editProcedureFunc(procedureToBeUpdated);\n    }\n    dispatch(updateProcedure(procedureToBeUpdated));\n  };\n\n  return (\n    <div id=\"editProcedureForm\" key={procedure.priority}>\n      <h2>{t('editProcedure')}</h2>\n      <Button className=\"procedureButton goTo\" as={Link} to={`${baseUrl}/procedure/${procedure.id}`} style={{ margin: 15 }}>{t('goToProcedure')}</Button>\n      <form onSubmit={(e) => editProcedure(e)}>\n        <p>\n          <label htmlFor=\"title\">\n            {t('procedureTitle')}\n          </label>\n          <br />\n          <input\n            id=\"title\"\n            type=\"text\"\n            defaultValue={procedure.name}\n            onChange={handleTitleChange}\n            className=\"formInput\"\n          />\n        </p>\n        <p>\n          <label htmlFor=\"priority\">\n            {t('procedurePriority')}\n          </label>\n          <br />\n          <input\n            id=\"priority\"\n            type=\"integer\"\n            onChange={handlePriorityChange}\n            defaultValue={procedure.priority}\n            className=\"formInput\"\n          />\n        </p>\n        <p>\n          <Button type=\"submit\" id=\"submit\" className=\"submitButton\">{t('buttonSave')}</Button>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default EditProcedure;\n","/* eslint-disable react/no-array-index-key */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { updateProcedurePriorities, removeProcedureUnderCase } from '../reducers/proceduresUnderCasesReducer';\nimport EditProcedure from './EditProcedure';\nimport { setSuccess, setError } from '../../../utils/MessageBanner';\n\nconst DragNDropList = ({\n  proceduresHook,\n  handleDragStart,\n  handleDragEnd,\n  handleDragEnter,\n  t,\n  submitForm,\n  handleProcedureRemove,\n}) => (\n  proceduresHook\n    && proceduresHook.map((p, index) => (\n      <h4\n        onDragStart={(e) => handleDragStart(e, index)}\n        onDragEnd={() => handleDragEnd()}\n        onDragEnter={(e) => handleDragEnter(e, index)}\n        key={index}\n        draggable\n      >\n        <div className=\"rows\">\n          <Button className=\"procedureButton\">\n            {p.priority}\n            &nbsp;\n            {p.name}\n          </Button>\n          <form onSubmit={(e) => submitForm(p, e)} className=\"handleEdits\">\n            <Button type=\"submit\" className=\"editButton\" key={index} size=\"sm\">{t('buttonEdit') }</Button>\n          </form>\n          <Button className=\"removeButton\" size=\"sm\" variant=\"danger\" onClick={() => handleProcedureRemove(p.id)}>{t('buttonRemove')}</Button>\n        </div>\n      </h4>\n    ))\n);\n\nconst ProcedureList = ({ id }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const draggingItem = useRef();\n  const dragOverItem = useRef();\n  const [proceduresHook, setProceduresHook] = useState([]);\n  const [procedureToEdit, setProcedureToEdit] = useState(null);\n\n  const initialProcedures = useSelector((state) => {\n    const { proceduresUnderCase } = state;\n    return proceduresUnderCase\n      .sort((a, b) => a.priority - b.priority);\n  });\n\n  useEffect(() => {\n    setProceduresHook(initialProcedures);\n  }, [initialProcedures]);\n\n  /* istanbul ignore next */\n  const handleEditId = (p) => {\n    setProcedureToEdit(p);\n  };\n\n  /* istanbul ignore next */\n  const submitForm = (p, e) => {\n    e.preventDefault();\n    handleEditId(p);\n  };\n\n  /* istanbul ignore next */\n  const handleProcedureRemove = (procedureId) => {\n    // eslint-disable-next-line no-alert\n    const confirmBox = window.confirm(t('deleteProcedureUnderCaseConfirmation'));\n    if (confirmBox === true) {\n      try {\n        dispatch(removeProcedureUnderCase(procedureId));\n        setSuccess(t('deleteProcedureUnderCaseSuccess'));\n      } catch (error) {\n        setError(t('deleteProcedureUnderCaseError'));\n      }\n    }\n  };\n\n  /* istanbul ignore next */\n  const handleDragStart = (e, position) => {\n    draggingItem.current = position;\n  };\n\n  /* istanbul ignore next */\n  const handleDragEnter = (e, position) => {\n    dragOverItem.current = position;\n    const listCopy = [...proceduresHook];\n    const draggingItemContent = listCopy[draggingItem.current];\n    listCopy.splice(draggingItem.current, 1);\n    listCopy.splice(dragOverItem.current, 0, draggingItemContent);\n    draggingItem.current = dragOverItem.current;\n    dragOverItem.current = null;\n    setProceduresHook(listCopy);\n  };\n\n  /* istanbul ignore next */\n  const handleDragEnd = () => {\n    dispatch(updateProcedurePriorities(id, proceduresHook));\n  };\n\n  return (\n    <>\n      <DragNDropList\n        proceduresHook={proceduresHook}\n        handleDragStart={handleDragStart}\n        handleDragEnd={handleDragEnd}\n        handleDragEnter={handleDragEnter}\n        t={t}\n        submitForm={submitForm}\n        handleProcedureRemove={handleProcedureRemove}\n      />\n      { procedureToEdit ? (\n        <EditProcedure procedure={procedureToEdit} caseId={id} />\n      ) : (\n        <p> </p>\n      )}\n    </>\n  );\n};\n\nexport default ProcedureList;\n","import React, { useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport NewProcedureForm from './NewProcedureForm';\nimport ProcedureList from './ProcedureList';\nimport AddUpdateModal from '../../../utils/AddUpdateModal';\nimport { createProcedure } from '../reducers/proceduresReducer';\nimport { setSuccess, setError } from '../../../utils/MessageBanner';\n\nconst Procedures = ({ admin }) => {\n  const { t } = useTranslation();\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const modalRef = useRef();\n\n  /* istanbul ignore next */\n  const handleProcedureAdd = (procedureObject) => {\n    modalRef.current.toggleVisibility();\n    try {\n      dispatch(createProcedure(Number(id), procedureObject));\n      setSuccess(t('procedureAddSuccess'));\n    } catch (error) {\n      setError(t('procedureAddError'));\n    }\n  };\n\n  return (\n    <div>\n      <h2>{t('procedures')}</h2>\n      { admin && (\n        <AddUpdateModal buttonLabel={t('buttonNewProcedure')} titleLabel={t('addProcedure')} ref={modalRef}>\n          <NewProcedureForm addProcedure={handleProcedureAdd} />\n        </AddUpdateModal>\n      )}\n      <ProcedureList id={id} />\n    </div>\n  );\n};\n\nexport default Procedures;\n","import differentialsUnderCasesService from '../services/differentialsUnderCasesService';\n\nconst differentialsUnderCasesReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'GET_DIFFERENTIALSUNDERCASE':\n      return action.data;\n    case 'NEW_DIFFERENTIALUNDERCASE':\n      return [...state, action.data];\n    case 'UPDATE_DIFFERENTIALUNDERCASE':\n      return state.map((p) => (p.id !== action.data.id\n        ? p\n        : action.data\n      ));\n    default:\n      return state;\n  }\n};\n\nexport const getDifferentialsUnderCase = (id) => async (dispatch) => {\n  const returnedDifferentialsUnderCase = await differentialsUnderCasesService.getAll(id);\n  dispatch({\n    type: 'GET_DIFFERENTIALSUNDERCASE',\n    data: returnedDifferentialsUnderCase || null,\n  });\n};\n\nexport const createDifferentialUnderCase = (content) => async (dispatch) => {\n  const newDifferentialUnderCase = await differentialsUnderCasesService.create(content);\n  dispatch({\n    type: 'NEW_DIFFERENTIALUNDERCASE',\n    data: newDifferentialUnderCase,\n  });\n};\n\nexport const updateDifferentialUnderCase = (content) => async (dispatch) => {\n  await differentialsUnderCasesService.update(content.id, content);\n  dispatch({\n    type: 'UPDATE_DIFFERENTIALUNDERCASE',\n    data: content,\n  });\n};\n\nexport default differentialsUnderCasesReducer;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Form, Button,\n} from 'react-bootstrap';\n\nconst UpdateDifferentialForm = ({\n  name,\n  description,\n  updateDifferential,\n}) => {\n  const { t } = useTranslation();\n\n  const formik = useFormik({\n    initialValues: {\n      name,\n      description,\n    },\n    validationSchema: Yup.object().shape({\n      description: Yup.string(),\n    }),\n    onSubmit: (values) => {\n      updateDifferential({\n        description: values.description,\n      });\n    },\n  });\n\n  return (\n    <Form noValidate onSubmit={formik.handleSubmit}>\n      <Form.Group controlId=\"name\">\n        <Form.Label>{t('title')}</Form.Label>\n        <Form.Control\n          disabled\n          type=\"text\"\n          placeholder={t('write')}\n          {...formik.getFieldProps('name')}\n        />\n        <Form.Text className=\"text-muted\">\n          {t('differentialNameInstruction')}\n        </Form.Text>\n      </Form.Group>\n      <Form.Group controlId=\"description\">\n        <Form.Label>{t('description')}</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          rows={10}\n          {...formik.getFieldProps('description')}\n        />\n      </Form.Group>\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonUpdate')}</Button>\n    </Form>\n  );\n};\n\nexport default UpdateDifferentialForm;\n","import React, { useRef } from 'react';\nimport { Accordion, Card } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport AddUpdateModal from '../../../utils/AddUpdateModal';\nimport { setError, setSuccess } from '../../../utils/MessageBanner';\nimport { updateDifferentialUnderCase } from '../reducers/differentialsUnderCasesReducer';\nimport UpdateDifferentialForm from './UpdateDifferentialForm';\n\nconst Differential = ({\n  d, admin,\n}) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const modalRef = useRef();\n\n  const handleDifferentialUpdate = (updatedDifferential) => {\n    modalRef.current.toggleVisibility();\n    try {\n      dispatch(updateDifferentialUnderCase({\n        ...d,\n        description: updatedDifferential.description,\n      }));\n      setSuccess(t('differentialUpdateSuccess'));\n    } catch {\n      setError('differentialUpdateError');\n    }\n  };\n\n  return (\n    <Card>\n      <Accordion.Toggle as={Card.Header} eventKey={d.id} id=\"differentialName\">\n        <div className=\"d-flex justify-content-between align-items-center\">\n          {d.name}\n          {admin && (\n          <div className=\"cardButtons\">\n            <AddUpdateModal className=\"editButton\" buttonLabel={t('buttonEdit')} titleLabel={t('updateSubProcedure')} ref={modalRef}>\n              <UpdateDifferentialForm\n                name={d.name}\n                description={d.description}\n                updateDifferential={handleDifferentialUpdate}\n              />\n            </AddUpdateModal>\n          </div>\n          )}\n        </div>\n      </Accordion.Toggle>\n      <Accordion.Collapse eventKey={d.id}>\n        <Card.Body>{d.description}</Card.Body>\n      </Accordion.Collapse>\n    </Card>\n  );\n};\n\nexport default Differential;\n","import React from 'react';\nimport { Accordion } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport Differential from './Differential';\n\nconst DifferentialList = ({ diffGroupCaseId, admin }) => {\n  const caseDifferentials = useSelector((state) => state.differentialsUnderCase);\n  const diffGroupDiffs = caseDifferentials.filter((d) => d.diffGroupCaseId === diffGroupCaseId);\n\n  return (\n    <Accordion>\n      {diffGroupDiffs.map((d) => (\n        <Differential\n          key={d.id}\n          d={d}\n          admin={admin}\n        />\n      ))}\n    </Accordion>\n  );\n};\n\nexport default DifferentialList;\n","import React from 'react';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport { useField } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { Form } from 'react-bootstrap';\n\nconst CustomTypeaheadSelect = (props) => {\n  // eslint-disable-next-line no-unused-vars\n  const [field, meta, helper] = useField(props);\n  const { t } = useTranslation();\n  return (\n    <>\n      <Form.Group controlId={`form-${props.name}`}>\n        <Form.Label>{props.label}</Form.Label>\n        <Typeahead\n          id={props.name}\n          multiple={false}\n          onChange={(selected) => {\n            const value = selected.length > 0 ? selected[0].name : '';\n            helper.setValue(value);\n          }}\n          onInputChange={(text) => helper.setValue(text)}\n          onBlur={() => helper.setTouched(true)}\n          allowNew={false}\n          labelKey={props.name}\n          options={props.options}\n          placeholder={t('write')}\n          emptyLabel=\"\"\n          {...(meta.touched && meta.error\n            ? { isInvalid: true, className: 'is-invalid' }\n            : { isInvalid: false })}\n          {...props}\n        />\n        {meta.touched && meta.error ? (\n          <div className=\"invalid-feedback\">{meta.error}</div>\n        ) : null}\n      </Form.Group>\n    </>\n  );\n};\n\nexport default CustomTypeaheadSelect;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFormik, FormikProvider } from 'formik';\nimport { useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport {\n  Form, Button,\n} from 'react-bootstrap';\nimport { validateName } from '../../../utils/Helper';\nimport CustomTypeaheadSelect from '../../../utils/CustomTypeaheadSelect';\n\nconst AddDifferentialForm = ({ addDifferential }) => {\n  const { t } = useTranslation();\n  const differentials = useSelector((state) => state.differentials);\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      description: '',\n    },\n    validationSchema: Yup.object({\n      name: validateName(),\n      description: Yup.string(),\n    }),\n    onSubmit: async (values) => {\n      const differential = differentials.filter((r) => r.name === values.name);\n      addDifferential(\n        differential.length === 0\n          ? { ...values }\n          : { ...differential[0], ...values },\n      );\n    },\n  });\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate onSubmit={formik.handleSubmit}>\n        <Form.Group controlId=\"name\">\n          <CustomTypeaheadSelect\n            name=\"name\"\n            label={t('addDifferential')}\n            options={differentials}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"description\">\n          <Form.Label>{t('description')}</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            {...formik.getFieldProps('description')}\n          />\n        </Form.Group>\n        <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\n      </Form>\n    </FormikProvider>\n  );\n};\n\nexport default AddDifferentialForm;\n","import axios from 'axios';\nimport { getConfig, getLanguage } from '../../../utils/Helper';\n\nconst baseUrl = '/api/differentials';\n\nconst getAll = () => {\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}/${getLanguage()}`, newObject, getConfig());\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`, getConfig());\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove,\n};\n","import differentialsService from '../services/differentialsService';\nimport { createDifferentialUnderCase } from './differentialsUnderCasesReducer';\n\nconst differentialsReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'GET_DIFFERENTIALS':\n      return action.data;\n    case 'NEW_DIFFERENTIAL':\n      return [...state, action.data];\n    default:\n      return state;\n  }\n};\n\nexport const getDifferentials = () => async (dispatch) => {\n  const returnedDifferentials = await differentialsService.getAll();\n  dispatch({\n    type: 'GET_DIFFERENTIALS',\n    data: returnedDifferentials || null,\n  });\n};\n\nexport const createDifferential = (diffGroupCaseId, differential) => async (dispatch) => {\n  let { id } = differential;\n\n  if (id === undefined) {\n    const newDifferential = await differentialsService.create({ name: differential.name });\n\n    dispatch({\n      type: 'NEW_DIFFERENTIAL',\n      data: newDifferential,\n    });\n\n    id = newDifferential.id;\n  }\n\n  dispatch(createDifferentialUnderCase({\n    diffGroupCaseId,\n    differentialId: id,\n    description: differential.description,\n  }));\n};\n\nexport default differentialsReducer;\n","import React, { useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Card } from 'react-bootstrap';\nimport DifferentialList from '../DifferentialList';\nimport AddDifferentialForm from '../AddDifferentialForm';\nimport AddUpdateModal from '../../../../utils/AddUpdateModal';\nimport { createDifferential } from '../../reducers/differentialsReducer';\nimport { setSuccess, setError } from '../../../../utils/MessageBanner';\n\nconst DifferentialGroup = ({\n  diffGroupCaseId, name, admin,\n}) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const modalRef = useRef();\n\n  /* istanbul ignore next */\n  const handleDifferentialAdd = (differentialObject) => {\n    modalRef.current.toggleVisibility();\n    try {\n      dispatch(createDifferential(diffGroupCaseId, differentialObject));\n      setSuccess(t('differentialAddSuccess'));\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n      setError(t('differentialAddError'));\n    }\n  };\n\n  return (\n    <Card style={{ width: '60rem' }}>\n      <Card.Header>{name}</Card.Header>\n      <Card.Body>\n        <DifferentialList diffGroupCaseId={diffGroupCaseId} admin={admin} />\n        {admin && (\n          <AddUpdateModal buttonLabel={t('buttonNewDifferential')} titleLabel={t('addDifferential')} ref={modalRef}>\n            <AddDifferentialForm addDifferential={handleDifferentialAdd} />\n          </AddUpdateModal>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default DifferentialGroup;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport DifferentialGroup from './DifferentialGroup';\n\nconst DifferentialGroupList = ({ admin }) => {\n  const caseDifferentialGroups = useSelector((state) => state.differentialGroupsUnderCase);\n\n  return (\n    <div data-testid=\"diffGroupList\">\n      {caseDifferentialGroups.map((d) => (\n        <DifferentialGroup\n          key={d.id}\n          diffGroupCaseId={d.diffGroupCaseId}\n          name={d.name}\n          admin={admin}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default DifferentialGroupList;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { useFormik, FormikProvider } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Form, Button,\n} from 'react-bootstrap';\nimport { validateName } from '../../../../utils/Helper';\nimport CustomTypeaheadSelect from '../../../../utils/CustomTypeaheadSelect';\n\nconst AddDifferentialGroupForm = ({ addDifferentialGroup }) => {\n  const { t } = useTranslation();\n  const differentialGroups = useSelector((state) => state.differentialGroups);\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n    },\n    validationSchema: Yup.object({\n      name: validateName(),\n    }),\n    onSubmit: async (values) => {\n      const group = differentialGroups.filter((r) => r.name === values.name);\n      addDifferentialGroup(\n        group.length === 0\n          ? values\n          : group[0],\n      );\n    },\n  });\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate onSubmit={formik.handleSubmit}>\n        <CustomTypeaheadSelect\n          name=\"name\"\n          label={t('addDifferentialGroup')}\n          options={differentialGroups}\n        />\n        <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\n      </Form>\n    </FormikProvider>\n  );\n};\n\nexport default AddDifferentialGroupForm;\n","import axios from 'axios';\nimport { getConfig, getLanguage } from '../../../utils/Helper';\n\nconst baseUrl = '/api/differentialGroups';\n\nconst getAll = () => {\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n};\n","import differentialGroupsUnderCasesService from '../services/differentialGroupsUnderCasesService';\n\nconst differentialGroupsUnderCasesReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'GET_DIFFERENTIALGROUPS_UNDER_CASE':\n      return action.data;\n    case 'NEW_DIFFERENTIALGROUP_UNDER_CASE':\n      return [...state, action.data];\n    default:\n      return state;\n  }\n};\n\nexport const getDifferentialGroupsUnderCase = (id) => async (dispatch) => {\n  const returnedDifferentialGroupsUnderCase = await differentialGroupsUnderCasesService.getAll(id);\n  dispatch({\n    type: 'GET_DIFFERENTIALGROUPS_UNDER_CASE',\n    data: returnedDifferentialGroupsUnderCase || null,\n  });\n};\n\nexport const createDifferentialGroupUnderCase = (content) => async (dispatch) => {\n  const newDifferentialGroupUnderCase = await differentialGroupsUnderCasesService.create(content);\n  dispatch({\n    type: 'NEW_DIFFERENTIALGROUP_UNDER_CASE',\n    data: newDifferentialGroupUnderCase,\n  });\n};\n\nexport default differentialGroupsUnderCasesReducer;\n","import differentialGroupsService from '../services/differentialGroupsService';\nimport { createDifferentialGroupUnderCase } from './differentialGroupsUnderCasesReducer';\n\nconst differentialGroupsReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'GET_DIFFERENTIALGROUPS':\n      return action.data;\n    case 'NEW_DIFFERENTIALGROUP':\n      return [...state, action.data];\n    default:\n      return state;\n  }\n};\n\nexport const getDifferentialGroups = () => async (dispatch) => {\n  const returnedDifferentialGroups = await differentialGroupsService.getAll();\n  dispatch({\n    type: 'GET_DIFFERENTIALGROUPS',\n    data: returnedDifferentialGroups || null,\n  });\n};\n\nexport const createDifferentialGroup = (caseId, differentialGroup) => async (dispatch) => {\n  let { id } = differentialGroup;\n\n  if (id === undefined) {\n    const newDifferentialGroup = await differentialGroupsService.create(differentialGroup);\n\n    dispatch({\n      type: 'NEW_DIFFERENTIALGROUP',\n      data: newDifferentialGroup,\n    });\n\n    id = newDifferentialGroup.id;\n  }\n\n  dispatch(createDifferentialGroupUnderCase({\n    caseId,\n    differentialGroupId: id,\n  }));\n};\n\nexport default differentialGroupsReducer;\n","import React, { useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport DifferentialGroupList from './differentialGroup/DifferentialGroupList';\nimport AddUpdateModal from '../../../utils/AddUpdateModal';\nimport AddDifferentialGroupForm from './differentialGroup/AddDifferentialGroupForm';\nimport { createDifferentialGroup } from '../reducers/differentialGroupsReducer';\nimport { setSuccess, setError } from '../../../utils/MessageBanner';\n\nconst Differentials = ({ admin }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const modalRef = useRef();\n  const { id } = useParams();\n\n  /* istanbul ignore next */\n  const handleDifferentialGroupAdd = (differentialGroupObject) => {\n    modalRef.current.toggleVisibility();\n    try {\n      dispatch(createDifferentialGroup(Number(id), differentialGroupObject));\n      setSuccess(t('differentialGroupUpdateSuccess'));\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n      setError(t('differentialGroupUpdateError'));\n    }\n  };\n\n  return (\n    <div>\n      <h2>\n        {t('Differentials')}\n      </h2>\n      {admin && (\n        <AddUpdateModal buttonLabel={t('buttonNewDifferentialGroup')} titleLabel={t('addDifferentialGroup')} ref={modalRef}>\n          <AddDifferentialGroupForm addDifferentialGroup={handleDifferentialGroupAdd} />\n        </AddUpdateModal>\n      )}\n      <DifferentialGroupList admin={admin} />\n    </div>\n  );\n};\n\nexport default Differentials;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst HideCase = ({ c, hideCase }) => {\n  const { t } = useTranslation();\n\n  const [newHidden, setNewHidden] = useState(c.hidden);\n\n  const handleVisibilityUpdate = (event) => {\n    event.preventDefault();\n    hideCase({\n      ...c,\n      hidden: newHidden,\n    });\n  };\n\n  const handleHiddenChange = () => {\n    setNewHidden(!newHidden);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleVisibilityUpdate}>\n        <label htmlFor=\"submit\" className=\"hidden\">{newHidden ? t('buttonShowCaseToStudents') : t('buttonHideCaseFromStudents')}</label>\n        <input id=\"submitHide\" className=\"hideCase\" type=\"submit\" onClick={handleHiddenChange} size=\"sm\" value={newHidden ? t('buttonShowCaseToStudents') : t('buttonHideCaseFromStudents')} />\n      </form>\n    </div>\n  );\n};\n\nexport default HideCase;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Form } from 'react-bootstrap';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { validateName } from '../../../utils/Helper';\n\nconst UpdateCaseTitle = ({ c, updateCaseTitle }) => {\n  const { t } = useTranslation();\n\n  const formik = useFormik({\n    initialValues: {\n      title: c.title,\n    },\n    validationSchema: Yup.object({\n      title: validateName(),\n    }),\n    onSubmit: (values) => {\n      updateCaseTitle({\n        ...c,\n        title: values.title,\n      });\n    },\n  });\n\n  return (\n    <Form noValidate onSubmit={formik.handleSubmit}>\n      <Form.Group controlId=\"updateTitle\" style={{ width: '30rem' }}>\n        <Form.Control\n          className=\"titleChangeInput\"\n          type=\"text\"\n          {...formik.getFieldProps('title')}\n          isInvalid={!!formik.errors.title}\n        />\n        <Form.Text className=\"text-muted\">\n          {t('caseTitleInstruction')}\n        </Form.Text>\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\n          {formik.errors.title}\n        </Form.Control.Feedback>\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default UpdateCaseTitle;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Form, Button,\n} from 'react-bootstrap';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nconst UpdateAnamnesis = ({ c, updateAnamnesis }) => {\n  const { t } = useTranslation();\n\n  const formik = useFormik({\n    initialValues: {\n      anamnesis: c.anamnesis,\n    },\n    validationSchema: Yup.object({\n      anamnesis: Yup.string()\n        .min(2, t('warningShort'))\n        .max(5000, t('warningLong'))\n        .required(t('warningRequired')),\n    }),\n    onSubmit: (values) => {\n      updateAnamnesis({\n        ...c,\n        anamnesis: values.anamnesis,\n      });\n    },\n  });\n\n  return (\n    <Form noValidate onSubmit={formik.handleSubmit}>\n      <Form.Group controlId=\"updateAnamnesis\">\n        <Form.Control\n          className=\"anamnesisForm\"\n          as=\"textarea\"\n          {...formik.getFieldProps('anamnesis')}\n          isInvalid={!!formik.errors.anamnesis}\n          rows={10}\n        />\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\n          {formik.errors.anamnesis}\n        </Form.Control.Feedback>\n      </Form.Group>\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSaveAnamneesi')}</Button>\n    </Form>\n  );\n};\n\nexport default UpdateAnamnesis;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport HideCase from '../case/components/HideCase';\nimport UpdateCaseTitle from '../case/components/UpdateCaseTitle';\nimport { setSuccess, setError } from '../../utils/MessageBanner';\nimport UpdateAnamnesis from './UpdateAnamnesis';\nimport { updateCase } from '../case/casesReducer';\n\nconst Anamnesis = ({ admin }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const c = useSelector((state) => state.cases.find((a) => a.id === Number(id)));\n\n  /* istanbul ignore next */\n  const handleCaseUpdate = (updatedCase) => {\n    try {\n      dispatch(updateCase(updatedCase));\n      setSuccess(t('caseUpdateSuccess'));\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n      setError(t('caseUpdateError'));\n    }\n  };\n\n  return (\n    <div>\n      {admin && c && (\n        <div id=\"casePageArea\">\n          <div className=\"rows\">\n            <UpdateCaseTitle c={c} updateCaseTitle={handleCaseUpdate} />\n            <HideCase c={c} hideCase={handleCaseUpdate} />\n          </div>\n          <UpdateAnamnesis c={c} updateAnamnesis={handleCaseUpdate} />\n        </div>\n      )}\n      {!admin && c && (\n        <p>{c.title}</p>\n      )}\n    </div>\n  );\n};\n\nexport default Anamnesis;\n","import axios from 'axios';\nimport { getConfig, getLanguage } from '../../../utils/Helper';\n\nconst baseUrl = '/api/subProcedures';\n\nconst getAll = (id) => {\n  const request = axios.get(`${baseUrl}/${id}/${getLanguage()}`, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}/${getLanguage()}`, newObject, getConfig());\n\nexport default {\n  create,\n  getAll,\n  update,\n};\n","import subProceduresService from '../services/subProceduresService';\n\nconst subProceduresReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'GET_SUBPROCEDURES':\n      return action.data;\n    case 'ADD_SUBPROCEDURE':\n      return [...state, action.data];\n    case 'UPDATE_SUBPROCEDURE': {\n      return state.map((p) => (p.id !== action.data.id\n        ? p\n        : action.data\n      ));\n    }\n    default:\n      return state;\n  }\n};\n\nexport const getSubprocedures = (procedureCaseId) => async (dispatch) => {\n  const subprocedures = await subProceduresService.getAll(procedureCaseId);\n  dispatch({\n    type: 'GET_SUBPROCEDURES',\n    data: subprocedures || null,\n  });\n};\n\nexport const addSubprocedure = (subProcedureObject, procedureCaseId) => async (dispatch) => {\n  const addedSubprocedure = await subProceduresService.create({\n    ...subProcedureObject,\n    procedureCaseId,\n  });\n  dispatch({\n    type: 'ADD_SUBPROCEDURE',\n    data: addedSubprocedure,\n  });\n};\n\nexport const updateSubprocedure = (id, subProcedureObject) => async (dispatch) => {\n  await subProceduresService.update(id, subProcedureObject);\n  dispatch({\n    type: 'UPDATE_SUBPROCEDURE',\n    data: subProcedureObject,\n  });\n};\n\nexport default subProceduresReducer;\n","import axios from 'axios';\nimport { getConfig, getLanguage } from '../../../utils/Helper';\n\nconst baseUrl = '/api/optionGroups';\n\nconst getAll = () => {\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n};\n","import axios from 'axios';\nimport { getConfig, getLanguage } from '../../../utils/Helper';\n\nconst baseUrl = '/api/optionGroupsUnderSubProcedures';\n\nconst getAll = (caseId) => {\n  const request = axios.get(`${baseUrl}/${caseId}/${getLanguage()}`, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n};\n","import service from '../services/optionGroupsUnderSubProceduresService';\n\nconst optionGroupsUnderSubProceduresReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'GET_OPTIONGROUPS_UNDER_SUBPROCEDURES':\n      return action.data;\n    case 'NEW_OPTIONGROUP_UNDER_SUBPROCEDURE':\n      return [...state, action.data];\n    default:\n      return state;\n  }\n};\n\nexport const getOptionGroupsUnderSubProcedures = (id) => async (dispatch) => {\n  const returnedOptionGroups = await service.getAll(id);\n  dispatch({\n    type: 'GET_OPTIONGROUPS_UNDER_SUBPROCEDURES',\n    data: returnedOptionGroups || null,\n  });\n};\n\nexport const createOptionGroupUnderSubProcedure = (content) => async (dispatch) => {\n  const newOptionGroupUnderSubProcedure = await service.create(content);\n  dispatch({\n    type: 'NEW_OPTIONGROUP_UNDER_SUBPROCEDURE',\n    data: newOptionGroupUnderSubProcedure,\n  });\n};\n\nexport default optionGroupsUnderSubProceduresReducer;\n","import optionGroupsService from '../services/optionGroupsService';\nimport { createOptionGroupUnderSubProcedure } from './optionGroupsUnderSubProceduresReducer';\n\nconst optionGroupsReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'GET_OPTIONGROUPS':\n      return action.data;\n    case 'NEW_OPTIONGROUP':\n      return [...state, action.data];\n    default:\n      return state;\n  }\n};\n\nexport const getOptionGroups = () => async (dispatch) => {\n  const returnedOptionGroups = await optionGroupsService.getAll();\n  dispatch({\n    type: 'GET_OPTIONGROUPS',\n    data: returnedOptionGroups || null,\n  });\n};\n\nexport const createOptionGroup = (subProcedureId, optionGroup) => async (dispatch) => {\n  let { id } = optionGroup;\n\n  if (id === undefined) {\n    const newOptionGroup = await optionGroupsService.create(optionGroup);\n\n    dispatch({\n      type: 'NEW_OPTIONGROUP',\n      data: newOptionGroup,\n    });\n\n    id = newOptionGroup.id;\n  }\n\n  dispatch(createOptionGroupUnderSubProcedure({\n    subProcedureId,\n    optionGroupId: id,\n  }));\n};\n\nexport default optionGroupsReducer;\n","import axios from 'axios';\nimport { getConfig, getLanguage } from '../../../utils/Helper';\n\nconst baseUrl = '/api/options';\n\nconst getAll = () => {\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n};\n","import axios from 'axios';\nimport { getConfig, getLanguage } from '../../../utils/Helper';\n\nconst baseUrl = '/api/optionsUnderSubProcedures';\n\nconst getAll = (id) => {\n  const request = axios.get(`${baseUrl}/${id}/INTERVIEW/${getLanguage()}`, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(`${baseUrl}/${getLanguage()}`, newObject, getConfig());\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n};\n","import service from '../services/optionsUnderSubProceduresService';\n\nconst optionsUnderSubProceduresReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'GET_OPTIONS_UNDER_SUBPROCEDURES':\n      return action.data;\n    case 'NEW_OPTION_UNDER_SUBPROCEDURE':\n      return [...state, action.data];\n    default:\n      return state;\n  }\n};\n\nexport const getOptionsUnderSubProcedures = (id) => async (dispatch) => {\n  const returnedOptions = await service.getAll(id);\n  dispatch({\n    type: 'GET_OPTIONS_UNDER_SUBPROCEDURES',\n    data: returnedOptions || null,\n  });\n};\n\nexport const createOptionUnderSubProcedure = (content) => async (dispatch) => {\n  const newOption = await service.create(content);\n  dispatch({\n    type: 'NEW_OPTION_UNDER_SUBPROCEDURE',\n    data: newOption,\n  });\n};\n\nexport default optionsUnderSubProceduresReducer;\n","import service from '../services/optionsService';\nimport { createOptionUnderSubProcedure } from './optionsUnderSubProceduresReducer';\n\nconst optionsReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'GET_OPTIONS':\n      return action.data;\n    case 'NEW_OPTION':\n      return [...state, action.data];\n    default:\n      return state;\n  }\n};\n\nexport const getOptions = () => async (dispatch) => {\n  const returnedOptions = await service.getAll();\n  dispatch({\n    type: 'GET_OPTIONS',\n    data: returnedOptions || null,\n  });\n};\n\nexport const createOption = (optionGroupSubProcedureId, content) => async (dispatch) => {\n  let { id } = content;\n\n  if (id === undefined) {\n    const newOption = await service.create({ name: content.name });\n\n    dispatch({\n      type: 'NEW_OPTION',\n      data: newOption,\n    });\n\n    id = newOption.id;\n  }\n\n  dispatch(createOptionUnderSubProcedure({\n    optionGroupSubProcedureId,\n    optionId: id,\n    description: content.description,\n    isRequired: content.isRequired,\n  }));\n};\n\nexport default optionsReducer;\n","import React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Link, useParams, Switch, Route, Redirect,\n} from 'react-router-dom';\nimport { Button, ButtonGroup } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport Procedures from '../../procedure/components/Procedures';\nimport Differentials from '../../differential/components/Differentials';\nimport Anamnesis from '../../anamnesis/Anamnesis';\nimport { getProcedures } from '../../procedure/reducers/proceduresReducer';\nimport { getProceduresUnderCase } from '../../procedure/reducers/proceduresUnderCasesReducer';\nimport { getDifferentials } from '../../differential/reducers/differentialsReducer';\nimport { getDifferentialGroups } from '../../differential/reducers/differentialGroupsReducer';\nimport { getDifferentialGroupsUnderCase } from '../../differential/reducers/differentialGroupsUnderCasesReducer';\nimport { getDifferentialsUnderCase } from '../../differential/reducers/differentialsUnderCasesReducer';\nimport { getSubprocedures } from '../../subprocedure/reducers/subProceduresReducer';\nimport { getOptionGroups } from '../../subprocedure/reducers/optionGroupsReducer';\nimport { getOptionGroupsUnderSubProcedures } from '../../subprocedure/reducers/optionGroupsUnderSubProceduresReducer';\nimport { getOptions } from '../../subprocedure/reducers/optionReducer';\nimport { getOptionsUnderSubProcedures } from '../../subprocedure/reducers/optionsUnderSubProceduresReducer';\n\nconst Case = ({ admin }) => {\n  const { t } = useTranslation();\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const baseUrl = `/cases/${id}`;\n\n  useEffect(() => {\n    dispatch(getProcedures());\n    dispatch(getProceduresUnderCase(id));\n    dispatch(getSubprocedures(id));\n    dispatch(getOptionGroups());\n    dispatch(getOptionGroupsUnderSubProcedures(id));\n    dispatch(getOptions());\n    dispatch(getOptionsUnderSubProcedures(id));\n    dispatch(getDifferentials());\n    dispatch(getDifferentialsUnderCase(id));\n    dispatch(getDifferentialGroups());\n    dispatch(getDifferentialGroupsUnderCase(id));\n  }, []);\n\n  const buttonGroupStyle = {\n    marginBottom: 25,\n  };\n\n  return (\n    <div id=\"wrapper\">\n      <ButtonGroup style={buttonGroupStyle}>\n        <Button className=\"tabs\" as={Link} to={`${baseUrl}/anamnesis`} disabled>{t('caseAnamnesis')}</Button>\n        <Button className=\"tabs\" as={Link} to={`${baseUrl}/procedures`}>{t('caseProcedures')}</Button>\n        <Button className=\"tabs\" as={Link} to={`${baseUrl}/differentials`}>{t('caseDifferentials')}</Button>\n      </ButtonGroup>\n\n      <Switch>\n        <Route path=\"/cases/:id/anamnesis\">\n          <Anamnesis admin={admin} />\n        </Route>\n        <Route path=\"/cases/:id/procedures\">\n          <Procedures admin={admin} />\n        </Route>\n        <Route path=\"/cases/:id/differentials\">\n          <Differentials admin={admin} />\n        </Route>\n        <Route path=\"/cases/:id\">\n          <Redirect to={`${baseUrl}/anamnesis`} />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default Case;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Form, Button,\n} from 'react-bootstrap';\nimport { useFormik, FormikProvider } from 'formik';\nimport * as Yup from 'yup';\nimport { useSelector } from 'react-redux';\nimport CustomTypeaheadSelect from '../../../../../utils/CustomTypeaheadSelect';\nimport { validateName } from '../../../../../utils/Helper';\n\nconst NewOptionGroupForm = ({ addOptionGroup }) => {\n  const { t } = useTranslation();\n  const optionGroups = useSelector((state) => state.optionGroups);\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n    },\n    validationSchema: Yup.object().shape({\n      name: validateName(),\n    }),\n    onSubmit: async (values) => {\n      const group = optionGroups.filter((r) => r.name === values.name);\n      addOptionGroup(\n        group.length === 0\n          ? values\n          : group[0],\n      );\n    },\n  });\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate onSubmit={formik.handleSubmit}>\n        <CustomTypeaheadSelect\n          name=\"name\"\n          label={t('addOptionGroup')}\n          options={optionGroups}\n        />\n        <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\n      </Form>\n    </FormikProvider>\n  );\n};\n\nexport default NewOptionGroupForm;\n","import React from 'react';\nimport { Accordion, Card } from 'react-bootstrap';\n\nconst Option = ({ optionObject }) => (\n  <Card>\n    <Accordion.Toggle\n      className={`optionCard-${optionObject.isRequired}`}\n      as={Card.Header}\n      eventKey={optionObject.id}\n    >\n      {optionObject.name}\n    </Accordion.Toggle>\n    <Accordion.Collapse eventKey={optionObject.id}>\n      <Card.Body>{optionObject.description}</Card.Body>\n    </Accordion.Collapse>\n  </Card>\n);\n\nexport default Option;\n","import React from 'react';\nimport { Accordion } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport Option from './Option';\n\nconst OptionList = ({ optionGroupSubProcedureId }) => {\n  const caseOptions = useSelector((state) => state.optionsUnderSubProcedure);\n  const options = caseOptions.filter(\n    (o) => o.optionGroupSubProcedureId === optionGroupSubProcedureId,\n  );\n\n  return (\n    <Accordion>\n      {options.map((o) => (\n        <Option key={o.id} optionObject={o} />\n      ))}\n    </Accordion>\n  );\n};\n\nexport default OptionList;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport {\n  Form, Button,\n} from 'react-bootstrap';\nimport { useFormik, FormikProvider } from 'formik';\nimport * as Yup from 'yup';\nimport CustomTypeaheadSelect from '../../../../utils/CustomTypeaheadSelect';\nimport { validateName } from '../../../../utils/Helper';\n\nconst AddOptionForm = ({ addOption }) => {\n  const { t } = useTranslation();\n  const options = useSelector((state) => state.options);\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      description: '',\n      isRequired: 2,\n    },\n    validationSchema: Yup.object().shape({\n      name: validateName(),\n      description: Yup.string(),\n      isRequired: Yup.number()\n        .required(t('warningRequired'))\n        .integer(),\n    }),\n    onSubmit: async (values) => {\n      const option = options.filter((r) => r.name === values.name);\n      addOption(\n        option.length === 0\n          ? { ...values, isRequired: Number(values.isRequired) }\n          : { ...option[0], ...values, isRequired: Number(values.isRequired) },\n      );\n    },\n  });\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate onSubmit={formik.handleSubmit}>\n        <CustomTypeaheadSelect\n          name=\"name\"\n          label={t('addOption')}\n          options={options}\n        />\n        <Form.Group controlId=\"description\">\n          <Form.Label>{t('description')}</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            {...formik.getFieldProps('description')}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"isRequired\">\n          <Form.Check\n            defaultChecked\n            id=\"required\"\n            label={t('required')}\n            name=\"isRequired\"\n            type=\"radio\"\n            value={2}\n            onChange={formik.getFieldProps('isRequired').onChange}\n          />\n          <Form.Check\n            id=\"voluntary\"\n            label={t('voluntary')}\n            name=\"isRequired\"\n            type=\"radio\"\n            value={1}\n            onChange={formik.getFieldProps('isRequired').onChange}\n          />\n          <Form.Check\n            id=\"wrong\"\n            label={t('wrong')}\n            name=\"isRequired\"\n            type=\"radio\"\n            value={0}\n            onChange={formik.getFieldProps('isRequired').onChange}\n          />\n        </Form.Group>\n        <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\n      </Form>\n    </FormikProvider>\n  );\n};\n\nexport default AddOptionForm;\n","import React, { useRef } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport OptionList from '../OptionList';\nimport AddOptionForm from '../AddOptionForm';\nimport AddUpdateModal from '../../../../../utils/AddUpdateModal';\nimport { createOption } from '../../../reducers/optionReducer';\nimport { setSuccess, setError } from '../../../../../utils/MessageBanner';\n\nconst OptionGroup = ({\n  optionGroupSubProcedureId, name, admin,\n}) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const modalRef = useRef();\n\n  /* istanbul ignore next */\n  const handleOptionAdd = (newOption) => {\n    modalRef.current.toggleVisibility();\n    try {\n      dispatch(createOption(optionGroupSubProcedureId, newOption));\n      setSuccess(t('optionGroupAddSuccess'));\n    } catch (error) {\n      setError(t('optionGroupAddError'));\n    }\n  };\n\n  return (\n    <Card>\n      <Card.Header>{name}</Card.Header>\n      <Card.Body>\n        <OptionList optionGroupSubProcedureId={optionGroupSubProcedureId} />\n        {admin && (\n        <AddUpdateModal buttonLabel={t('buttonAddNewOption')} titleLabel={t('addOption')} ref={modalRef}>\n          <AddOptionForm addOption={handleOptionAdd} />\n        </AddUpdateModal>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default OptionGroup;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport OptionGroup from './OptionGroup';\n\nconst OptionGroupList = ({ subProcedureId, admin }) => {\n  const caseOptionGroups = useSelector((state) => state.optionGroupsUnderSubProcedure);\n  const subProcedureOptionGroups = caseOptionGroups.filter(\n    (o) => o.subProcedureId === subProcedureId,\n  );\n\n  return (\n    <div data-testid=\"optionGroupList\">\n      {subProcedureOptionGroups.map((d) => (\n        <OptionGroup\n          key={d.id}\n          optionGroupSubProcedureId={d.optionGroupSubProcedureId}\n          name={d.name}\n          admin={admin}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default OptionGroupList;\n","import React, { useRef } from 'react';\nimport { Accordion, Card } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport AddUpdateModal from '../../../../utils/AddUpdateModal';\nimport AddOptionGroupForm from '../option/optionGroup/AddOptionGroupForm';\nimport { createOptionGroup } from '../../reducers/optionGroupsReducer';\nimport { setSuccess, setError } from '../../../../utils/MessageBanner';\nimport OptionGroupList from '../option/optionGroup/OptionGroupList';\n\nconst InterviewSubProcedure = ({ d, admin }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const modalRef = useRef();\n\n  /* istanbul ignore next */\n  const handleOptionGroupAdd = (optionGroup) => {\n    modalRef.current.toggleVisibility();\n    try {\n      dispatch(createOptionGroup(d.id, optionGroup));\n      setSuccess(t('optionGroupAddSuccess'));\n    } catch (error) {\n      setError(t('optionGroupAddError'));\n    }\n  };\n\n  return (\n    <div>\n      <Card style={{ width: '60rem' }}>\n        <Accordion.Toggle as={Card.Header} eventKey={d.id}>\n          <div className=\"d-flex justify-content-between align-items-center\">\n            {d.title}\n          </div>\n        </Accordion.Toggle>\n        <Accordion.Collapse eventKey={d.id}>\n          <Card.Body>\n            { admin\n            && (\n            <AddUpdateModal buttonLabel={t('buttonAddNewOptionGroup')} titleLabel={t('addOptionGroup')} ref={modalRef}>\n              <AddOptionGroupForm addOptionGroup={handleOptionGroupAdd} />\n            </AddUpdateModal>\n            )}\n            <OptionGroupList subProcedureId={d.id} admin={admin} />\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    </div>\n  );\n};\n\nexport default InterviewSubProcedure;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Form, Button,\n} from 'react-bootstrap';\nimport { validateName } from '../../../../utils/Helper';\n\nconst UpdateTextSubProcedureForm = ({\n  title,\n  text,\n  updateTextSubProcedure,\n}) => {\n  const { t } = useTranslation();\n\n  const formik = useFormik({\n    initialValues: {\n      title,\n      text,\n    },\n    validationSchema: Yup.object().shape({\n      title: validateName(),\n      text: Yup.string(),\n    }),\n    onSubmit: (values) => {\n      updateTextSubProcedure({\n        text: values.text,\n      });\n    },\n  });\n\n  return (\n    <Form noValidate onSubmit={formik.handleSubmit}>\n      <Form.Group controlId=\"title\">\n        <Form.Label>{t('title')}</Form.Label>\n        <Form.Control\n          disabled\n          type=\"text\"\n          placeholder={t('write')}\n          {...formik.getFieldProps('title')}\n          isInvalid={!!formik.errors.title}\n        />\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\n          {formik.errors.title}\n        </Form.Control.Feedback>\n      </Form.Group>\n      <Form.Group controlId=\"text\">\n        <Form.Label>{t('textToAdd')}</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          rows={10}\n          {...formik.getFieldProps('text')}\n        />\n      </Form.Group>\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonUpdate')}</Button>\n    </Form>\n  );\n};\n\nexport default UpdateTextSubProcedureForm;\n","import React, { useRef } from 'react';\nimport { Accordion, Card } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport UpdateTextSubProcedureForm from './UpdateTextSubProcedureForm';\nimport { updateSubprocedure } from '../../reducers/subProceduresReducer';\nimport { setSuccess, setError } from '../../../../utils/MessageBanner';\nimport AddUpdateModal from '../../../../utils/AddUpdateModal';\n\nconst TextSubProcedure = ({ d, admin }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const modalRef = useRef();\n\n  /* istanbul ignore next */\n  const handleTextSubProcedureUpdate = (updatedObject) => {\n    modalRef.current.toggleVisibility();\n    try {\n      dispatch(updateSubprocedure(d.id, {\n        ...d,\n        text: updatedObject.text,\n      }));\n      setSuccess(t('subProcedureUpdateSuccess'));\n    } catch (error) {\n      setError(t('subProcedureUpdateError'));\n    }\n  };\n\n  return (\n    <div>\n      <Card style={{ width: '60rem' }}>\n        <Accordion.Toggle as={Card.Header} eventKey={d.id}>\n          <div className=\"d-flex justify-content-between align-items-center\">\n            {d.title}\n            {admin && (\n            <div className=\"cardButtons\">\n              <AddUpdateModal className=\"editButton\" buttonLabel={t('buttonEdit')} titleLabel={t('updateSubProcedure')} ref={modalRef}>\n                <UpdateTextSubProcedureForm\n                  title={d.title}\n                  text={d.text}\n                  updateTextSubProcedure={handleTextSubProcedureUpdate}\n                />\n              </AddUpdateModal>\n            </div>\n            )}\n          </div>\n        </Accordion.Toggle>\n        <Accordion.Collapse eventKey={d.id}>\n          <Card.Body>{d.text}</Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    </div>\n  );\n};\n\nexport default TextSubProcedure;\n","import React from 'react';\nimport InterviewSubProcedure from './interviewSubProcedure/InterviewSubProcedure';\nimport TextSubProcedure from './textSubProcedure/TextSubProcedure';\n\n// eslint-disable-next-line consistent-return\nconst SubProcedure = ({ d, admin }) => {\n  if (d.type === 'TEXT') {\n    return (\n      <TextSubProcedure\n        d={d}\n        admin={admin}\n      />\n    );\n  } if (d.type === 'INTERVIEW') {\n    return (\n      <InterviewSubProcedure\n        d={d}\n        admin={admin}\n      />\n    );\n  }\n};\n\nexport default SubProcedure;\n","import React from 'react';\nimport { Accordion } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport SubProcedure from './SubProcedure';\n\nconst SubProcedureList = ({ procedureCaseId, admin }) => {\n  const caseSubProcedures = useSelector((state) => state.subProcedures);\n  const listedProcedures = caseSubProcedures\n    .filter((p) => p.procedureCaseId === Number(procedureCaseId))\n    .sort((a, b) => a.priority - b.priority);\n\n  return (\n    <Accordion>\n      {listedProcedures.map((d) => (\n        <SubProcedure key={d.id} d={d} admin={admin} />\n      ))}\n    </Accordion>\n  );\n};\n\nexport default SubProcedureList;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Form, Button,\n} from 'react-bootstrap';\nimport { validateName, validatePriority } from '../../../../utils/Helper';\n\nconst AddTextSubProcedure = ({ addSubProcedure }) => {\n  const { t } = useTranslation();\n\n  const formik = useFormik({\n    initialValues: {\n      priority: '',\n      title: '',\n      text: '',\n    },\n    validationSchema: Yup.object({\n      title: validateName(),\n      priority: validatePriority(),\n      text: Yup.string(),\n    }),\n    onSubmit: (values) => {\n      addSubProcedure({\n        ...values,\n        priority: Number(values.priority),\n        type: 'TEXT',\n      });\n    },\n  });\n\n  return (\n    <Form noValidate onSubmit={formik.handleSubmit}>\n      <Form.Group controlId=\"title\">\n        <Form.Label>{t('title')}</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder={t('write')}\n          {...formik.getFieldProps('title')}\n          isInvalid={!!formik.errors.title}\n        />\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\n          {formik.errors.title}\n        </Form.Control.Feedback>\n      </Form.Group>\n      <Form.Group controlId=\"priority\">\n        <Form.Label>{t('subProcedurePriority')}</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder={t('giveNumber')}\n          {...formik.getFieldProps('priority')}\n          isInvalid={!!formik.errors.priority}\n        />\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\n          {formik.errors.priority}\n        </Form.Control.Feedback>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"text\">\n        <Form.Label>{t('textToAdd')}</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          rows={10}\n          {...formik.getFieldProps('text')}\n        />\n      </Form.Group>\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmit')}</Button>\n    </Form>\n  );\n};\n\nexport default AddTextSubProcedure;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Form, Button,\n} from 'react-bootstrap';\nimport { validateName, validatePriority } from '../../../../utils/Helper';\n\nconst AddInterviewSubProcedure = ({ addSubProcedure }) => {\n  const { t } = useTranslation();\n\n  const formik = useFormik({\n    initialValues: {\n      priority: '',\n      title: '',\n    },\n    validationSchema: Yup.object({\n      title: validateName(),\n      priority: validatePriority(),\n    }),\n    onSubmit: (values) => {\n      addSubProcedure({\n        priority: Number(values.priority),\n        type: 'INTERVIEW',\n        title: values.title,\n      });\n    },\n  });\n\n  return (\n    <Form noValidate onSubmit={formik.handleSubmit}>\n      <Form.Group controlId=\"title\">\n        <Form.Label>{t('title')}</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder={t('write')}\n          {...formik.getFieldProps('title')}\n          isInvalid={!!formik.errors.title}\n        />\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\n          {formik.errors.title}\n        </Form.Control.Feedback>\n      </Form.Group>\n      <Form.Group controlId=\"priority\">\n        <Form.Label>{t('subProcedurePriority')}</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder={t('giveNumber')}\n          {...formik.getFieldProps('priority')}\n          isInvalid={!!formik.errors.priority}\n        />\n        <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\n          {formik.errors.priority}\n        </Form.Control.Feedback>\n      </Form.Group>\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmit')}</Button>\n    </Form>\n  );\n};\n\nexport default AddInterviewSubProcedure;\n","import React, { useState, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  useParams,\n} from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\n\nimport AddUpdateModal from '../../../utils/AddUpdateModal';\nimport SubProcedureList from '../../subprocedure/components/SubProcedureList';\nimport AddTextSubProcedure from '../../subprocedure/components/textSubProcedure/AddTextSubProcedure';\nimport { addSubprocedure } from '../../subprocedure/reducers/subProceduresReducer';\nimport { setSuccess, setError } from '../../../utils/MessageBanner';\nimport AddInterviewSubProcedure from '../../subprocedure/components/interviewSubProcedure/AddInterviewSubProcedure';\n\nconst Procedure = ({ admin }) => {\n  const { t } = useTranslation();\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  const modalRef = useRef();\n\n  const showWhenVisible = { display: show ? '' : 'none' };\n\n  const handleVisibility = () => {\n    setShow(!show);\n  };\n\n  /* istanbull ignore next */\n  const handleSubProcedureAdd = (newSubProcedure) => {\n    modalRef.current.toggleVisibility();\n    try {\n      dispatch(addSubprocedure(newSubProcedure, Number(id)));\n      setSuccess(t('subProcedureUpdateSuccess'));\n    } catch (error) {\n      setError(t('subProcedureUpdateError'));\n    }\n  };\n\n  return (\n    <div id=\"wrapper\">\n      <h2>\n        {t('subProcedures')}\n      </h2>\n      {admin && (\n        <div>\n          <Button className=\"addButton\" onClick={handleVisibility} id=\"addNew\">\n            {t('buttonNewSubProcedure')}\n          </Button>\n          <div className=\"rows\" style={showWhenVisible}>\n            <AddUpdateModal buttonLabel={t('buttonAddNewText')} titleLabel={t('addTextSubProcedure')} ref={modalRef}>\n              <AddTextSubProcedure addSubProcedure={handleSubProcedureAdd} />\n            </AddUpdateModal>\n            <Button className=\"addButton question\" size=\"sm\">{t('buttonAddNewQuestion')}</Button>\n            <AddUpdateModal buttonLabel={t('buttonAddNewInterview')} titleLabel={t('addInterviewSubProcedure')} ref={modalRef}>\n              <AddInterviewSubProcedure addSubProcedure={handleSubProcedureAdd} />\n            </AddUpdateModal>\n            <Button className=\"addButton diagnosis\" size=\"sm\">{t('buttonAddFinalDiagnosis')}</Button>\n          </div>\n          <SubProcedureList procedureCaseId={id} admin={admin} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Procedure;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst FileBank = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('fileBank')}</h2>\n    </div>\n  );\n};\n\nexport default FileBank;\n","import axios from 'axios';\nimport { getConfig, getLanguage } from '../../utils/Helper';\n\nconst baseUrl = '/api/files';\n\nconst getPrivacyNotice = () => {\n  const config = getConfig();\n  config.responseType = 'arraybuffer';\n  const request = axios.get(`${baseUrl}/${getLanguage()}`, config);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getPrivacyNotice,\n};\n","/* eslint-disable import/no-unresolved */\nimport React, { useEffect, useState } from 'react';\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\nimport { useTranslation } from 'react-i18next';\nimport filesService from './filesService';\n\nconst PrivacyNotice = () => {\n  const { t } = useTranslation();\n  const [pdf, setPdf] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  useEffect(async () => {\n    const fetchedPdf = await filesService.getPrivacyNotice();\n    setPdf({\n      data: fetchedPdf,\n    });\n  }, []);\n\n  // eslint-disable-next-line no-shadow\n  const onDocumentLoadSuccess = ({ numPages }) => {\n    setNumPages(numPages);\n    setPageNumber(1);\n  };\n\n  const changePage = (offset) => {\n    setPageNumber((prevPageNumber) => prevPageNumber + offset);\n  };\n\n  const previousPage = () => {\n    changePage(-1);\n  };\n\n  const nextPage = () => {\n    changePage(1);\n  };\n\n  return (\n    <div id=\"wrapper\">\n      <div>\n        <p>\n          {t('page')}\n          &nbsp;\n          {pageNumber || (numPages ? 1 : '--')}\n          {t('of')}\n          {numPages || '--'}\n        </p>\n        <button\n          type=\"button\"\n          disabled={pageNumber <= 1}\n          onClick={previousPage}\n        >\n          {t('previous')}\n        </button>\n        <button\n          type=\"button\"\n          disabled={pageNumber >= numPages}\n          onClick={nextPage}\n        >\n          {t('next')}\n        </button>\n      </div>\n      <Document\n        file={pdf}\n        onLoadSuccess={onDocumentLoadSuccess}\n      >\n        <Page pageNumber={pageNumber} />\n      </Document>\n    </div>\n  );\n};\n\nexport default PrivacyNotice;\n","import React from 'react';\nimport {\n  Switch, Route, Redirect,\n} from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport Frontpage from '../frontpage/Frontpage';\nimport HowToPlay from '../instructions/HowToPlay';\nimport Profile from '../users/Profile';\nimport Users from '../users/Users';\nimport Case from '../case/components/Case';\nimport Procedure from '../procedure/components/Procedure';\nimport FileBank from '../files/FileBank';\nimport PrivacyNotice from '../files/PrivacyNotice';\n\nconst Routing = () => {\n  const admin = useSelector((state) => state.admin);\n\n  return (\n    <Switch>\n      <Route path=\"/howtoplay\">\n        <HowToPlay />\n      </Route>\n      <Route path=\"/profile\">\n        <Profile />\n      </Route>\n      <Route path=\"/users\">\n        {admin ? <Users /> : <Redirect to=\"/\" />}\n      </Route>\n      <Route path=\"/cases/:id/procedure/:id\">\n        <Procedure admin={admin} />\n      </Route>\n      <Route path=\"/cases/:id\">\n        <Case admin={admin} />\n      </Route>\n      <Route path=\"/files\">\n        {admin ? <FileBank /> : <Redirect to=\"/\" />}\n      </Route>\n      <Route path=\"/privacy\">\n        <PrivacyNotice />\n      </Route>\n      <Route path=\"/\">\n        <Frontpage admin={admin} />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default Routing;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nconst Footer = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"footer\">\n      <hr />\n      <Link to=\"/privacy\" style={{ color: 'black' }}>{t('privacyNotice')}</Link>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n} from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { initializeCasesAndUser } from './App/case/casesReducer';\nimport Navigationbar from './App/navigation/Navbar';\nimport Sidebar from './App/navigation/Sidebar';\nimport Routing from './App/navigation/Routing';\nimport MessageBanner from './utils/MessageBanner';\nimport Footer from './App/navigation/Footer';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  /* istanbul ignore next */\n  React.useEffect(() => {\n    dispatch(initializeCasesAndUser());\n  }, []);\n\n  return (\n    <Router>\n      <Navigationbar />\n      <Sidebar />\n      <MessageBanner />\n      <Routing />\n      <Footer />\n    </Router>\n  );\n};\n\nexport default (App);\n","const userReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'INITIALIZE_USER':\n      return action.data;\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport casesReducer from './App/case/casesReducer';\nimport userReducer from './App/users/reducers/userReducer';\nimport proceduresReducer from './App/procedure/reducers/proceduresReducer';\nimport proceduresUnderCasesReducer from './App/procedure/reducers/proceduresUnderCasesReducer';\nimport subProceduresReducer from './App/subprocedure/reducers/subProceduresReducer';\nimport differentialsReducer from './App/differential/reducers/differentialsReducer';\nimport differentialsUnderCasesReducer from './App/differential/reducers/differentialsUnderCasesReducer';\nimport differentialGroupsReducer from './App/differential/reducers/differentialGroupsReducer';\nimport differentialGroupsUnderCasesReducer from './App/differential/reducers/differentialGroupsUnderCasesReducer';\nimport optionGroupsReducer from './App/subprocedure/reducers/optionGroupsReducer';\nimport optionGroupsUnderSubProceduresReducer from './App/subprocedure/reducers/optionGroupsUnderSubProceduresReducer';\nimport optionsReducer from './App/subprocedure/reducers/optionReducer';\nimport optionsUnderSubProceduresReducer from './App/subprocedure/reducers/optionsUnderSubProceduresReducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst reducer = combineReducers({\n  cases: casesReducer,\n  admin: userReducer,\n  procedures: proceduresReducer,\n  proceduresUnderCase: proceduresUnderCasesReducer,\n  subProcedures: subProceduresReducer,\n  optionGroups: optionGroupsReducer,\n  optionGroupsUnderSubProcedure: optionGroupsUnderSubProceduresReducer,\n  options: optionsReducer,\n  optionsUnderSubProcedure: optionsUnderSubProceduresReducer,\n  differentials: differentialsReducer,\n  differentialsUnderCase: differentialsUnderCasesReducer,\n  differentialGroups: differentialGroupsReducer,\n  differentialGroupsUnderCase: differentialGroupsUnderCasesReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nexport default () => {\n  const store = createStore(\n    persistedReducer,\n    composeWithDevTools(\n      applyMiddleware(thunk),\n    ),\n  );\n  const persistor = persistStore(store);\n  return { store, persistor };\n};\n","/* eslint-disable linebreak-style */\n/* istanbul ignore file */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' // [::1] is the IPv6 localhost address.\n      || window.location.hostname === '[::1]'\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      || window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n      ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        // eslint-disable-next-line no-use-before-define\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        // eslint-disable-next-line no-use-before-define\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n\n              // Execute callback\n              // eslint-disable-next-line no-lonely-if\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n          || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      });\n  }\n}\n","/* eslint-disable linebreak-style */\n/* istanbul ignore file */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './App';\nimport createStore from './store';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n/config';\n\nconst { store, persistor } = createStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}