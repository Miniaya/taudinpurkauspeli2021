{"version":3,"sources":["i18n/config.js","components/navigation/Navbar.js","utils/Helper.js","services/cases.js","components/navigation/Sidebar.js","components/case/NewCaseForm.js","utils/MessageBanner.js","components/case/NewCase.js","services/differentials/differentialsUnderCases.js","services/procedures/proceduresUnderCase.js","components/case/CopyCase.js","components/case/RemoveCase.js","components/case/CaseCard.js","components/frontpage/Search.js","components/frontpage/Frontpage.js","components/instructions/HowToPlay.js","components/users/Profile.js","components/users/Users.js","components/case/Case.js","components/procedure/NewProcedureForm.js","services/procedures/procedures.js","components/procedure/NewProcedure.js","components/procedure/EditProcedure.js","components/procedure/ProcedureList.js","components/procedure/Procedures.js","services/procedures/subProcedures.js","services/procedures/textSubProcedures.js","components/subprocedure/AddTextSubProcedure.js","components/subprocedure/NewTextSubProcedure.js","components/subprocedure/TextSubProcedure.js","components/subprocedure/SubProcedure.js","components/subprocedure/SubProcedureList.js","components/procedure/Procedure.js","services/differentials/differentialGroupsUnderCases.js","components/differential/Differential.js","components/differential/DifferentialList.js","services/differentials/differentials.js","components/differential/AddDifferentialForm.js","components/differential/SelectDifferentialForm.js","components/differential/NewDifferential.js","components/differential/differentialGroup/DifferentialGroup.js","components/differential/differentialGroup/DifferentialGroupList.js","services/differentials/differentialGroups.js","components/differential/differentialGroup/AddDifferentialGroupForm.js","components/differential/differentialGroup/SelectDifferentialGroupForm.js","components/differential/differentialGroup/NewDifferentialGroup.js","components/differential/Differentials.js","components/case/HideCase.js","components/case/UpdateCaseTitle.js","components/anamnesis/UpdateAnamnesis.js","components/anamnesis/Anamnesis.js","components/files/FileBank.js","components/navigation/Routing.js","App.js","serviceWorker.js","index.js"],"names":["i18n","use","LanguageDetector","init","initReactI18next","fallbackLng","lng","localStorage","getItem","resources","fi","translations","require","en","ns","defaultNS","languages","Navigationbar","user","admin","t","useTranslation","changeLanguage","language","Navbar","collapseOnSelect","expand","variant","sticky","Brand","as","Link","to","Toggle","Collapse","id","Nav","className","NavDropdown","title","Item","onClick","eventKey","NavLink","href","token","getConfig","headers","Authorization","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Sidebar","newCaseForm","addCase","newCaseSchema","Yup","shape","min","max","required","anamnesis","hidden","initialValues","validationSchema","onSubmit","values","handleSubmit","handleChange","errors","Form","noValidate","Group","md","controlId","Label","Control","type","name","value","onChange","isInvalid","Feedback","rows","Check","label","Button","setError","message","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","setSuccess","success","MessageBanner","newestOnTop","rtl","pauseOnFocusLoss","NewCase","useState","show","setShow","toggleVisibility","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","NewCaseForm","newCase","service","catch","console","log","diffGroupCaseId","caseId","copyCase","caseToBeCopied","createProcedures","createDifferentials","oldCaseId","newCopyId","size","event","preventDefault","caseObject","caseService","copy","ducService","result","pucService","removeCase","caseToBeRemoved","deleteCase","CaseCard","c","Card","style","width","cursor","Text","Footer","ProgressBar","now","CopyCase","copyId","i","length","description","differentialId","procedureId","priority","RemoveCase","window","confirm","Search","newSearch","searchCases","htmlFor","Frontpage","cases","setNewSearch","casesToShow","filter","toLowerCase","includes","target","Row","xs","map","Col","HowToPlay","Profile","Users","Case","useParams","ButtonGroup","newProcedureForm","addProcedure","newProcedureSchema","newProcedure","NewProcedureForm","procedureObject","procedureUnderCaseObject","serviceUnderCases","EditProcedure","procedure","editProcedureFunc","proceduresUnderCase","setNewPriority","setNewProcedureTitle","history","useHistory","e","serviceUnderProcedure","push","editProcedure","defaultValue","DragNDropList","proceduresHook","handleDragStart","handleDragEnd","handleDragEnter","submitForm","p","index","onDragStart","onDragEnd","onDragEnter","ProcedureList","draggingItem","useRef","dragOverItem","setProceduresHook","procedureToEdit","setProcedureToEdit","useEffect","procedureList","list","procedures","sort","a","b","current","givenProcedure","dragDropEditProcedure","listCopy","draggingItemContent","splice","handleEditId","Procedures","NewProcedure","AddTextSubProcedure","handleSubProcedureAdd","newTextSubProcedureSchema","text","placeholder","role","NewTextSubProcedure","proceduresId","alertMessage","setAlertMessage","errorMessage","setErrorMessage","setTextSubProcedures","React","initialSubs","handleTextSubProcedureAdd","cowObject","serviceText","setTimeout","handleError","Alert","Tabs","defaultActiveKey","Tab","subProcedureObject","res","subId","subProcedureId","proceduresUnderCaseProcedureCaseId","TextSubProcedure","Accordion","SubProcedure","d","textSubProcedures","SubProcedureList","listedSubProcedures","setListedSubProcedures","subProcedures","initialSubProcedures","Procedure","showWhenVisible","display","Differential","DifferentialList","caseDifferentials","setCaseDifferentials","initialDifferentials","AddDifferentialForm","addDifferential","newDifferentialSchema","SelectDifferentialForm","differentials","selectDifferential","selectedDiff","setSelectedDiff","setDescription","differential","labelKey","options","selected","NewDifferential","setDifferentials","handleDifferentialSelection","ducObject","differentialObject","DifferentialGroup","DifferentialGroupList","caseDifferentialGroups","setCaseDifferentialGroups","initialDifferentialGroups","AddDifferentialGroupForm","addDifferentialGroup","newDifferentialGroupSchema","SelectDifferentialGroupForm","differentialGroups","selectDifferentialGroup","differentialGroup","differentialGroupId","NewDifferentialGroup","setDifferentialGroups","handleDifferentialGroupSelection","differentialGroupObject","Differentials","HideCase","hideCase","newHidden","setNewHidden","UpdateCaseTitle","updateCaseTitle","setTitle","caseSchema","UpdateAnamnesis","updateAnamnesis","setAnamnesis","Anamnesis","find","Number","setCurrentCase","handleCaseUpdate","updatedCase","FileBank","Routing","path","App","setUser","setAdmin","setCases","newToken","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b8f7195.chunk.js","sourcesContent":["/* eslint-disable linebreak-style */\n/* istanbul ignore file */\n/* eslint-disable linebreak-style */\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n// eslint-disable-next-line import/no-unresolved\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n.use(LanguageDetector).init();\n\ni18n.use(initReactI18next).init({\n  fallbackLng: 'fi',\n\n  // eslint-disable-next-line no-undef\n  lng: localStorage.getItem('i18nextLng') || 'fi',\n  resources: {\n    fi: {\n      // eslint-disable-next-line global-require\n      translations: require('./locales/fi/translations.json'),\n    },\n    en: {\n      // eslint-disable-next-line global-require\n      translations: require('./locales/en/translations.json'),\n    },\n  },\n  ns: ['translations'],\n  defaultNS: 'translations',\n});\n\ni18n.languages = ['fi', 'en'];\n\nexport default i18n;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Navbar,\n  Nav,\n  NavLink,\n  NavDropdown,\n} from 'react-bootstrap';\n\n// Import translations\nimport { useTranslation } from 'react-i18next';\nimport i18n from '../../i18n/config';\n\nconst Navigationbar = ({\n  user, admin,\n}) => {\n  const { t } = useTranslation();\n\n  /* istanbul ignore next */\n  const changeLanguage = (language) => {\n    i18n.changeLanguage(language);\n  };\n\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\" sticky=\"top\">\n      <Navbar.Brand as={Link} to=\"/\">{t('nameOfTheGame')}</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <NavDropdown title={t('selectLanguage')} id=\"selectLanguage\">\n            <NavDropdown.Item onClick={() => changeLanguage('fi')} eventKey=\"fi\">{t('languageFinnish')}</NavDropdown.Item>\n            <NavDropdown.Item onClick={() => changeLanguage('en')} eventKey=\"en\">{t('languageEnglish')}</NavDropdown.Item>\n          </NavDropdown>\n          { admin && (\n          <Nav.Item>\n            <NavLink as={Link} to=\"/users\">{t('userInformation')}</NavLink>\n          </Nav.Item>\n          )}\n          { admin && (\n          <Nav.Item>\n            <NavLink as={Link} to=\"/files\">{t('fileBank')}</NavLink>\n          </Nav.Item>\n          )}\n          <Nav.Item>\n            <NavLink as={Link} to=\"/howtoplay\">{t('howToPlay')}</NavLink>\n          </Nav.Item>\n          { user && (\n          <Nav.Item>\n            <NavLink as={Link} to=\"/profile\">{t('userProfile')}</NavLink>\n          </Nav.Item>\n          )}\n          <Nav.Item>\n            <NavLink href=\"https://taudinpurkauspeli-taudinpurkauspeli2021.apps.ocp-prod-0.k8s.it.helsinki.fi/Shibboleth.sso/Logout\">{t('logOut')}</NavLink>\n          </Nav.Item>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default Navigationbar;\n","let token = null;\n\nexport const setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nexport const getConfig = () => ({ headers: { Authorization: token } });\n","/* eslint-disable linebreak-style */\nimport axios from 'axios';\nimport { getConfig } from '../utils/Helper';\n\nconst baseUrl = '/api/cases';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject, getConfig());\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`, getConfig());\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove,\n};\n","/* eslint-disable linebreak-style */\nimport React from 'react';\n\nconst Sidebar = () => (\n  <div id=\"sidebar\" />\n);\n\nexport default Sidebar;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Button } from 'react-bootstrap';\n\nconst newCaseForm = ({ addCase }) => {\n  const { t } = useTranslation();\n\n  const newCaseSchema = Yup.object().shape({\n    title: Yup.string()\n      .min(2, t('warningShort'))\n      .max(999, t('warningLong'))\n      .required(t('warningRequired')),\n    anamnesis: Yup.string(),\n    hidden: Yup.bool(),\n  });\n\n  const handleCaseAdd = (values) => {\n    addCase({\n      title: values.title,\n      anamnesis: values.anamnesis,\n      hidden: values.hidden,\n    });\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        title: '',\n        anamnesis: '',\n        hidden: false,\n      }}\n      validationSchema={newCaseSchema}\n      onSubmit={handleCaseAdd}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        values,\n        errors,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group md=\"6\" controlId=\"title\">\n            <Form.Label>{t('caseTitle')}</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"title\"\n              value={values.title}\n              onChange={handleChange}\n              isInvalid={!!errors.title}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.title}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"anamnesis\">\n            <Form.Label>{t('caseAnamnesis')}</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              name=\"anamnesis\"\n              rows={3}\n              value={values.anamnesis}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"hidden\">\n            <Form.Check\n              required\n              name=\"hidden\"\n              label={t('hideCase')}\n              value={values.hidden}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Button id=\"submit-case\" type=\"submit\">{t('buttonSubmitNewCase')}</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default newCaseForm;\n","/* istanbul ignore file */\n/* eslint-disable linebreak-style */\n/* eslint-disable no-undef */\nimport React from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst MessageBanner = () => (\n  <ToastContainer\n    position=\"top-center\"\n    autoClose={3000}\n    hideProgressBar\n    newestOnTop={false}\n    closeOnClick\n    rtl={false}\n    pauseOnFocusLoss={false}\n    draggable={false}\n    pauseOnHover\n  />\n);\n\nexport const setError = (message) => {\n  toast.error(message, {\n    position: 'top-center',\n    autoClose: 3000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: false,\n    draggable: false,\n    progress: undefined,\n  });\n};\n\nexport const setSuccess = (message) => {\n  toast.success(message, {\n    position: 'top-center',\n    autoClose: 3000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: false,\n    draggable: false,\n    progress: undefined,\n  });\n};\n\nexport default MessageBanner;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button, Modal,\n} from 'react-bootstrap';\n\nimport service from '../../services/cases';\nimport NewCaseForm from './NewCaseForm';\nimport { setSuccess, setError } from '../../utils/MessageBanner';\n\nconst NewCase = () => {\n  const { t } = useTranslation();\n\n  const [show, setShow] = useState(false);\n\n  const toggleVisibility = () => setShow(!show);\n\n  /* istanbul ignore next */\n  const handleCaseAdd = (newCase) => {\n    service.create(newCase)\n      .then(() => {\n        toggleVisibility();\n        setSuccess(t('caseAddSuccess'));\n      })\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n        toggleVisibility();\n        setError(t('caseAddError'));\n      });\n  };\n\n  return (\n    <div>\n      <Button variant=\"primary\" onClick={toggleVisibility} id=\"addNew\">\n        {t('buttonNewCase')}\n      </Button>\n      <Modal\n        show={show}\n        onHide={toggleVisibility}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{t('addCase')}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <NewCaseForm addCase={handleCaseAdd} />\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n\nexport default NewCase;\n","/* eslint-disable linebreak-style */\nimport axios from 'axios';\nimport { getConfig } from '../../utils/Helper';\n\nconst baseUrl = '/api/differentialsUnderCases';\n\nconst getAll = (diffGroupCaseId) => {\n  const request = axios.get(`${baseUrl}/${diffGroupCaseId}`, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject, getConfig());\n\nexport default {\n  getAll,\n  create,\n  update,\n};\n","/* eslint-disable linebreak-style */\nimport axios from 'axios';\nimport { getConfig } from '../../utils/Helper';\n\nconst baseUrl = '/api/proceduresUnderCases';\n\nconst getAll = (caseId) => {\n  const request = axios.get(`${baseUrl}/${caseId}`, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject, getConfig());\n\nexport default {\n  getAll,\n  create,\n  update,\n};\n","/* eslint-disable linebreak-style */\n/* eslint-disable react/react-in-jsx-scope */\nimport { Button } from 'react-bootstrap';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport caseService from '../../services/cases';\nimport ducService from '../../services/differentials/differentialsUnderCases';\nimport pucService from '../../services/procedures/proceduresUnderCase';\n\nconst copyCase = ({\n  caseToBeCopied, createProcedures, createDifferentials,\n}) => {\n  const { t } = useTranslation();\n  const oldCaseId = caseToBeCopied.id;\n  // eslint-disable-next-line no-unused-vars\n  let newCopyId = 0;\n\n  /* istanbul ignore next */\n  const handleCopy = (event) => {\n    event.preventDefault();\n    const caseObject = ({\n      title: caseToBeCopied.title,\n      anamnesis: caseToBeCopied.anamnesis,\n      hidden: caseToBeCopied.hidden,\n    });\n    caseService.create(caseObject)\n      .then((copy) => {\n        newCopyId = copy.id;\n      })\n      .then(() => {\n        ducService.getAll(oldCaseId)\n          .then((result) => {\n            createDifferentials(newCopyId, result);\n          });\n      })\n      .then(() => {\n        pucService.getAll(oldCaseId)\n          .then((result) => {\n            createProcedures(newCopyId, result);\n          });\n      });\n  };\n\n  return (\n    <Button className=\"copyButton\" size=\"sm\" variant=\"warning\" onClick={handleCopy}>{t('copy')}</Button>\n  );\n};\n\nexport default copyCase;\n","/* eslint-disable linebreak-style */\n/* eslint-disable react/react-in-jsx-scope */\nimport { Button } from 'react-bootstrap';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst removeCase = ({ caseToBeRemoved, deleteCase }) => {\n  const { t } = useTranslation();\n\n  const handleDelete = (event) => {\n    event.preventDefault();\n    deleteCase(caseToBeRemoved.id);\n  };\n\n  return (\n    <Button className=\"removeButton\" size=\"sm\" variant=\"danger\" onClick={handleDelete}>{t('buttonRemove')}</Button>\n  );\n};\n\nexport default removeCase;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Card,\n  Button,\n  ProgressBar,\n} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport CopyCase from './CopyCase';\nimport RemoveCase from './RemoveCase';\nimport { setError, setSuccess } from '../../utils/MessageBanner';\nimport caseService from '../../services/cases';\nimport ducService from '../../services/differentials/differentialsUnderCases';\nimport pucService from '../../services/procedures/proceduresUnderCase';\n\nconst CaseCard = ({ c, admin }) => {\n  const { t } = useTranslation();\n\n  /* istanbul ignore next */\n  const createDifferentials = (copyId, result) => {\n    for (let i = 0; i < result.length; i += 1) {\n      const { id, description } = result[i];\n      const object = {\n        caseId: copyId,\n        differentialId: id,\n        description,\n      };\n      ducService.create(object);\n    }\n  };\n\n  /* istanbul ignore next */\n  const createProcedures = (copyId, result) => {\n    for (let i = 0; i < result.length; i += 1) {\n      const { procedureId, priority } = result[i];\n      const object = {\n        caseId: copyId,\n        procedureId,\n        priority,\n      };\n      pucService.create(object);\n    }\n  };\n\n  /* istanbull ignore next */\n  const handleCaseRemove = () => {\n    // eslint-disable-next-line no-alert\n    const confirmBox = window.confirm(t('deleteCaseConfirmation'));\n    if (confirmBox === true) {\n      caseService.remove(c.id)\n        .then(() => setSuccess(t('deleteCaseSuccess')))\n        .catch(() => setError(t('deleteCaseError')));\n    }\n  };\n\n  return (\n    <div>\n      <Card as={Link} to={`/cases/${c.id}`} style={{ width: '20rem', cursor: 'pointer' }} className=\"caseCard\">\n        <Card.Body>\n          <Card.Title>{c.title}</Card.Title>\n          <Card.Text>{c.anamnesis}</Card.Text>\n        </Card.Body>\n        <Card.Footer>\n          <ProgressBar className=\"progsbar\" variant=\"success\" now={25} label={`${25}%`} />\n        </Card.Footer>\n      </Card>\n\n      { admin && (\n        <div className=\"cardButtons\">\n          <Button as={Link} to={`/cases/${c.id}`} className=\"editButton\" size=\"sm\">{t('buttonEdit')}</Button>\n          <CopyCase\n            caseToBeCopied={c}\n            createDifferentials={createDifferentials}\n            createProcedures={createProcedures}\n          />\n          <RemoveCase caseToBeRemoved={c} deleteCase={handleCaseRemove} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CaseCard;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst Search = ({ newSearch, searchCases }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div>\n      <label htmlFor=\"search\">\n        {t('searchByTitle')}\n        &nbsp;\n        <input\n          id=\"search\"\n          value={newSearch}\n          onChange={searchCases}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Search;\n","/* eslint-disable linebreak-style */\n/* eslint-disable array-callback-return */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Col,\n  Row,\n} from 'react-bootstrap';\n\nimport NewCase from '../case/NewCase';\nimport CaseCard from '../case/CaseCard';\nimport Search from './Search';\n\nconst Frontpage = ({ cases, admin }) => {\n  const { t } = useTranslation();\n  const [newSearch, setNewSearch] = useState('');\n\n  const searchCases = (event) => {\n    setNewSearch(event.target.value);\n  };\n\n  const casesToShow = !newSearch\n    ? cases : cases.filter((c) => c.title.toLowerCase().includes(newSearch.toLowerCase()));\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('frontpageTitle')}</h2>\n      <p>{t('frontpageText')}</p>\n      <Search newSearch={newSearch} searchCases={searchCases} />\n      <br />\n      {admin && (\n        <div>\n          <NewCase />\n          <br />\n          <h3>{t('caseHidden')}</h3>\n          <hr />\n        </div>\n      )}\n      <Row xs=\"auto\" md=\"auto\" className=\"g-4\">\n        {admin && (\n          casesToShow.filter((c) => c.hidden).map((c) => (\n            <Col key={c.id}>\n              <CaseCard c={c} admin={admin} />\n            </Col>\n          ))\n        )}\n      </Row>\n      <br />\n      <h3>{t('casePlayable')}</h3>\n      <hr />\n      <Row xs=\"auto\" md=\"auto\" className=\"g-4\">\n        {casesToShow.filter((c) => !c.hidden).map((c) => (\n          <Col key={c.id}>\n            <CaseCard c={c} admin={admin} />\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\nexport default Frontpage;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst HowToPlay = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('howToPlay')}</h2>\n      <p>{t('gameInstructions')}</p>\n    </div>\n  );\n};\n\nexport default HowToPlay;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst Profile = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('userProfile')}</h2>\n    </div>\n  );\n};\n\nexport default Profile;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst Users = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('userInformation')}</h2>\n    </div>\n  );\n};\n\nexport default Users;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Link, useParams,\n} from 'react-router-dom';\nimport { Button, ButtonGroup } from 'react-bootstrap';\n\nconst Case = () => {\n  const { t } = useTranslation();\n  const { id } = useParams();\n  const baseUrl = `/cases/${id}`;\n\n  return (\n\n    <div id=\"wrapper\">\n      <ButtonGroup>\n        <Button as={Link} to={baseUrl}>{t('caseAnamnesis')}</Button>\n        <Button as={Link} to={`${baseUrl}/procedures`}>{t('caseProcedures')}</Button>\n        <Button as={Link} to={`${baseUrl}/differentials`}>{t('caseDifferentials')}</Button>\n      </ButtonGroup>\n    </div>\n\n  );\n};\n\nexport default Case;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Button } from 'react-bootstrap';\n\nconst newProcedureForm = ({ addProcedure }) => {\n  const { t } = useTranslation();\n\n  const newProcedureSchema = Yup.object().shape({\n    title: Yup.string()\n      .min(2, t('warningShort'))\n      .max(999, t('warningLong'))\n      .required(t('warningRequired')),\n  });\n\n  const handleProcedureAdd = (values) => {\n    addProcedure({\n      title: values.title,\n      anamnesis: values.anamnesis,\n      hidden: values.hidden,\n    });\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        title: '',\n      }}\n      validationSchema={newProcedureSchema}\n      onSubmit={handleProcedureAdd}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        values,\n        errors,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group md=\"6\" controlId=\"title\">\n            <Form.Label>{t('procedureTitle')}</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"title\"\n              value={values.title}\n              onChange={handleChange}\n              isInvalid={!!errors.title}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.title}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Button type=\"submit\">{t('buttonSubmitNewProcedure')}</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default newProcedureForm;\n","/* eslint-disable linebreak-style */\nimport axios from 'axios';\nimport { getConfig } from '../../utils/Helper';\n\nconst baseUrl = '/api/procedures';\n\nconst getAll = (id) => {\n  const request = axios.get(`${baseUrl}/${id}`, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject, getConfig());\n\nexport default {\n  create,\n  getAll,\n  update,\n};\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button, Modal,\n} from 'react-bootstrap';\n\nimport NewProcedureForm from './NewProcedureForm';\nimport service from '../../services/procedures/procedures';\nimport serviceUnderCases from '../../services/procedures/proceduresUnderCase';\nimport { setSuccess, setError } from '../../utils/MessageBanner';\n\n// eslint-disable-next-line no-unused-vars\nconst newProcedure = ({ caseId }) => {\n  /* istanbul ignore next */\n  const { t } = useTranslation();\n\n  const [show, setShow] = useState(false);\n\n  const toggleVisibility = () => setShow(!show);\n\n  /* istanbul ignore next */\n  const handleProcedureAdd = (procedureObject) => {\n    service.create(procedureObject)\n      .then((data) => {\n        toggleVisibility();\n        setSuccess(t('procedureAddSuccess'));\n        const procedureUnderCaseObject = ({\n          caseId,\n          procedureId: data.id,\n          priority: 1,\n        });\n\n        serviceUnderCases.create(procedureUnderCaseObject);\n      })\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n        toggleVisibility();\n        setError(t('procedureAddError'));\n      });\n  };\n\n  return (\n    <div>\n      <h2>{t('addProcedure')}</h2>\n\n      <Button variant=\"primary\" onClick={toggleVisibility} id=\"addNew\">\n        {t('buttonNewProcedure')}\n      </Button>\n      <Modal\n        show={show}\n        onHide={toggleVisibility}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{t('addProcedure')}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <NewProcedureForm addProcedure={handleProcedureAdd} />\n        </Modal.Body>\n      </Modal>\n\n    </div>\n  );\n};\n\nexport default newProcedure;\n","/* istanbul ignore file */\n/* eslint-disable linebreak-style */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-unused-expressions */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory, Link } from 'react-router-dom';\nimport {\n  Button,\n} from 'react-bootstrap';\nimport service from '../../services/procedures/procedures';\nimport serviceUnderProcedure from '../../services/procedures/proceduresUnderCase';\n\nconst EditProcedure = ({ procedure, caseId, editProcedureFunc }) => {\n  /* istanbul ignore next */\n  const [newPriority, setNewPriority] = useState(procedure.proceduresUnderCase.priority);\n  /* istanbul ignore next */\n  const [newProcedureTitle, setNewProcedureTitle] = useState(procedure.title);\n  /* istanbul ignore next */\n  const { t } = useTranslation();\n  /* istanbul ignore next */\n  const history = useHistory();\n  const baseUrl = `/cases/${caseId}`;\n\n  /* istanbul ignore next */\n  const handlePriorityChange = (event) => {\n    setNewPriority(event.target.value);\n  };\n\n  /* istanbul ignore next */\n  const handleTitleChange = (event) => {\n    setNewProcedureTitle(event.target.value);\n  };\n\n  /* istanbul ignore next */\n  const editProcedure = (event) => {\n    event.preventDefault();\n    setNewProcedureTitle(event.target[0].value);\n    setNewPriority(event.target[1].value);\n    // eslint-disable-next-line no-param-reassign\n    const procedureUnderCaseObject = ({\n      caseId: procedure.proceduresUnderCase.caseId,\n      procedureId: procedure.proceduresUnderCase.procedureId,\n      priority: event.target[1].value,\n    });\n\n    const procedureObject = ({\n      title: event.target[0].value,\n    });\n\n    if (editProcedureFunc != null) {\n      editProcedureFunc(procedureUnderCaseObject);\n    }\n    service.update(procedure.id, procedureObject);\n    serviceUnderProcedure.update(procedure.id, procedureUnderCaseObject);\n    if (editProcedureFunc == null) {\n      history.push('/');\n    }\n  };\n\n  return (\n    <div id=\"wrapper\" key={procedure.proceduresUnderCase.priority}>\n      <h2>{t('editProcedure')}</h2>\n      <Button as={Link} to={`${baseUrl}/procedure/${procedure.id}`}>{t('procedure')}</Button>\n      <form onSubmit={(e) => editProcedure(e)}>\n        <p>\n          <label htmlFor=\"title\">\n            {t('procedureTitle')}\n          </label>\n          <br />\n          <input\n            id=\"title\"\n            type=\"text\"\n            defaultValue={procedure.title}\n            onChange={handleTitleChange}\n          />\n        </p>\n        <p>\n          <label htmlFor=\"priority\">\n            {t('procedurePriority')}\n          </label>\n          <br />\n          <input\n            id=\"priority\"\n            type=\"integer\"\n            onChange={handlePriorityChange}\n            defaultValue={procedure.proceduresUnderCase.priority}\n          />\n        </p>\n        <p>\n          <input type=\"submit\" id=\"submit\" value={t('buttonEdit')} />\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default EditProcedure;\n","/* istanbul ignore file */\n/* eslint-disable linebreak-style */\n/* eslint-disable no-restricted-globals */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/jsx-one-expression-per-line */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport service from '../../services/procedures/procedures';\nimport EditProcedure from './EditProcedure';\nimport serviceUnderProcedure from '../../services/procedures/proceduresUnderCase';\n\nconst DragNDropList = ({\n  proceduresHook, handleDragStart, handleDragEnd, handleDragEnter, t, submitForm,\n}) => (\n  proceduresHook\n    && proceduresHook.map((p, index) => (\n      <h4\n        onDragStart={(e) => handleDragStart(e, index)}\n        onDragEnd={() => handleDragEnd()}\n        onDragEnter={(e) => handleDragEnter(e, index)}\n        key={index}\n        draggable\n      >\n        <div>\n          <Button className=\"procedureButton\"> {p.proceduresUnderCase.priority} {p.title} </Button>\n          <form onSubmit={(e) => submitForm(p, e)} className=\"handleEdits\">\n            <Button type=\"submit\" className=\"editButton\" key={index} size=\"sm\">{t('buttonEdit') }</Button>\n          </form>\n        </div>\n      </h4>\n    ))\n);\n\nconst ProcedureList = ({ id }) => {\n  /* istanbul ignore next */\n  const { t } = useTranslation();\n  const draggingItem = useRef();\n  const dragOverItem = useRef();\n  const [proceduresHook, setProceduresHook] = useState([]);\n  const [procedureToEdit, setProcedureToEdit] = useState(null);\n\n  useEffect(() => {\n    service\n      .getAll(id)\n      .then((procedureList) => {\n        const list = procedureList[0].procedures;\n        list.sort((a, b) => a.proceduresUnderCase.priority - b.proceduresUnderCase.priority);\n        setProceduresHook(list);\n      });\n  }, []);\n\n  /* istanbul ignore next */\n  const handleEditId = (p) => {\n    setProcedureToEdit(p);\n  };\n\n  /* istanbul ignore next */\n  const submitForm = (p, e) => {\n    e.preventDefault();\n    handleEditId(p);\n  };\n\n  /* istanbul ignore next */\n  const handleDragStart = (e, position) => {\n    draggingItem.current = position;\n  };\n\n  /* istanbul ignore next */\n  const handleDragEnter = (e, position) => {\n    dragOverItem.current = position;\n    const listCopy = [...proceduresHook];\n    const draggingItemContent = listCopy[draggingItem.current];\n    listCopy.splice(draggingItem.current, 1);\n    listCopy.splice(dragOverItem.current, 0, draggingItemContent);\n    draggingItem.current = dragOverItem.current;\n    dragOverItem.current = null;\n    setProceduresHook(listCopy);\n  };\n\n  const dragDropEditProcedure = (givenProcedure, index) => {\n    // eslint-disable-next-line no-param-reassign\n    const procedureUnderCaseObject = ({\n      caseId: givenProcedure.proceduresUnderCase.caseId,\n      procedureId: givenProcedure.proceduresUnderCase.procedureId,\n      priority: index + 1,\n    });\n    // eslint-disable-next-line max-len\n    serviceUnderProcedure.update(givenProcedure.proceduresUnderCase.procedureId, procedureUnderCaseObject);\n  };\n\n  /* istanbul ignore next */\n  const handleDragEnd = () => {\n    proceduresHook.map((p, index) => (\n      dragDropEditProcedure(p, index)\n    ));\n  };\n\n  return (\n    <>\n      <DragNDropList\n        proceduresHook={proceduresHook}\n        handleDragStart={handleDragStart}\n        handleDragEnd={handleDragEnd}\n        handleDragEnter={handleDragEnter}\n        t={t}\n        submitForm={submitForm}\n      />\n      { procedureToEdit ? (\n        <EditProcedure procedure={procedureToEdit} caseId={id} />\n      ) : (\n        <p> </p>\n      )}\n    </>\n  );\n};\n\nexport default ProcedureList;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport NewProcedure from './NewProcedure';\nimport ProcedureList from './ProcedureList';\n\nconst Procedures = ({ admin }) => {\n  const { id } = useParams();\n\n  return (\n    <div id=\"wrapper\">\n      { admin && (\n        <NewProcedure caseId={id} />\n      )}\n      <ProcedureList id={id} />\n    </div>\n  );\n};\n\nexport default Procedures;\n","/* eslint-disable linebreak-style */\nimport axios from 'axios';\nimport { getConfig } from '../../utils/Helper';\n\nconst baseUrl = '/api/subProcedures';\n\nconst getAllId = (id) => {\n  const request = axios.get(`${baseUrl}/${id}`, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject, getConfig());\n\nexport default {\n  create,\n  getAllId,\n  getAll,\n  update,\n};\n","/* eslint-disable linebreak-style */\nimport axios from 'axios';\nimport { getConfig } from '../../utils/Helper';\n\nconst baseUrl = '/api/textSubProcedures';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject, getConfig());\n\nexport default {\n  getAll,\n  create,\n  update,\n};\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Form, Button,\n} from 'react-bootstrap';\n\nconst AddTextSubProcedure = ({ handleSubProcedureAdd }) => {\n  const { t } = useTranslation();\n\n  const newTextSubProcedureSchema = Yup.object().shape({\n    title: Yup.string()\n      .min(2, t('warningShort'))\n      .max(999, t('warningLong'))\n      .required(t('warningRequired')),\n    priority: Yup.string(),\n    text: Yup.string(),\n  });\n\n  const innerHandleSubProcedureAdd = (values) => {\n    handleSubProcedureAdd({\n      priority: values.priority,\n      type: 'TEXT',\n      title: values.title,\n      text: values.text,\n    });\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        priority: '',\n        title: '',\n        text: '',\n\n      }}\n      validationSchema={newTextSubProcedureSchema}\n      onSubmit={innerHandleSubProcedureAdd}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        values,\n        errors,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group md=\"6\" controlId=\"title\">\n            <Form.Label>{t('addTextSubProcedure')}</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"title\"\n              placeholder={t('write')}\n              value={values.title}\n              onChange={handleChange}\n              isInvalid={!!errors.title}\n            />\n            <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\n              {errors.title}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group md=\"6\" controlId=\"priority\">\n            <Form.Label>{t('step')}</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"priority\"\n              placeholder={1}\n              value={values.priority}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"text\">\n            <Form.Label>{t('textToAdd')}</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              name=\"text\"\n              rows={10}\n              value={values.text}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Button type=\"submit\">{t('buttonSubmit')}</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddTextSubProcedure;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button, Modal, Tabs, Tab, Alert,\n} from 'react-bootstrap';\nimport service from '../../services/procedures/subProcedures';\nimport serviceText from '../../services/procedures/textSubProcedures';\nimport AddTextSubProcedure from './AddTextSubProcedure';\n\nconst NewTextSubProcedure = ({ proceduresId }) => {\n  const { t } = useTranslation();\n\n  const [alertMessage, setAlertMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [show, setShow] = useState(false);\n  const [textSubProcedures, setTextSubProcedures] = useState([]);\n\n  React.useEffect(() => {\n    service.getAll()\n      .then((initialSubs) => {\n        setTextSubProcedures(initialSubs);\n      })\n      .catch((error) => {\n        // eslint-disable-next-line\n        console.log(error);\n      });\n  }, []);\n\n  const toggleVisibility = () => setShow(!show);\n\n  const handleSuccess = () => {\n    toggleVisibility();\n    setAlertMessage(t('textSubProcedureUpdateSuccess'));\n    setTimeout(() => {\n      setAlertMessage(null);\n    }, 3000);\n  };\n\n  const handleError = (error) => {\n    // eslint-disable-next-line no-console\n    console.log(error);\n    toggleVisibility();\n    setErrorMessage(t('textSubProcedureUpdateError'));\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 3000);\n  };\n\n  const handleTextSubProcedureAdd = (cowObject) => {\n    serviceText.create(cowObject)\n      .then(() => handleSuccess())\n      .catch((error) => handleError(error));\n  };\n\n  const handleSubProcedureAdd = (subProcedureObject) => {\n    service.create({ priority: subProcedureObject.priority, type: subProcedureObject.type })\n      .then((res) => {\n        const subId = res.id;\n        handleTextSubProcedureAdd({\n          subProcedureId: subId,\n          proceduresUnderCaseProcedureCaseId: proceduresId,\n          title: subProcedureObject.title,\n          text: subProcedureObject.text,\n        });\n      });\n  };\n\n  return (\n    <div>\n      { alertMessage !== null && (\n      <Alert variant=\"success\">{alertMessage}</Alert>\n      )}\n      { errorMessage !== null && (\n      <Alert variant=\"danger\">{errorMessage}</Alert>\n      )}\n      <Button variant=\"primary\" onClick={toggleVisibility} id=\"addNew\">\n        {t('buttonAddNewText')}\n      </Button>\n      <Modal\n        show={show}\n        onHide={toggleVisibility}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{t('addTextSubProcedure')}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Tabs defaultActiveKey=\"add\" id=\"textSubProcedure\" className=\"mb-3\">\n            <Tab eventKey=\"add\" title={t('addNewTextSubProcedure2')}>\n              <AddTextSubProcedure handleSubProcedureAdd={handleSubProcedureAdd} />\n            </Tab>\n          </Tabs>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n\nexport default NewTextSubProcedure;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { Accordion, Card } from 'react-bootstrap';\n\nconst TextSubProcedure = ({ id, title, text }) => (\n  <Card>\n    <Accordion.Toggle as={Card.Header} eventKey={id}>\n      {title}\n    </Accordion.Toggle>\n    <Accordion.Collapse eventKey={id}>\n      <Card.Body>{text}</Card.Body>\n    </Accordion.Collapse>\n  </Card>\n);\n\nexport default TextSubProcedure;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport TextSubProcedure from './TextSubProcedure';\n\n// eslint-disable-next-line consistent-return\nconst SubProcedure = ({ d }) => {\n  if (d.type === 'TEXT') {\n    return (\n      <TextSubProcedure\n        id={d.id}\n        title={d.textSubProcedures.title}\n        text={d.textSubProcedures.text}\n      />\n    );\n  }\n};\n\nexport default SubProcedure;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { Accordion } from 'react-bootstrap';\nimport subProcedures from '../../services/procedures/subProcedures';\nimport SubProcedure from './SubProcedure';\n\nconst SubProcedureList = ({ proceduresId }) => {\n  // eslint-disable-next-line no-unused-vars\n  const [listedSubProcedures, setListedSubProcedures] = useState([]);\n\n  React.useEffect(() => {\n    subProcedures.getAllId(proceduresId)\n      .then((initialSubProcedures) => {\n        const list = initialSubProcedures[0].subProcedures;\n        list.sort((a, b) => a.priority - b.priority);\n        setListedSubProcedures(list);\n      })\n      .catch((error) => {\n        // eslint-disable-next-line\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <Accordion>\n      {listedSubProcedures.map((d) => (\n        <SubProcedure d={d} />\n      ))}\n    </Accordion>\n  );\n};\n\nexport default SubProcedureList;\n","/* eslint-disable linebreak-style */\n/* eslint-disable array-callback-return */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  useParams,\n} from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n/* import SubProcedureList from '../subprocedure/SubProcedureList'; */\nimport NewTextSubProcedure from '../subprocedure/NewTextSubProcedure';\nimport SubProcedureList from '../subprocedure/SubProcedureList';\n\n// eslint-disable-next-line no-unused-vars\nconst Procedure = ({ admin, caseId }) => {\n  const { t } = useTranslation();\n  const { id } = useParams();\n  const [show, setShow] = useState(false);\n\n  /* const hideWhenVisible = { display: show ? 'none' : '' }; */\n  const showWhenVisible = { display: show ? '' : 'none' };\n\n  return (\n\n    <div id=\"wrapper\">\n      <h2>\n        {t('subProcedures')}\n      </h2>\n      {admin && (\n        <div>\n          <Button variant=\"primary\" onClick={() => setShow(true)} id=\"addNew\">\n            {t('buttonNewSubProcedure')}\n          </Button>\n          <div style={showWhenVisible}>\n            <NewTextSubProcedure proceduresId={id} />\n            <Button variant=\"primary\" className=\"editButton\" size=\"sm\">{t('buttonAddNewQuestion')}</Button>\n            <Button variant=\"primary\" className=\"editButton\" size=\"sm\">{t('buttonAddNewMultiChoice')}</Button>\n            <Button variant=\"primary\" className=\"editButton\" size=\"sm\">{t('buttonAddFinalDiagnosis')}</Button>\n          </div>\n          <SubProcedureList proceduresId={id} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Procedure;\n","/* eslint-disable linebreak-style */\nimport axios from 'axios';\nimport { getConfig } from '../../utils/Helper';\n\nconst baseUrl = '/api/differentialGroupsUnderCases';\n\nconst getAll = (caseId) => {\n  const request = axios.get(`${baseUrl}/${caseId}`, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject, getConfig());\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n};\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { Accordion, Card } from 'react-bootstrap';\n\nconst Differential = ({ id, name, description }) => (\n  <Card>\n    <Accordion.Toggle as={Card.Header} eventKey={id} id=\"differentialName\">\n      {name}\n    </Accordion.Toggle>\n    <Accordion.Collapse eventKey={id}>\n      <Card.Body>{description}</Card.Body>\n    </Accordion.Collapse>\n  </Card>\n);\n\nexport default Differential;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { Accordion } from 'react-bootstrap';\nimport serviceUnderCases from '../../services/differentials/differentialsUnderCases';\nimport Differential from './Differential';\n\nconst DifferentialList = ({ diffGroupCaseId }) => {\n  const [caseDifferentials, setCaseDifferentials] = useState([]);\n\n  React.useEffect(() => {\n    serviceUnderCases.getAll(diffGroupCaseId)\n      .then((initialDifferentials) => {\n        setCaseDifferentials(initialDifferentials);\n      })\n      .catch((error) => {\n        /* istanbul ignore next */\n        // eslint-disable-next-line\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <Accordion>\n      {caseDifferentials.map((d) => (\n        <Differential key={d.id} id={d.id} name={d.name} description={d.description} />\n      ))}\n    </Accordion>\n  );\n};\n\nexport default DifferentialList;\n","/* eslint-disable linebreak-style */\nimport axios from 'axios';\nimport { getConfig } from '../../utils/Helper';\n\nconst baseUrl = '/api/differentials';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject, getConfig());\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`, getConfig());\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove,\n};\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Form, Button,\n} from 'react-bootstrap';\n\nconst AddDifferentialForm = ({ addDifferential }) => {\n  const { t } = useTranslation();\n\n  const newDifferentialSchema = Yup.object().shape({\n    name: Yup.string()\n      .min(2, t('warningShort'))\n      .max(999, t('warningLong'))\n      .required(t('warningRequired')),\n    description: Yup.string(),\n  });\n\n  const handleDifferentialAdd = (values) => {\n    addDifferential({\n      name: values.name,\n      description: values.description,\n    });\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        description: '',\n      }}\n      validationSchema={newDifferentialSchema}\n      onSubmit={handleDifferentialAdd}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        values,\n        errors,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group md=\"6\" controlId=\"name\">\n            <Form.Label>{t('addDifferential')}</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"name\"\n              placeholder={t('write')}\n              value={values.name}\n              onChange={handleChange}\n              isInvalid={!!errors.name}\n            />\n            <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\n              {errors.name}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"description\">\n            <Form.Label>{t('description')}</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              name=\"description\"\n              rows={3}\n              value={values.description}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Button type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddDifferentialForm;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Form, Button,\n} from 'react-bootstrap';\nimport { Typeahead } from 'react-bootstrap-typeahead';\n\nconst SelectDifferentialForm = ({ differentials, selectDifferential, diffGroupCaseId }) => {\n  const { t } = useTranslation();\n\n  const [selectedDiff, setSelectedDiff] = useState([]);\n  const [description, setDescription] = useState('');\n\n  const handleDifferentialChoose = (event) => {\n    event.preventDefault();\n    const differential = differentials.filter((d) => d.name === selectedDiff[0])[0];\n    selectDifferential({\n      diffGroupCaseId,\n      differentialId: differential.id,\n      description,\n    });\n\n    setDescription('');\n    setSelectedDiff([]);\n  };\n\n  return (\n    <Form onSubmit={handleDifferentialChoose}>\n      <Form.Group>\n        <Form.Label>{t('selectExistingDifferential')}</Form.Label>\n        <Typeahead\n          id=\"basic-typeahead-single\"\n          labelKey=\"name\"\n          options={differentials.map((d) => d.name)}\n          placeholder={t('selectDifferential')}\n          onChange={setSelectedDiff}\n          selected={selectedDiff}\n        />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"description\">\n        <Form.Label>{t('description')}</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          name=\"description\"\n          rows={3}\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n      </Form.Group>\n      <Button type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\n    </Form>\n  );\n};\n\nexport default SelectDifferentialForm;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button, Modal, Tabs, Tab,\n} from 'react-bootstrap';\nimport service from '../../services/differentials/differentials';\nimport serviceUnderCases from '../../services/differentials/differentialsUnderCases';\nimport AddDifferentialForm from './AddDifferentialForm';\nimport SelectDifferentialForm from './SelectDifferentialForm';\nimport { setSuccess, setError } from '../../utils/MessageBanner';\n\nconst NewDifferential = ({ diffGroupCaseId }) => {\n  const { t } = useTranslation();\n\n  const [show, setShow] = useState(false);\n  const [differentials, setDifferentials] = useState([]);\n\n  React.useEffect(() => {\n    service.getAll()\n      .then((initialDifferentials) => {\n        setDifferentials(initialDifferentials);\n      })\n      .catch((error) => {\n        /* istanbul ignore next */\n        // eslint-disable-next-line\n        console.log(error);\n      });\n  }, []);\n\n  const toggleVisibility = () => setShow(!show);\n\n  /* istanbul ignore next */\n  const handleDifferentialSelection = (ducObject) => {\n    serviceUnderCases.create(ducObject)\n      .then(() => {\n        toggleVisibility();\n        setSuccess(t('differentialUpdateSuccess'));\n      })\n      .catch((error) => {\n      // eslint-disable-next-line no-console\n        console.log(error);\n        toggleVisibility();\n        setError(t('differentialUpdateError'));\n      });\n  };\n\n  /* istanbul ignore next */\n  const handleDifferentialAdd = (differentialObject) => {\n    service.create({ name: differentialObject.name })\n      .then((res) => {\n        const differentialId = res[0].id;\n        handleDifferentialSelection({\n          diffGroupCaseId,\n          differentialId,\n          description: differentialObject.description,\n        });\n      });\n  };\n\n  return (\n    <div id=\"newDifferential\">\n      <Button variant=\"primary\" onClick={toggleVisibility} id=\"addNew\">\n        {t('buttonNewDifferential')}\n      </Button>\n      <Modal\n        show={show}\n        onHide={toggleVisibility}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{t('addDifferential')}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Tabs defaultActiveKey=\"select\" id=\"differentials\" className=\"mb-3\">\n            <Tab eventKey=\"select\" title={t('selectExisting')}>\n              <SelectDifferentialForm\n                differentials={differentials}\n                selectDifferential={handleDifferentialSelection}\n                diffGroupCaseId={diffGroupCaseId}\n              />\n            </Tab>\n            <Tab eventKey=\"add\" title={t('addNewDifferential2')}>\n              <AddDifferentialForm addDifferential={handleDifferentialAdd} />\n            </Tab>\n          </Tabs>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n\nexport default NewDifferential;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport DifferentialList from '../DifferentialList';\nimport NewDifferential from '../NewDifferential';\n\nconst DifferentialGroup = ({\n  diffGroupCaseId, name, admin,\n}) => (\n  <Card style={{ width: '60rem' }}>\n    <Card.Header>{name}</Card.Header>\n    <Card.Body>\n      <DifferentialList diffGroupCaseId={diffGroupCaseId} />\n      {admin && (\n        <NewDifferential diffGroupCaseId={diffGroupCaseId} />\n      )}\n    </Card.Body>\n  </Card>\n);\n\nexport default DifferentialGroup;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport serviceUnderCases from '../../../services/differentials/differentialGroupsUnderCases';\nimport DifferentialGroup from './DifferentialGroup';\n\nconst DifferentialGroupList = ({ caseId, admin }) => {\n  const [caseDifferentialGroups, setCaseDifferentialGroups] = useState([]);\n\n  React.useEffect(() => {\n    serviceUnderCases.getAll(caseId)\n      .then((initialDifferentialGroups) => {\n        setCaseDifferentialGroups(initialDifferentialGroups);\n      })\n      .catch((error) => {\n        /* istanbul ignore next */\n        // eslint-disable-next-line\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <div data-testid=\"diffGroupList\">\n      {caseDifferentialGroups.map((d) => (\n        <DifferentialGroup\n          key={d.id}\n          diffGroupCaseId={d.diffGroupCaseId}\n          name={d.name}\n          admin={admin}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default DifferentialGroupList;\n","/* eslint-disable linebreak-style */\nimport axios from 'axios';\nimport { getConfig } from '../../utils/Helper';\n\nconst baseUrl = '/api/differentialGroups';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl, getConfig());\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject, getConfig());\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n};\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Form, Button,\n} from 'react-bootstrap';\n\nconst AddDifferentialGroupForm = ({ addDifferentialGroup }) => {\n  const { t } = useTranslation();\n\n  const newDifferentialGroupSchema = Yup.object().shape({\n    name: Yup.string()\n      .min(2, t('warningShort'))\n      .max(999, t('warningLong'))\n      .required(t('warningRequired')),\n  });\n\n  const handleDifferentialGroupAdd = (values) => {\n    addDifferentialGroup({\n      name: values.name,\n    });\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n      }}\n      validationSchema={newDifferentialGroupSchema}\n      onSubmit={handleDifferentialGroupAdd}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        values,\n        errors,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group md=\"6\" controlId=\"name\">\n            <Form.Label>{t('addDifferentialGroup')}</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"name\"\n              placeholder={t('write')}\n              value={values.name}\n              onChange={handleChange}\n              isInvalid={!!errors.name}\n            />\n            <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\n              {errors.name}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Button type=\"submit\">{t('buttonSubmitNewDifferentialGroup')}</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddDifferentialGroupForm;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Form, Button,\n} from 'react-bootstrap';\nimport { Typeahead } from 'react-bootstrap-typeahead';\n\nconst SelectDifferentialGroupForm = ({ differentialGroups, selectDifferentialGroup, caseId }) => {\n  const { t } = useTranslation();\n\n  const [selectedDiff, setSelectedDiff] = useState([]);\n\n  const handleDifferentialChoose = (event) => {\n    event.preventDefault();\n    const differentialGroup = differentialGroups.filter((d) => d.name === selectedDiff[0])[0];\n    selectDifferentialGroup({\n      caseId,\n      differentialGroupId: differentialGroup.id,\n    });\n\n    setSelectedDiff([]);\n  };\n\n  return (\n    <Form onSubmit={handleDifferentialChoose}>\n      <Form.Group>\n        <Form.Label>{t('selectExistingDifferentialGroup')}</Form.Label>\n        <Typeahead\n          id=\"basic-typeahead-single\"\n          labelKey=\"name\"\n          options={differentialGroups.map((d) => d.name)}\n          placeholder={t('selectDifferentialGroup')}\n          onChange={setSelectedDiff}\n          selected={selectedDiff}\n        />\n      </Form.Group>\n      <Button type=\"submit\">{t('buttonSubmitNewDifferentialGroup')}</Button>\n    </Form>\n  );\n};\n\nexport default SelectDifferentialGroupForm;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button, Modal, Tabs, Tab,\n} from 'react-bootstrap';\n\nimport serviceUnderCases from '../../../services/differentials/differentialGroupsUnderCases';\nimport service from '../../../services/differentials/differentialGroups';\nimport AddDifferentialGroupForm from './AddDifferentialGroupForm';\nimport SelectDifferentialGroupForm from './SelectDifferentialGroupForm';\nimport { setSuccess, setError } from '../../../utils/MessageBanner';\n\nconst NewDifferentialGroup = ({ caseId }) => {\n  const { t } = useTranslation();\n\n  const [show, setShow] = useState(false);\n  const [differentialGroups, setDifferentialGroups] = useState([]);\n\n  React.useEffect(() => {\n    service.getAll()\n      .then((initialDifferentialGroups) => {\n        setDifferentialGroups(initialDifferentialGroups);\n      })\n      .catch((error) => {\n        /* istanbul ignore next */\n        // eslint-disable-next-line\n        console.log(error);\n      });\n  }, []);\n\n  const toggleVisibility = () => setShow(!show);\n\n  /* istanbul ignore next */\n  const handleDifferentialGroupSelection = (newObject) => {\n    serviceUnderCases.create(newObject)\n      .then(() => {\n        toggleVisibility();\n        setSuccess(t('differentialGroupUpdateSuccess'));\n      })\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n        toggleVisibility();\n        setError(t('differentialGroupUpdateError'));\n      });\n  };\n\n  /* istanbul ignore next */\n  const handleDifferentialGroupAdd = (differentialGroupObject) => {\n    service.create({ name: differentialGroupObject.name })\n      .then((res) => {\n        const differentialGroupId = res[0].id;\n        handleDifferentialGroupSelection({\n          caseId,\n          differentialGroupId,\n        });\n      });\n  };\n\n  return (\n    <div>\n      <Button variant=\"primary\" onClick={toggleVisibility} id=\"addNew\">\n        {t('buttonNewDifferentialGroup')}\n      </Button>\n      <Modal\n        show={show}\n        onHide={toggleVisibility}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{t('addDifferentialGroup')}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Tabs defaultActiveKey=\"select\" id=\"differentialGroups\" className=\"mb-3\">\n            <Tab eventKey=\"select\" title={t('selectExisting')}>\n              <SelectDifferentialGroupForm\n                differentialGroups={differentialGroups}\n                selectDifferentialGroup={handleDifferentialGroupSelection}\n                caseId={caseId}\n              />\n            </Tab>\n            <Tab eventKey=\"add\" title={t('addNewDifferential2')}>\n              <AddDifferentialGroupForm addDifferentialGroup={handleDifferentialGroupAdd} />\n            </Tab>\n          </Tabs>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n\nexport default NewDifferentialGroup;\n","/* eslint-disable linebreak-style */\n/* eslint-disable array-callback-return */\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n// import NewDifferential from './NewDifferential';\nimport DifferentialGroupList from './differentialGroup/DifferentialGroupList';\nimport NewDifferentialGroup from './differentialGroup/NewDifferentialGroup';\n\nconst Differentials = ({ admin }) => {\n  const { t } = useTranslation();\n  const { id } = useParams();\n\n  return (\n    <div id=\"wrapper\">\n      <h2>\n        {t('Differentials')}\n      </h2>\n      {admin && (\n        <div>\n          <NewDifferentialGroup caseId={id} />\n        </div>\n      )}\n      <DifferentialGroupList caseId={id} admin={admin} />\n    </div>\n  );\n};\n\nexport default Differentials;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst HideCase = ({ c, hideCase }) => {\n  const { t } = useTranslation();\n\n  const [newHidden, setNewHidden] = useState(c.hidden);\n\n  const handleVisibilityUpdate = (event) => {\n    event.preventDefault();\n    hideCase({\n      title: c.title,\n      anamnesis: c.anamnesis,\n      hidden: newHidden,\n    });\n  };\n\n  const handleHiddenChange = () => {\n    setNewHidden(!newHidden);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleVisibilityUpdate} className=\"buttonLeft\">\n        <label htmlFor=\"submit\" className=\"hidden\">{newHidden ? t('buttonShowCaseToStudents') : t('buttonHideCaseFromStudents')}</label>\n        <input type=\"submit\" onClick={handleHiddenChange} id=\"submit\" value={newHidden ? t('buttonShowCaseToStudents') : t('buttonHideCaseFromStudents')} />\n      </form>\n    </div>\n  );\n};\n\nexport default HideCase;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Form } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nconst UpdateCaseTitle = ({ c, updateCaseTitle }) => {\n  const { t } = useTranslation();\n\n  const [title, setTitle] = useState(c.title);\n\n  const caseSchema = Yup.object().shape({\n    title: Yup.string()\n      .min(2, t('warningShort'))\n      .max(999, t('warningLong'))\n      .required(t('warningRequired')),\n  });\n\n  const handleTitleUpdate = (values) => {\n    updateCaseTitle({\n      title: values.title,\n      anamnesis: c.anamnesis,\n      hidden: c.hidden,\n    });\n\n    setTitle(values.title);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        title,\n      }}\n      validationSchema={caseSchema}\n      onSubmit={handleTitleUpdate}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        values,\n        errors,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group className=\"mb-3\" controlId=\"updateTitle\" style={{ width: '30rem' }}>\n            <Form.Control\n              type=\"text\"\n              name=\"title\"\n              value={values.title}\n              onChange={handleChange}\n              isInvalid={!!errors.title}\n            />\n            <Form.Text className=\"text-muted\">\n              {t('caseTitleInstruction')}\n            </Form.Text>\n            <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\n              {errors.title}\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default UpdateCaseTitle;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Form } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nconst UpdateAnamnesis = ({ c, updateAnamnesis }) => {\n  const { t } = useTranslation();\n\n  const [anamnesis, setAnamnesis] = useState(c.anamnesis);\n\n  const caseSchema = Yup.object().shape({\n    anamnesis: Yup.string()\n      .min(2, t('warningShort'))\n      .max(5000, t('warningLong'))\n      .required(t('warningRequired')),\n  });\n\n  const handleAnamnesisUpdate = (values) => {\n    updateAnamnesis({\n      title: c.title,\n      anamnesis: values.anamnesis,\n      hidden: c.hidden,\n    });\n\n    setAnamnesis(values.anamnesis);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        anamnesis,\n      }}\n      validationSchema={caseSchema}\n      onSubmit={handleAnamnesisUpdate}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        values,\n        errors,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group className=\"mb-3\" controlId=\"updateAnamnesis\" style={{ width: '30rem' }}>\n            <Form.Control\n              type=\"text\"\n              name=\"anamnesis\"\n              value={values.anamnesis}\n              onChange={handleChange}\n              isInvalid={!!errors.anamnesis}\n            />\n            <Form.Text className=\"text-muted\">\n              {t('caseAnamnesisInstruction')}\n            </Form.Text>\n            <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\n              {errors.anamnesis}\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default UpdateAnamnesis;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\nimport HideCase from '../case/HideCase';\nimport service from '../../services/cases';\nimport UpdateCaseTitle from '../case/UpdateCaseTitle';\nimport { setSuccess, setError } from '../../utils/MessageBanner';\nimport UpdateAnamnesis from './UpdateAnamnesis';\n\nconst Anamnesis = ({ cases, admin }) => {\n  const { t } = useTranslation();\n  const { id } = useParams();\n  const c = cases.find((a) => a.id === Number(id));\n  // currentcase was used to fix bug where case title and visibility\n  // could not be updated at the same time\n  // see https://github.com/taudinpurkauspeli/taudinpurkauspeli2021/commit/24d648f4a684d2acd3d378196c3fc09e6836b1a6#diff-9f9374df7bc962cc29cb590ed33d6b81f84a09bbced9187d2fb750e2f7d645ee\n  // temporarily modified to prevent refresh page bug\n  // eslint-disable-next-line no-unused-vars\n  const [currentCase, setCurrentCase] = useState(c);\n\n  /* istanbul ignore next */\n  const handleCaseUpdate = (updatedCase) => {\n    service.update(c.id, updatedCase)\n      .then(() => {\n        setCurrentCase(updatedCase);\n        setSuccess(t('caseUpdateSuccess'));\n      })\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n        setError(t('caseUpdateError'));\n      });\n  };\n\n  return (\n    <div id=\"wrapper\">\n      <p>Casen tiedot löytyvät täältä</p>\n      { admin && c && (\n        <div>\n          <UpdateCaseTitle c={c} updateCaseTitle={handleCaseUpdate} />\n          <UpdateAnamnesis c={c} updateAnamnesis={handleCaseUpdate} />\n          <HideCase c={c} hideCase={handleCaseUpdate} />\n        </div>\n      )}\n      { !admin && c && (\n        <p>{c.title}</p>\n      )}\n      { c && (\n        <p>{c.anamnesis}</p>\n      )}\n    </div>\n  );\n};\n\nexport default Anamnesis;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst FileBank = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('fileBank')}</h2>\n    </div>\n  );\n};\n\nexport default FileBank;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport {\n  Switch, Route, Redirect,\n} from 'react-router-dom';\n\n// Import components\nimport Frontpage from '../frontpage/Frontpage';\nimport HowToPlay from '../instructions/HowToPlay';\nimport Profile from '../users/Profile';\nimport Users from '../users/Users';\nimport Case from '../case/Case';\nimport Procedures from '../procedure/Procedures';\nimport Procedure from '../procedure/Procedure';\nimport Differentials from '../differential/Differentials';\nimport Anamnesis from '../anamnesis/Anamnesis';\nimport FileBank from '../files/FileBank';\n\nconst Routing = ({ admin, cases }) => (\n  <Switch>\n    <Route path=\"/howtoplay\">\n      <HowToPlay />\n    </Route>\n    <Route path=\"/profile\">\n      <Profile />\n    </Route>\n    <Route path=\"/users\">\n      {admin ? <Users /> : <Redirect to=\"/\" />}\n    </Route>\n    <Route path=\"/cases/:id/procedures\">\n      <Case cases={cases} admin={admin} />\n      <Procedures admin={admin} />\n    </Route>\n    <Route path=\"/cases/:id/procedure/:id\">\n      <Procedure admin={admin} />\n    </Route>\n    <Route path=\"/cases/:id/differentials\">\n      <Case cases={cases} admin={admin} />\n      <Differentials admin={admin} />\n    </Route>\n    <Route path=\"/cases/:id\">\n      <Case cases={cases} admin={admin} />\n      <Anamnesis cases={cases} admin={admin} />\n    </Route>\n    <Route path=\"/files\">\n      {admin ? <FileBank /> : <Redirect to=\"/\" />}\n    </Route>\n    <Route path=\"/\">\n      <Frontpage admin={admin} cases={cases} />\n    </Route>\n  </Switch>\n);\n\nexport default Routing;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n} from 'react-router-dom';\n\n// Import components\nimport Navigationbar from './components/navigation/Navbar';\nimport service from './services/cases';\nimport Sidebar from './components/navigation/Sidebar';\nimport Routing from './components/navigation/Routing';\nimport MessageBanner from './utils/MessageBanner';\n\nimport { setToken } from './utils/Helper';\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n  const [admin, setAdmin] = useState(false);\n  const [cases, setCases] = useState([]);\n\n  /* istanbul ignore next */\n  React.useEffect(() => {\n    service\n      .getAll()\n      .then((response) => {\n        // eslint-disable-next-line no-console\n        console.log(response);\n        setToken(response.user.token);\n        setAdmin(response.user.admin);\n        setUser(response.user.name);\n        setCases(response.data);\n        // eslint-disable-next-line no-console\n        console.log(user);\n      })\n      .catch((error) => {\n        // eslint-disable-next-line\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <Router>\n      <Navigationbar\n        user={false}\n        admin={admin}\n        cases={cases}\n      />\n      <Sidebar />\n      <MessageBanner />\n      <Routing cases={cases} admin={admin} />\n    </Router>\n  );\n};\n\nexport default (App);\n","/* eslint-disable linebreak-style */\n/* istanbul ignore file */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' // [::1] is the IPv6 localhost address.\n      || window.location.hostname === '[::1]'\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      || window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n      ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        // eslint-disable-next-line no-use-before-define\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        // eslint-disable-next-line no-use-before-define\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n\n              // Execute callback\n              // eslint-disable-next-line no-lonely-if\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n          || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      });\n  }\n}\n","/* eslint-disable linebreak-style */\n/* istanbul ignore file */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n/config';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}