{"version":3,"sources":["i18n/config.js","components/navigation/Navbar.js","utils/Helper.js","services/cases.js","components/navigation/Sidebar.js","components/case/NewCaseForm.js","utils/MessageBanner.js","components/case/NewCase.js","services/differentials/differentialsUnderCases.js","services/procedures/proceduresUnderCase.js","components/case/CopyCase.js","components/case/RemoveCase.js","components/case/CaseCard.js","components/frontpage/Search.js","components/frontpage/Frontpage.js","components/instructions/HowToPlay.js","components/users/Profile.js","components/users/Users.js","components/case/Case.js","components/procedure/NewProcedureForm.js","services/procedures/procedures.js","components/procedure/NewProcedure.js","components/procedure/EditProcedure.js","components/procedure/ProcedureList.js","components/procedure/Procedures.js","services/procedures/subProcedures.js","services/procedures/textSubProcedures.js","components/subprocedure/textSubProcedure/AddTextSubProcedure.js","components/subprocedure/textSubProcedure/NewTextSubProcedure.js","components/subprocedure/textSubProcedure/UpdateTextSubProcedureForm.js","components/subprocedure/textSubProcedure/UpdateTextSubProcedure.js","components/subprocedure/textSubProcedure/TextSubProcedure.js","components/subprocedure/SubProcedure.js","components/subprocedure/SubProcedureList.js","components/procedure/Procedure.js","services/differentials/differentialGroupsUnderCases.js","components/differential/Differential.js","components/differential/DifferentialList.js","services/differentials/differentials.js","components/differential/AddDifferentialForm.js","components/differential/SelectDifferentialForm.js","components/differential/NewDifferential.js","components/differential/differentialGroup/DifferentialGroup.js","components/differential/differentialGroup/DifferentialGroupList.js","services/differentials/differentialGroups.js","components/differential/differentialGroup/AddDifferentialGroupForm.js","components/differential/differentialGroup/SelectDifferentialGroupForm.js","components/differential/differentialGroup/NewDifferentialGroup.js","components/differential/Differentials.js","components/case/HideCase.js","components/case/UpdateCaseTitle.js","components/anamnesis/UpdateAnamnesis.js","components/anamnesis/Anamnesis.js","components/files/FileBank.js","components/navigation/Routing.js","App.js","serviceWorker.js","index.js"],"names":["i18n","use","LanguageDetector","init","initReactI18next","fallbackLng","lng","localStorage","getItem","resources","fi","translations","require","en","ns","defaultNS","languages","Navigationbar","user","admin","t","useTranslation","changeLanguage","language","Navbar","collapseOnSelect","expand","variant","sticky","Brand","as","Link","to","Toggle","Collapse","id","Nav","className","NavDropdown","title","Item","onClick","eventKey","NavLink","href","token","getConfig","headers","Authorization","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Sidebar","newCaseForm","addCase","newCaseSchema","Yup","shape","min","max","required","anamnesis","hidden","initialValues","validationSchema","onSubmit","values","handleSubmit","handleChange","errors","Form","noValidate","Group","md","controlId","Label","Control","type","name","value","onChange","isInvalid","Feedback","rows","Check","label","Button","setError","message","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","setSuccess","success","MessageBanner","newestOnTop","rtl","pauseOnFocusLoss","NewCase","useState","show","setShow","toggleVisibility","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","NewCaseForm","newCase","service","catch","console","log","diffGroupCaseId","caseId","copyCase","caseToBeCopied","createProcedures","createDifferentials","oldCaseId","newCopyId","size","event","preventDefault","caseObject","caseService","copy","ducService","result","pucService","removeCase","caseToBeRemoved","deleteCase","CaseCard","c","Card","style","width","cursor","Text","Footer","ProgressBar","now","CopyCase","copyId","i","length","description","differentialId","procedureId","priority","RemoveCase","window","confirm","Search","newSearch","searchCases","htmlFor","Frontpage","cases","setNewSearch","casesToShow","filter","toLowerCase","includes","target","Row","xs","map","Col","HowToPlay","Profile","Users","Case","useParams","ButtonGroup","disabled","newProcedureForm","addProcedure","newProcedureSchema","newProcedure","NewProcedureForm","procedureObject","procedureUnderCaseObject","serviceUnderCases","EditProcedure","procedure","editProcedureFunc","proceduresUnderCase","setNewPriority","setNewProcedureTitle","history","useHistory","margin","e","serviceUnderProcedure","push","editProcedure","defaultValue","input","DragNDropList","proceduresHook","handleDragStart","handleDragEnd","handleDragEnter","submitForm","p","index","onDragStart","onDragEnd","onDragEnter","ProcedureList","draggingItem","useRef","dragOverItem","setProceduresHook","procedureToEdit","setProcedureToEdit","useEffect","procedureList","list","procedures","sort","a","b","current","givenProcedure","dragDropEditProcedure","listCopy","draggingItemContent","splice","handleEditId","Procedures","NewProcedure","AddTextSubProcedure","handleSubProcedureAdd","newTextSubProcedureSchema","text","placeholder","role","NewTextSubProcedure","proceduresId","alertMessage","setAlertMessage","errorMessage","setErrorMessage","setTextSubProcedures","React","initialSubs","handleTextSubProcedureAdd","cowObject","serviceText","setTimeout","handleError","Alert","Tabs","defaultActiveKey","Tab","subProcedureObject","res","subId","subProcedureId","proceduresUnderCaseProcedureCaseId","UpdateTextSubProcedureForm","handleTextSubProcedureUpdate","updateTextSubProcedureSchema","UpdateTextSubProcedure","updatedObject","TextSubProcedure","Accordion","SubProcedure","d","textSubProcedures","SubProcedureList","listedSubProcedures","setListedSubProcedures","subProcedures","initialSubProcedures","Procedure","showWhenVisible","display","Differential","DifferentialList","caseDifferentials","setCaseDifferentials","initialDifferentials","AddDifferentialForm","addDifferential","newDifferentialSchema","SelectDifferentialForm","differentials","selectDifferential","selectedDiff","setSelectedDiff","setDescription","differential","labelKey","options","selected","NewDifferential","setDifferentials","handleDifferentialSelection","ducObject","differentialObject","DifferentialGroup","DifferentialGroupList","caseDifferentialGroups","setCaseDifferentialGroups","initialDifferentialGroups","AddDifferentialGroupForm","addDifferentialGroup","newDifferentialGroupSchema","SelectDifferentialGroupForm","differentialGroups","selectDifferentialGroup","differentialGroup","differentialGroupId","NewDifferentialGroup","setDifferentialGroups","handleDifferentialGroupSelection","differentialGroupObject","Differentials","HideCase","hideCase","newHidden","setNewHidden","UpdateCaseTitle","updateCaseTitle","setTitle","caseSchema","UpdateAnamnesis","updateAnamnesis","setAnamnesis","Anamnesis","find","Number","setCurrentCase","handleCaseUpdate","updatedCase","FileBank","Routing","path","App","setUser","setAdmin","setCases","newToken","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"41UAQAA,IAAKC,IAAIC,KAAkBC,OAE3BH,IAAKC,IAAIG,KAAkBD,KAAK,CAC9BE,YAAa,KAGbC,IAAKC,aAAaC,QAAQ,eAAiB,KAC3CC,UAAW,CACTC,GAAI,CAEFC,aAAcC,EAAQ,MAExBC,GAAI,CAEFF,aAAcC,EAAQ,OAG1BE,GAAI,CAAC,gBACLC,UAAW,iBAGbf,IAAKgB,UAAY,CAAC,KAAM,MAEThB,QAAf,E,OC8BeiB,EA/CO,SAAC,GAEhB,IADLC,EACI,EADJA,KAAMC,EACF,EADEA,MAEEC,EAAMC,cAAND,EAGFE,EAAiB,SAACC,GACtBvB,EAAKsB,eAAeC,IAGtB,OACE,eAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,QAAQ,OAAOC,OAAO,MAA3D,UACE,cAACJ,EAAA,EAAOK,MAAR,CAAcC,GAAIC,IAAMC,GAAG,IAA3B,SAAgCZ,EAAE,mBAClC,cAACI,EAAA,EAAOS,OAAR,CAAe,gBAAc,0BAC7B,cAACT,EAAA,EAAOU,SAAR,CAAiBC,GAAG,wBAApB,SACE,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,eAACC,EAAA,EAAD,CAAaC,MAAOnB,EAAE,kBAAmBe,GAAG,iBAAiBE,UAAU,WAAvE,UACE,cAACC,EAAA,EAAYE,KAAb,CAAkBC,QAAS,kBAAMnB,EAAe,OAAOoB,SAAS,KAAhE,SAAsEtB,EAAE,qBACxE,cAACkB,EAAA,EAAYE,KAAb,CAAkBC,QAAS,kBAAMnB,EAAe,OAAOoB,SAAS,KAAhE,SAAsEtB,EAAE,wBAExED,GACF,cAACiB,EAAA,EAAII,KAAL,UACE,cAACG,EAAA,EAAD,CAASb,GAAIC,IAAMC,GAAG,SAASK,UAAU,WAAzC,SAAqDjB,EAAE,uBAGvDD,GACF,cAACiB,EAAA,EAAII,KAAL,UACE,cAACG,EAAA,EAAD,CAASb,GAAIC,IAAMC,GAAG,SAASK,UAAU,WAAzC,SAAqDjB,EAAE,gBAGzD,cAACgB,EAAA,EAAII,KAAL,UACE,cAACG,EAAA,EAAD,CAASb,GAAIC,IAAMC,GAAG,aAAaK,UAAU,WAA7C,SAAyDjB,EAAE,iBAE3DF,GACF,cAACkB,EAAA,EAAII,KAAL,UACE,cAACG,EAAA,EAAD,CAASb,GAAIC,IAAMC,GAAG,WAAWK,UAAU,WAA3C,SAAuDjB,EAAE,mBAG3D,cAACgB,EAAA,EAAII,KAAL,UACE,cAACG,EAAA,EAAD,CAASC,KAAK,2GAA2GP,UAAU,WAAnI,SAA+IjB,EAAE,uB,iBCrDzJyB,EAAQ,KAMCC,EAAY,iBAAO,CAAEC,QAAS,CAAEC,cAAeH,KCFtDI,EAAU,aAmBD,EAjBA,WAEb,OADgBC,IAAMC,IAAIF,EAASH,KACpBM,MAAK,SAACC,GAAD,OAAcA,EAASC,SAe9B,EAZA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,EAAWT,KAChCM,MAAK,SAACC,GAAD,OAAcA,EAASC,SAU9B,EAPA,SAACnB,EAAIoB,GAAL,OAAmBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBd,GAAMoB,EAAWT,MAO5D,EALA,SAACX,GAEd,OADgBe,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2Bd,GAAMW,KAClCM,MAAK,SAACC,GAAD,OAAcA,EAASC,SCb9BK,EAJC,kBACd,qBAAKxB,GAAG,a,qEC+EKyB,EA5EK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACbzC,EAAMC,cAAND,EAEF0C,EAAgBC,MAAaC,MAAM,CACvCzB,MAAOwB,MACJE,IAAI,EAAG7C,EAAE,iBACT8C,IAAI,IAAK9C,EAAE,gBACX+C,SAAS/C,EAAE,oBACdgD,UAAWL,MACXM,OAAQN,QAWV,OACE,cAAC,IAAD,CACEO,cAAe,CACb/B,MAAO,GACP6B,UAAW,GACXC,QAAQ,GAEVE,iBAAkBT,EAClBU,SAhBkB,SAACC,GACrBZ,EAAQ,CACNtB,MAAOkC,EAAOlC,MACd6B,UAAWK,EAAOL,UAClBC,OAAQI,EAAOJ,UAKjB,SASG,gBACCK,EADD,EACCA,aACAC,EAFD,EAECA,aACAF,EAHD,EAGCA,OACAG,EAJD,EAICA,OAJD,OAMC,eAACC,EAAA,EAAD,CAAMC,YAAU,EAACN,SAAUE,EAA3B,UACE,eAACG,EAAA,EAAKE,MAAN,CAAYC,GAAG,IAAIC,UAAU,QAA7B,UACE,cAACJ,EAAA,EAAKK,MAAN,UAAa9D,EAAE,eACf,cAACyD,EAAA,EAAKM,QAAN,CACEC,KAAK,OACLC,KAAK,QACLC,MAAOb,EAAOlC,MACdgD,SAAUZ,EACVa,YAAaZ,EAAOrC,QAEtB,cAACsC,EAAA,EAAKM,QAAQM,SAAd,CAAuBL,KAAK,UAA5B,SACGR,EAAOrC,WAGZ,eAACsC,EAAA,EAAKE,MAAN,CAAY1C,UAAU,OAAO4C,UAAU,YAAvC,UACE,cAACJ,EAAA,EAAKK,MAAN,UAAa9D,EAAE,mBACf,cAACyD,EAAA,EAAKM,QAAN,CACErD,GAAG,WACHuD,KAAK,YACLK,KAAM,EACNJ,MAAOb,EAAOL,UACdmB,SAAUZ,OAGd,cAACE,EAAA,EAAKE,MAAN,CAAY1C,UAAU,OAAO4C,UAAU,SAAvC,SACE,cAACJ,EAAA,EAAKc,MAAN,CACExB,UAAQ,EACRkB,KAAK,SACLO,MAAOxE,EAAE,YACTkE,MAAOb,EAAOJ,OACdkB,SAAUZ,MAGd,cAACkB,EAAA,EAAD,CAAQxD,UAAU,eAAeF,GAAG,cAAciD,KAAK,SAAvD,SAAiEhE,EAAE,gC,SCvDhE0E,G,OAAW,SAACC,GACvBC,IAAMC,MAAMF,EAAS,CACnBG,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,MAIDC,EAAa,SAACX,GACzBC,IAAMW,QAAQZ,EAAS,CACrBG,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,KAICG,EAtCO,kBACpB,cAAC,IAAD,CACEV,SAAS,aACTC,UAAW,IACXC,iBAAe,EACfS,aAAa,EACbR,cAAY,EACZS,KAAK,EACLC,kBAAkB,EAClBR,WAAW,EACXD,cAAY,KCsCDU,EA5CC,WACd,IAAQ5F,EAAMC,cAAND,EAER,EAAwB6F,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAmB,kBAAMD,GAASD,IAiBxC,OACE,gCACE,cAACrB,EAAA,EAAD,CAAQxD,UAAU,YAAYI,QAAS2E,EAAkBjF,GAAG,SAA5D,SACGf,EAAE,mBAEL,eAACiG,EAAA,EAAD,CACEH,KAAMA,EACNI,OAAQF,EACRG,SAAS,SACTC,UAAU,EAJZ,UAME,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMM,MAAP,UAAcvG,EAAE,eAElB,cAACiG,EAAA,EAAMO,KAAP,UACE,cAACC,EAAD,CAAahE,QA7BC,SAACiE,GACrBC,EAAeD,GACZ1E,MAAK,WACJgE,IACAV,EAAWtF,EAAE,sBAEd4G,OAAM,SAAC/B,GAENgC,QAAQC,IAAIjC,GACZmB,IACAtB,EAAS1E,EAAE,gC,kBCzBb6B,EAAU,+BAcD,EAZA,SAACkF,GAEd,OADgBjF,IAAMC,IAAN,UAAaF,EAAb,YAAwBkF,GAAmBrF,KAC5CM,MAAK,SAACC,GAAD,OAAcA,EAASC,SAU9B,EAPA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,EAAWT,KAChCM,MAAK,SAACC,GAAD,OAAcA,EAASC,SCTvCL,EAAU,4BAcD,EAZA,SAACmF,GAEd,OADgBlF,IAAMC,IAAN,UAAaF,EAAb,YAAwBmF,GAAUtF,KACnCM,MAAK,SAACC,GAAD,OAAcA,EAASC,SAU9B,EAPA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,EAAWT,KAChCM,MAAK,SAACC,GAAD,OAAcA,EAASC,SAK9B,EAFA,SAACnB,EAAIoB,GAAL,OAAmBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBd,GAAMoB,EAAWT,MCgC5DuF,EAvCE,SAAC,GAEX,IADLC,EACI,EADJA,eAAgBC,EACZ,EADYA,iBAAkBC,EAC9B,EAD8BA,oBAE1BpH,EAAMC,cAAND,EACFqH,EAAYH,EAAenG,GAE7BuG,EAAY,EA4BhB,OACE,cAAC7C,EAAA,EAAD,CAAQlE,QAAQ,UAAUgH,KAAK,KAAKlG,QA1BnB,SAACmG,GAClBA,EAAMC,iBACN,IAAMC,EAAc,CAClBvG,MAAO+F,EAAe/F,MACtB6B,UAAWkE,EAAelE,UAC1BC,OAAQiE,EAAejE,QAEzB0E,EAAmBD,GAChB1F,MAAK,SAAC4F,GACLN,EAAYM,EAAK7G,MAElBiB,MAAK,WACJ6F,EAAkBR,GACfrF,MAAK,SAAC8F,GACLV,EAAoBE,EAAWQ,SAGpC9F,MAAK,WACJ+F,EAAkBV,GACfrF,MAAK,SAAC8F,GACLX,EAAiBG,EAAWQ,UAMpC,SAA0D9H,EAAE,WCzBjDgI,GAbI,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,gBAAiBC,EAAiB,EAAjBA,WAC7BlI,EAAMC,cAAND,EAOR,OACE,cAACyE,EAAA,EAAD,CAAQxD,UAAU,eAAesG,KAAK,KAAKhH,QAAQ,SAASc,QANzC,SAACmG,GACpBA,EAAMC,iBACNS,EAAWD,EAAgBlH,KAI3B,SAAoFf,EAAE,mBCoE3EmI,GAnEE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,EAAGrI,EAAY,EAAZA,MACbC,EAAMC,cAAND,EAuCR,OACE,gCACE,eAACqI,EAAA,EAAD,CAAM3H,GAAIC,IAAMC,GAAE,iBAAYwH,EAAErH,IAAMuH,MAAO,CAAEC,MAAO,QAASC,OAAQ,WAAavH,UAAU,WAA9F,UACE,eAACoH,EAAA,EAAK7B,KAAN,WACE,cAAC6B,EAAA,EAAK9B,MAAN,UAAa6B,EAAEjH,QACf,cAACkH,EAAA,EAAKI,KAAN,UAAYL,EAAEpF,eAEhB,cAACqF,EAAA,EAAKK,OAAN,UACE,cAACC,EAAA,EAAD,CAAa1H,UAAU,WAAWV,QAAQ,UAAUqI,IAAK,GAAIpE,MAAK,UAAK,GAAL,YAIpEzE,GACA,sBAAKkB,UAAU,cAAf,UACE,cAACwD,EAAA,EAAD,CAAQxD,UAAU,aAAaP,GAAIC,IAAMC,GAAE,iBAAYwH,EAAErH,IAAMwG,KAAK,KAApE,SAA0EvH,EAAE,gBAC5E,cAAC6I,EAAD,CACE3B,eAAgBkB,EAChBhB,oBArDkB,SAAC0B,EAAQhB,GACnC,IAAK,IAAIiB,EAAI,EAAGA,EAAIjB,EAAOkB,OAAQD,GAAK,EAAG,CACzC,MAA4BjB,EAAOiB,GAA3BhI,EAAR,EAAQA,GAAIkI,EAAZ,EAAYA,YAMZpB,EALe,CACbb,OAAQ8B,EACRI,eAAgBnI,EAChBkI,kBAgDI9B,iBAzCe,SAAC2B,EAAQhB,GAChC,IAAK,IAAIiB,EAAI,EAAGA,EAAIjB,EAAOkB,OAAQD,GAAK,EAAG,CACzC,MAAkCjB,EAAOiB,GAAjCI,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,SAMrBrB,EALe,CACbf,OAAQ8B,EACRK,cACAC,iBAqCE,cAACC,GAAD,CAAYpB,gBAAiBG,EAAGF,WA9Bf,YAGJ,IADAoB,OAAOC,QAAQvJ,EAAE,4BAElC2H,EAAmBS,EAAErH,IAClBiB,MAAK,kBAAMsD,EAAWtF,EAAE,yBACxB4G,OAAM,kBAAMlC,EAAS1E,EAAE,iCC9BjBwJ,GAlBA,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YACnB1J,EAAMC,cAAND,EAER,OACE,8BACE,wBAAO2J,QAAQ,SAAf,UACG3J,EAAE,iBADL,OAGE,uBACEe,GAAG,SACHmD,MAAOuF,EACPtF,SAAUuF,UC6CLE,GA/CG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAO9J,EAAY,EAAZA,MAClBC,EAAMC,cAAND,EACR,EAAkC6F,mBAAS,IAA3C,mBAAO4D,EAAP,KAAkBK,EAAlB,KAMMC,EAAeN,EACTI,EAAMG,QAAO,SAAC5B,GAAD,OAAOA,EAAEjH,MAAM8I,cAAcC,SAAST,EAAUQ,kBAArEJ,EAEJ,OACE,sBAAK9I,GAAG,UAAR,UACE,6BAAKf,EAAE,oBACP,4BAAIA,EAAE,mBACN,cAAC,GAAD,CAAQyJ,UAAWA,EAAWC,YAXd,SAAClC,GACnBsC,EAAatC,EAAM2C,OAAOjG,UAWxB,uBACCnE,GACC,gCACE,cAAC,EAAD,IACA,uBACA,6BAAKC,EAAE,gBACP,0BAGJ,cAACoK,EAAA,EAAD,CAAKC,GAAG,OAAOzG,GAAG,OAAO3C,UAAU,MAAnC,SACGlB,GACCgK,EAAYC,QAAO,SAAC5B,GAAD,OAAOA,EAAEnF,UAAQqH,KAAI,SAAClC,GAAD,OACtC,cAACmC,EAAA,EAAD,UACE,cAAC,GAAD,CAAUnC,EAAGA,EAAGrI,MAAOA,KADfqI,EAAErH,SAMlB,uBACA,6BAAKf,EAAE,kBACP,uBACA,cAACoK,EAAA,EAAD,CAAKC,GAAG,OAAOzG,GAAG,OAAO3C,UAAU,MAAnC,SACG8I,EAAYC,QAAO,SAAC5B,GAAD,OAAQA,EAAEnF,UAAQqH,KAAI,SAAClC,GAAD,OACxC,cAACmC,EAAA,EAAD,UACE,cAAC,GAAD,CAAUnC,EAAGA,EAAGrI,MAAOA,KADfqI,EAAErH,aCrCPyJ,GAXG,WAChB,IAAQxK,EAAMC,cAAND,EAER,OACE,sBAAKe,GAAG,UAAR,UACE,6BAAKf,EAAE,eACP,4BAAIA,EAAE,0BCIGyK,GAVC,WACd,IAAQzK,EAAMC,cAAND,EAER,OACE,qBAAKe,GAAG,UAAR,SACE,6BAAKf,EAAE,oBCKE0K,GAVD,WACZ,IAAQ1K,EAAMC,cAAND,EAER,OACE,qBAAKe,GAAG,UAAR,SACE,6BAAKf,EAAE,wB,UCiBE2K,GAlBF,WACX,IAAQ3K,EAAMC,cAAND,EACAe,EAAO6J,cAAP7J,GACFc,EAAO,iBAAad,GAE1B,OAEE,qBAAKA,GAAG,UAAR,SACE,eAAC8J,GAAA,EAAD,WACE,cAACpG,EAAA,EAAD,CAAQxD,UAAU,OAAOP,GAAIC,IAAMC,GAAIiB,EAASiJ,UAAQ,EAAxD,SAA0D9K,EAAE,mBAC5D,cAACyE,EAAA,EAAD,CAAQxD,UAAU,OAAOP,GAAIC,IAAMC,GAAE,UAAKiB,EAAL,eAArC,SAAiE7B,EAAE,oBACnE,cAACyE,EAAA,EAAD,CAAQxD,UAAU,OAAOP,GAAIC,IAAMC,GAAE,UAAKiB,EAAL,kBAArC,SAAoE7B,EAAE,6BCyC/D+K,GArDU,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAClBhL,EAAMC,cAAND,EAEFiL,EAAqBtI,MAAaC,MAAM,CAC5CzB,MAAOwB,MACJE,IAAI,EAAG7C,EAAE,iBACT8C,IAAI,IAAK9C,EAAE,gBACX+C,SAAS/C,EAAE,sBAWhB,OACE,cAAC,IAAD,CACEkD,cAAe,CACb/B,MAAO,IAETgC,iBAAkB8H,EAClB7H,SAduB,SAACC,GAC1B2H,EAAa,CACX7J,MAAOkC,EAAOlC,MACd6B,UAAWK,EAAOL,UAClBC,OAAQI,EAAOJ,UAKjB,SAOG,gBACCK,EADD,EACCA,aACAC,EAFD,EAECA,aACAF,EAHD,EAGCA,OACAG,EAJD,EAICA,OAJD,OAMC,eAACC,EAAA,EAAD,CAAMC,YAAU,EAACN,SAAUE,EAA3B,UACE,eAACG,EAAA,EAAKE,MAAN,CAAYC,GAAG,IAAIC,UAAU,QAA7B,UACE,cAACJ,EAAA,EAAKK,MAAN,UAAa9D,EAAE,oBACf,cAACyD,EAAA,EAAKM,QAAN,CACEC,KAAK,OACLC,KAAK,QACLC,MAAOb,EAAOlC,MACdgD,SAAUZ,EACVa,YAAaZ,EAAOrC,QAEtB,cAACsC,EAAA,EAAKM,QAAQM,SAAd,CAAuBL,KAAK,UAA5B,SACGR,EAAOrC,WAGZ,cAACsD,EAAA,EAAD,CAAQT,KAAK,SAAS/C,UAAU,eAAhC,SAAgDjB,EAAE,qCCjDtD6B,GAAU,kBAcD,GAPA,SAACM,GAEd,OADgBL,IAAMM,KAAKP,GAASM,EAAWT,KAChCM,MAAK,SAACC,GAAD,OAAcA,EAASC,SAK9B,GAZA,SAACnB,GAEd,OADgBe,IAAMC,IAAN,UAAaF,GAAb,YAAwBd,GAAMW,KAC/BM,MAAK,SAACC,GAAD,OAAcA,EAASC,SAU9B,GAFA,SAACnB,EAAIoB,GAAL,OAAmBL,IAAMO,IAAN,UAAaR,GAAb,YAAwBd,GAAMoB,EAAWT,MCkD5DwJ,GArDM,SAAC,GAAgB,IAAdlE,EAAa,EAAbA,OAEdhH,EAAMC,cAAND,EAER,EAAwB6F,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAmB,kBAAMD,GAASD,IAwBxC,OACE,gCACE,cAACrB,EAAA,EAAD,CAAQxD,UAAU,YAAYI,QAAS2E,EAAvC,SACGhG,EAAE,wBAEL,eAACiG,EAAA,EAAD,CACEH,KAAMA,EACNI,OAAQF,EACRG,SAAS,SACTC,UAAU,EAJZ,UAME,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMM,MAAP,UAAcvG,EAAE,oBAElB,cAACiG,EAAA,EAAMO,KAAP,UACE,cAAC2E,GAAD,CAAkBH,aApCC,SAACI,GAC1BzE,GAAeyE,GACZpJ,MAAK,SAACE,GACL8D,IACAV,EAAWtF,EAAE,wBACb,IAAMqL,EAA4B,CAChCrE,SACAmC,YAAajH,EAAKnB,GAClBqI,SAAU,GAGZkC,EAAyBD,MAE1BzE,OAAM,SAAC/B,GAENgC,QAAQC,IAAIjC,GACZmB,IACAtB,EAAS1E,EAAE,qC,SC4DJuL,GAtFO,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,UAAWxE,EAAgC,EAAhCA,OAAQyE,EAAwB,EAAxBA,kBAE1C,EAAsC5F,mBAAS2F,EAAUE,oBAAoBtC,UAA7E,mBAAoBuC,GAApB,WAEA,EAAkD9F,mBAAS2F,EAAUrK,OAArE,mBAA0ByK,GAA1B,WAEQ5L,EAAMC,cAAND,EAEF6L,EAAUC,cACVjK,EAAO,iBAAamF,GAsC1B,OACE,sBAAKjG,GAAG,oBAAR,UACE,6BAAKf,EAAE,mBACP,cAACyE,EAAA,EAAD,CAAQxD,UAAU,uBAAuBP,GAAIC,IAAMC,GAAE,UAAKiB,EAAL,sBAA0B2J,EAAUzK,IAAMuH,MAAO,CAAEyD,OAAQ,IAAhH,SAAuH/L,EAAE,mBACzH,uBAAMoD,SAAU,SAAC4I,GAAD,OA7BE,SAACxE,GACrBA,EAAMC,iBACNmE,EAAqBpE,EAAM2C,OAAO,GAAGjG,OACrCyH,EAAenE,EAAM2C,OAAO,GAAGjG,OAE/B,IAAMmH,EAA4B,CAChCrE,OAAQwE,EAAUE,oBAAoB1E,OACtCmC,YAAaqC,EAAUE,oBAAoBvC,YAC3CC,SAAU5B,EAAM2C,OAAO,GAAGjG,OAGtBkH,EAAmB,CACvBjK,MAAOqG,EAAM2C,OAAO,GAAGjG,OAGA,MAArBuH,GACFA,EAAkBJ,GAEpB1E,GAAe6E,EAAUzK,GAAIqK,GAC7Ba,EAA6BT,EAAUzK,GAAIsK,GAClB,MAArBI,GACFI,EAAQK,KAAK,KAQUC,CAAcH,IAArC,UACE,8BACE,uBAAOrC,QAAQ,QAAf,SACG3J,EAAE,oBAEL,uBACA,uBACEe,GAAG,QACHiD,KAAK,OACLoI,aAAcZ,EAAUrK,MACxBgD,SA5CgB,SAACqD,GACzBoE,EAAqBpE,EAAM2C,OAAOjG,QA4C1BjD,UAAU,iBAGd,8BACE,uBAAO0I,QAAQ,WAAf,SACG3J,EAAE,uBAEL,uBACA,uBACEe,GAAG,WACHiD,KAAK,UACLG,SA7DmB,SAACqD,GAC5BmE,EAAenE,EAAM2C,OAAOjG,QA6DpBkI,aAAcZ,EAAUE,oBAAoBtC,SAC5CnI,UAAU,iBAGd,4BACE,cAACwD,EAAA,EAAD,CAAQ4H,OAAK,EAACrI,KAAK,SAASjD,GAAG,SAASE,UAAU,eAAlD,SAAkEjB,EAAE,uBA/BzCwL,EAAUE,oBAAoBtC,WC/C7DkD,GAAgB,SAAC,GAAD,IACpBC,EADoB,EACpBA,eAAgBC,EADI,EACJA,gBAAiBC,EADb,EACaA,cAAeC,EAD5B,EAC4BA,gBAAiB1M,EAD7C,EAC6CA,EAAG2M,EADhD,EACgDA,WADhD,OAGpBJ,GACKA,EAAejC,KAAI,SAACsC,EAAGC,GAAJ,OACpB,oBACEC,YAAa,SAACd,GAAD,OAAOQ,EAAgBR,EAAGa,IACvCE,UAAW,kBAAMN,KACjBO,YAAa,SAAChB,GAAD,OAAOU,EAAgBV,EAAGa,IAEvC1H,WAAS,EALX,SAOE,sBAAKlE,UAAU,OAAf,UACE,eAACwD,EAAA,EAAD,CAAQxD,UAAU,kBAAlB,cAAsC2L,EAAElB,oBAAoBtC,SAA5D,IAAuEwD,EAAEzL,MAAzE,OACA,sBAAMiC,SAAU,SAAC4I,GAAD,OAAOW,EAAWC,EAAGZ,IAAI/K,UAAU,cAAnD,SACE,cAACwD,EAAA,EAAD,CAAQT,KAAK,SAAS/C,UAAU,aAAyBsG,KAAK,KAA9D,SAAoEvH,EAAE,eAApB6M,SANjDA,OAgGEI,GAnFO,SAAC,GAAY,IAAVlM,EAAS,EAATA,GAEff,EAAMC,cAAND,EACFkN,EAAeC,mBACfC,EAAeD,mBACrB,EAA4CtH,mBAAS,IAArD,mBAAO0G,EAAP,KAAuBc,EAAvB,KACA,EAA8CxH,mBAAS,MAAvD,mBAAOyH,EAAP,KAAwBC,EAAxB,KAEAC,qBAAU,WACR7G,GACU5F,GACPiB,MAAK,SAACyL,GACL,IAAMC,EAAOD,EAAc,GAAGE,WAC9BD,EAAKE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEnC,oBAAoBtC,SAAW0E,EAAEpC,oBAAoBtC,YAC3EiE,EAAkBK,QAErB,IAgDH,OACE,qCACE,cAAC,GAAD,CACEnB,eAAgBA,EAChBC,gBAtCkB,SAACR,EAAGlH,GAC1BoI,EAAaa,QAAUjJ,GAsCnB2H,cAXgB,WACpBF,EAAejC,KAAI,SAACsC,EAAGC,GAAJ,OAbS,SAACmB,EAAgBnB,GAE7C,IAAMxB,EAA4B,CAChCrE,OAAQgH,EAAetC,oBAAoB1E,OAC3CmC,YAAa6E,EAAetC,oBAAoBvC,YAChDC,SAAUyD,EAAQ,GAGpBZ,EAA6B+B,EAAetC,oBAAoBvC,YAAakC,GAM3E4C,CAAsBrB,EAAGC,OAUvBH,gBAnCkB,SAACV,EAAGlH,GAC1BsI,EAAaW,QAAUjJ,EACvB,IAAMoJ,EAAQ,aAAO3B,GACf4B,EAAsBD,EAAShB,EAAaa,SAClDG,EAASE,OAAOlB,EAAaa,QAAS,GACtCG,EAASE,OAAOhB,EAAaW,QAAS,EAAGI,GACzCjB,EAAaa,QAAUX,EAAaW,QACpCX,EAAaW,QAAU,KACvBV,EAAkBa,IA4BdlO,EAAGA,EACH2M,WAhDa,SAACC,EAAGZ,GACrBA,EAAEvE,iBANiB,SAACmF,GACpBW,EAAmBX,GAMnByB,CAAazB,MAgDTU,EACA,cAAC,GAAD,CAAe9B,UAAW8B,EAAiBtG,OAAQjG,IAEnD,sCC1FOuN,GAhBI,SAAC,GAAe,IAAbvO,EAAY,EAAZA,MAEZC,EAAMC,cAAND,EACAe,EAAO6J,cAAP7J,GAER,OACE,sBAAKA,GAAG,UAAR,UACE,6BAAKf,EAAE,gBACLD,GACA,cAACwO,GAAD,CAAcvH,OAAQjG,IAExB,cAAC,GAAD,CAAeA,GAAIA,Q,8BCdnBc,GAAU,qBAmBD,GAPA,SAACM,GAEd,OADgBL,IAAMM,KAAKP,GAASM,EAAWT,KAChCM,MAAK,SAACC,GAAD,OAAcA,EAASC,SAK9B,GAjBE,SAACnB,GAEhB,OADgBe,IAAMC,IAAN,UAAaF,GAAb,YAAwBd,GAAMW,KAC/BM,MAAK,SAACC,GAAD,OAAcA,EAASC,SAe9B,GAZA,WAEb,OADgBJ,IAAMC,IAAIF,GAASH,KACpBM,MAAK,SAACC,GAAD,OAAcA,EAASC,SCTvCL,GAAU,yBAcD,GAPA,SAACM,GAEd,OADgBL,IAAMM,KAAKP,GAASM,EAAWT,KAChCM,MAAK,SAACC,GAAD,OAAcA,EAASC,SAK9B,GAFA,SAACnB,EAAIoB,GAAL,OAAmBL,IAAMO,IAAN,UAAaR,GAAb,YAAwBd,GAAMoB,EAAWT,MCyE5D8M,GAhFa,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,sBACrBzO,EAAMC,cAAND,EAEF0O,EAA4B/L,MAAaC,MAAM,CACnDzB,MAAOwB,MACJE,IAAI,EAAG7C,EAAE,iBACT8C,IAAI,IAAK9C,EAAE,gBACX+C,SAAS/C,EAAE,oBACdoJ,SAAUzG,MACVgM,KAAMhM,QAYR,OACE,cAAC,IAAD,CACEO,cAAe,CACbkG,SAAU,GACVjI,MAAO,GACPwN,KAAM,IAGRxL,iBAAkBuL,EAClBtL,SAlB+B,SAACC,GAClCoL,EAAsB,CACpBrF,SAAU/F,EAAO+F,SACjBpF,KAAM,OACN7C,MAAOkC,EAAOlC,MACdwN,KAAMtL,EAAOsL,QAKf,SAUG,gBACCrL,EADD,EACCA,aACAC,EAFD,EAECA,aACAF,EAHD,EAGCA,OACAG,EAJD,EAICA,OAJD,OAMC,eAACC,EAAA,EAAD,CAAMC,YAAU,EAACN,SAAUE,EAA3B,UACE,eAACG,EAAA,EAAKE,MAAN,CAAYC,GAAG,IAAIC,UAAU,QAA7B,UACE,cAACJ,EAAA,EAAKK,MAAN,UAAa9D,EAAE,WACf,cAACyD,EAAA,EAAKM,QAAN,CACEC,KAAK,OACLC,KAAK,QACL2K,YAAa5O,EAAE,SACfkE,MAAOb,EAAOlC,MACdgD,SAAUZ,EACVa,YAAaZ,EAAOrC,QAEtB,cAACsC,EAAA,EAAKM,QAAQM,SAAd,CAAuBL,KAAK,UAAU6K,KAAK,QAAQ,aAAW,gBAA9D,SACGrL,EAAOrC,WAGZ,eAACsC,EAAA,EAAKE,MAAN,CAAYC,GAAG,IAAIC,UAAU,WAA7B,UACE,cAACJ,EAAA,EAAKK,MAAN,UAAa9D,EAAE,0BACf,cAACyD,EAAA,EAAKM,QAAN,CACEC,KAAK,OACLC,KAAK,WACL2K,YAAa5O,EAAE,cACfkE,MAAOb,EAAO+F,SACdjF,SAAUZ,OAGd,eAACE,EAAA,EAAKE,MAAN,CAAY1C,UAAU,OAAO4C,UAAU,OAAvC,UACE,cAACJ,EAAA,EAAKK,MAAN,UAAa9D,EAAE,eACf,cAACyD,EAAA,EAAKM,QAAN,CACErD,GAAG,WACHuD,KAAK,OACLK,KAAM,GACNJ,MAAOb,EAAOsL,KACdxK,SAAUZ,OAGd,cAACkB,EAAA,EAAD,CAAQxD,UAAU,eAAe+C,KAAK,SAAtC,SAAgDhE,EAAE,yBCmB7C8O,GA1Fa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACrB/O,EAAMC,cAAND,EAER,EAAwC6F,mBAAS,MAAjD,mBAAOmJ,EAAP,KAAqBC,EAArB,KACA,EAAwCpJ,mBAAS,MAAjD,mBAAOqJ,EAAP,KAAqBC,EAArB,KACA,EAAwBtJ,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkDF,mBAAS,IAA3D,mBAA0BuJ,GAA1B,WAEAC,IAAM7B,WAAU,WACd7G,KACG3E,MAAK,SAACsN,GACLF,EAAqBE,MAEtB1I,OAAM,SAAC/B,GAENgC,QAAQC,IAAIjC,QAEf,IAEH,IAAMmB,EAAmB,kBAAMD,GAASD,IAoBlCyJ,EAA4B,SAACC,GACjCC,GAAmBD,GAChBxN,MAAK,kBAnBRgE,IACAiJ,EAAgBjP,EAAE,uCAClB0P,YAAW,WACTT,EAAgB,QACf,QAgBArI,OAAM,SAAC/B,GAAD,OAbS,SAACA,GAEnBgC,QAAQC,IAAIjC,GACZmB,IACAmJ,EAAgBnP,EAAE,gCAClB0P,YAAW,WACTP,EAAgB,QACf,KAMiBQ,CAAY9K,OAgBlC,OACE,gCACqB,OAAjBmK,GACF,cAACY,GAAA,EAAD,CAAOrP,QAAQ,UAAf,SAA0ByO,IAEP,OAAjBE,GACF,cAACU,GAAA,EAAD,CAAOrP,QAAQ,SAAf,SAAyB2O,IAEzB,cAACzK,EAAA,EAAD,CAAQxD,UAAU,iBAAiBI,QAAS2E,EAAkBuB,KAAK,KAAnE,SACGvH,EAAE,sBAEL,eAACiG,EAAA,EAAD,CACEH,KAAMA,EACNI,OAAQF,EACRG,SAAS,SACTC,UAAU,EAJZ,UAME,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMM,MAAP,UAAcvG,EAAE,2BAElB,cAACiG,EAAA,EAAMO,KAAP,UACE,cAACqJ,GAAA,EAAD,CAAMC,iBAAiB,MAAM/O,GAAG,mBAAmBE,UAAU,OAA7D,SACE,cAAC8O,GAAA,EAAD,CAAKzO,SAAS,MAAMH,MAAOnB,EAAE,2BAA7B,SACE,cAAC,GAAD,CAAqByO,sBApCH,SAACuB,GAC7BrJ,GAAe,CAAEyC,SAAU4G,EAAmB5G,SAAUpF,KAAMgM,EAAmBhM,OAC9EhC,MAAK,SAACiO,GACL,IAAMC,EAAQD,EAAIlP,GAClBwO,EAA0B,CACxBY,eAAgBD,EAChBE,mCAAoCrB,EACpC5N,MAAO6O,EAAmB7O,MAC1BwN,KAAMqB,EAAmBrB,0B,UCcpB0B,GAtEoB,SAAC,GAI7B,IAHLlP,EAGI,EAHJA,MACAwN,EAEI,EAFJA,KACA2B,EACI,EADJA,6BAEQtQ,EAAMC,cAAND,EAEFuQ,EAA+B5N,MAAaC,MAAM,CACtDzB,MAAOwB,MACJE,IAAI,EAAG7C,EAAE,iBACT8C,IAAI,IAAK9C,EAAE,gBACX+C,SAAS/C,EAAE,oBACdoJ,SAAUzG,MACVgM,KAAMhM,QAUR,OACE,cAAC,IAAD,CACEO,cAAe,CACb/B,QACAwN,QAEFxL,iBAAkBoN,EAClBnN,SAdkC,SAACC,GACrCiN,EAA6B,CAC3BnP,MAAOkC,EAAOlC,MACdwN,KAAMtL,EAAOsL,QAKf,SAQG,gBACCrL,EADD,EACCA,aACAC,EAFD,EAECA,aACAF,EAHD,EAGCA,OACAG,EAJD,EAICA,OAJD,OAMC,eAACC,EAAA,EAAD,CAAMC,YAAU,EAACN,SAAUE,EAA3B,UACE,eAACG,EAAA,EAAKE,MAAN,CAAYC,GAAG,IAAIC,UAAU,QAA7B,UACE,cAACJ,EAAA,EAAKK,MAAN,UAAa9D,EAAE,WACf,cAACyD,EAAA,EAAKM,QAAN,CACEC,KAAK,OACLC,KAAK,QACL2K,YAAa5O,EAAE,SACfkE,MAAOb,EAAOlC,MACdgD,SAAUZ,EACVa,YAAaZ,EAAOrC,QAEtB,cAACsC,EAAA,EAAKM,QAAQM,SAAd,CAAuBL,KAAK,UAAU6K,KAAK,QAAQ,aAAW,gBAA9D,SACGrL,EAAOrC,WAGZ,eAACsC,EAAA,EAAKE,MAAN,CAAY1C,UAAU,OAAO4C,UAAU,OAAvC,UACE,cAACJ,EAAA,EAAKK,MAAN,UAAa9D,EAAE,eACf,cAACyD,EAAA,EAAKM,QAAN,CACErD,GAAG,WACHuD,KAAK,OACLK,KAAM,GACNJ,MAAOb,EAAOsL,KACdxK,SAAUZ,OAGd,cAACkB,EAAA,EAAD,CAAQT,KAAK,SAAb,SAAuBhE,EAAE,yBCdpBwQ,GAlDgB,SAAC,GAIzB,IAHLrP,EAGI,EAHJA,MACAwN,EAEI,EAFJA,KACA5N,EACI,EADJA,GAEQf,EAAMC,cAAND,EACR,EAAwB6F,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAmB,kBAAMD,GAASD,IAgBxC,OACE,gCACE,cAACrB,EAAA,EAAD,CAAQxD,UAAU,aAAasG,KAAK,KAAKlG,QAAS2E,EAAlD,SACGhG,EAAE,gBAEL,eAACiG,EAAA,EAAD,CACEH,KAAMA,EACNI,OAAQF,EACRG,SAAS,SACTC,UAAU,EAJZ,UAME,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMM,MAAP,UAAcvG,EAAE,0BAElB,cAACiG,EAAA,EAAMO,KAAP,UACE,cAAC,GAAD,CACErF,MAAOA,EACPwN,KAAMA,EACN2B,6BA/B2B,SAACG,GACpC9J,GACU5F,EAAI0P,GACXzO,MAAK,WACJgE,IACAV,EAAWtF,EAAE,iCAEd4G,OAAM,WACLZ,IACAtB,EAAS1E,EAAE,2CCDJ0Q,GAtBU,SAAC,GAAD,IACvB3P,EADuB,EACvBA,GAAII,EADmB,EACnBA,MAAOwN,EADY,EACZA,KAAM5O,EADM,EACNA,MADM,OAGvB,8BACE,eAACsI,EAAA,EAAD,WACE,cAACsI,GAAA,EAAU9P,OAAX,CAAkBH,GAAI2H,IAAKhC,OAAQ/E,SAAUP,EAA7C,SACE,sBAAKE,UAAU,oDAAf,UACGE,EACApB,GACC,qBAAKkB,UAAU,cAAf,SACE,cAAC,GAAD,CAAwBE,MAAOA,EAAOwN,KAAMA,EAAM5N,GAAIA,WAK9D,cAAC4P,GAAA,EAAU7P,SAAX,CAAoBQ,SAAUP,EAA9B,SACE,cAACsH,EAAA,EAAK7B,KAAN,UAAYmI,YCFLiC,GAbM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,EAAG9Q,EAAY,EAAZA,MACzB,GAAe,SAAX8Q,EAAE7M,KACJ,OACE,cAAC,GAAD,CACEjD,GAAI8P,EAAE9P,GACNI,MAAO0P,EAAEC,kBAAkB3P,MAC3BwN,KAAMkC,EAAEC,kBAAkBnC,KAC1B5O,MAAOA,KCqBAgR,GA1BU,SAAC,GAA6B,IAA3BhC,EAA0B,EAA1BA,aAAchP,EAAY,EAAZA,MAExC,EAAsD8F,mBAAS,IAA/D,mBAAOmL,EAAP,KAA4BC,EAA5B,KAeA,OAbA5B,IAAM7B,WAAU,WACd0D,GAAuBnC,GACpB/M,MAAK,SAACmP,GACL,IAAMzD,EAAOyD,EAAqB,GAAGD,cACrCxD,EAAKE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEzE,SAAW0E,EAAE1E,YACnC6H,EAAuBvD,MAExB9G,OAAM,SAAC/B,GAENgC,QAAQC,IAAIjC,QAEf,IAGD,cAAC8L,GAAA,EAAD,UACGK,EAAoB1G,KAAI,SAACuG,GAAD,OACvB,cAAC,GAAD,CAAcA,EAAGA,EAAG9Q,MAAOA,UCkBpBqR,GAhCG,SAAC,GAAuB,IAArBrR,EAAoB,EAApBA,MACXC,GAD+B,EAAbgH,OACZ/G,cAAND,GACAe,EAAO6J,cAAP7J,GACR,EAAwB8E,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAGMsL,EAAkB,CAAEC,QAASxL,EAAO,GAAK,QAE/C,OAEE,sBAAK/E,GAAG,UAAR,UACE,6BACGf,EAAE,mBAEJD,GACC,gCACE,cAAC0E,EAAA,EAAD,CAAQxD,UAAU,YAAYI,QAAS,kBAAM0E,GAAQ,IAAOhF,GAAG,SAA/D,SACGf,EAAE,2BAEL,sBAAKiB,UAAU,OAAOqH,MAAO+I,EAA7B,UACE,cAAC,GAAD,CAAqBtC,aAAchO,IACnC,cAAC0D,EAAA,EAAD,CAAQxD,UAAU,qBAAqBsG,KAAK,KAA5C,SAAkDvH,EAAE,0BACpD,cAACyE,EAAA,EAAD,CAAQxD,UAAU,wBAAwBsG,KAAK,KAA/C,SAAqDvH,EAAE,6BACvD,cAACyE,EAAA,EAAD,CAAQxD,UAAU,sBAAsBsG,KAAK,KAA7C,SAAmDvH,EAAE,gCAEvD,cAAC,GAAD,CAAkB+O,aAAchO,EAAIhB,MAAOA,WClC/C8B,GAAU,oCAYD,GAVA,SAACmF,GAEd,OADgBlF,IAAMC,IAAN,UAAaF,GAAb,YAAwBmF,GAAUtF,KACnCM,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ9B,GALA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,GAASM,EAAWT,KAChCM,MAAK,SAACC,GAAD,OAAcA,EAASC,SCE9BqP,GAXM,SAAC,GAAD,IAAGxQ,EAAH,EAAGA,GAAIkD,EAAP,EAAOA,KAAMgF,EAAb,EAAaA,YAAb,OACnB,eAACZ,EAAA,EAAD,WACE,cAACsI,GAAA,EAAU9P,OAAX,CAAkBH,GAAI2H,IAAKhC,OAAQ/E,SAAUP,EAAIA,GAAG,mBAApD,SACGkD,IAEH,cAAC0M,GAAA,EAAU7P,SAAX,CAAoBQ,SAAUP,EAA9B,SACE,cAACsH,EAAA,EAAK7B,KAAN,UAAYyC,UCoBHuI,GAxBU,SAAC,GAAyB,IAAvBzK,EAAsB,EAAtBA,gBAC1B,EAAkDlB,mBAAS,IAA3D,mBAAO4L,EAAP,KAA0BC,EAA1B,KAcA,OAZArC,IAAM7B,WAAU,WACdlC,EAAyBvE,GACtB/E,MAAK,SAAC2P,GACLD,EAAqBC,MAEtB/K,OAAM,SAAC/B,GAGNgC,QAAQC,IAAIjC,QAEf,IAGD,cAAC8L,GAAA,EAAD,UACGc,EAAkBnH,KAAI,SAACuG,GAAD,OACrB,cAAC,GAAD,CAAyB9P,GAAI8P,EAAE9P,GAAIkD,KAAM4M,EAAE5M,KAAMgF,YAAa4H,EAAE5H,aAA7C4H,EAAE9P,UCpBvBc,GAAU,qBAmBD,GAjBA,WAEb,OADgBC,IAAMC,IAAIF,GAASH,KACpBM,MAAK,SAACC,GAAD,OAAcA,EAASC,SAe9B,GAZA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,GAASM,EAAWT,KAChCM,MAAK,SAACC,GAAD,OAAcA,EAASC,SC6D9B0P,GAjEa,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACrB7R,EAAMC,cAAND,EAEF8R,EAAwBnP,MAAaC,MAAM,CAC/CqB,KAAMtB,MACHE,IAAI,EAAG7C,EAAE,iBACT8C,IAAI,IAAK9C,EAAE,gBACX+C,SAAS/C,EAAE,oBACdiJ,YAAatG,QAUf,OACE,cAAC,IAAD,CACEO,cAAe,CACbe,KAAM,GACNgF,YAAa,IAEf9F,iBAAkB2O,EAClB1O,SAd0B,SAACC,GAC7BwO,EAAgB,CACd5N,KAAMZ,EAAOY,KACbgF,YAAa5F,EAAO4F,eAKtB,SAQG,gBACC3F,EADD,EACCA,aACAC,EAFD,EAECA,aACAF,EAHD,EAGCA,OACAG,EAJD,EAICA,OAJD,OAMC,eAACC,EAAA,EAAD,CAAMC,YAAU,EAACN,SAAUE,EAA3B,UACE,eAACG,EAAA,EAAKE,MAAN,CAAYC,GAAG,IAAIC,UAAU,OAA7B,UACE,cAACJ,EAAA,EAAKK,MAAN,UAAa9D,EAAE,qBACf,cAACyD,EAAA,EAAKM,QAAN,CACEC,KAAK,OACLC,KAAK,OACL2K,YAAa5O,EAAE,SACfkE,MAAOb,EAAOY,KACdE,SAAUZ,EACVa,YAAaZ,EAAOS,OAEtB,cAACR,EAAA,EAAKM,QAAQM,SAAd,CAAuBL,KAAK,UAAU6K,KAAK,QAAQ,aAAW,gBAA9D,SACGrL,EAAOS,UAGZ,eAACR,EAAA,EAAKE,MAAN,CAAY1C,UAAU,OAAO4C,UAAU,cAAvC,UACE,cAACJ,EAAA,EAAKK,MAAN,UAAa9D,EAAE,iBACf,cAACyD,EAAA,EAAKM,QAAN,CACErD,GAAG,WACHuD,KAAK,cACLK,KAAM,EACNJ,MAAOb,EAAO4F,YACd9E,SAAUZ,OAGd,cAACkB,EAAA,EAAD,CAAQxD,UAAU,eAAe+C,KAAK,SAAtC,SAAgDhE,EAAE,wC,UCZ7C+R,GA/CgB,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,cAAeC,EAA0C,EAA1CA,mBAAoBlL,EAAsB,EAAtBA,gBAC3D/G,EAAMC,cAAND,EAER,EAAwC6F,mBAAS,IAAjD,mBAAOqM,EAAP,KAAqBC,EAArB,KACA,EAAsCtM,mBAAS,IAA/C,mBAAOoD,EAAP,KAAoBmJ,EAApB,KAeA,OACE,eAAC3O,EAAA,EAAD,CAAML,SAdyB,SAACoE,GAChCA,EAAMC,iBACN,IAAM4K,EAAeL,EAAchI,QAAO,SAAC6G,GAAD,OAAOA,EAAE5M,OAASiO,EAAa,MAAI,GAC7ED,EAAmB,CACjBlL,kBACAmC,eAAgBmJ,EAAatR,GAC7BkI,gBAGFmJ,EAAe,IACfD,EAAgB,KAIhB,UACE,eAAC1O,EAAA,EAAKE,MAAN,WACE,cAACF,EAAA,EAAKK,MAAN,UAAa9D,EAAE,gCACf,cAAC,KAAD,CACEe,GAAG,yBACHuR,SAAS,OACTC,QAASP,EAAc1H,KAAI,SAACuG,GAAD,OAAOA,EAAE5M,QACpC2K,YAAa5O,EAAE,sBACfmE,SAAUgO,EACVK,SAAUN,OAGd,eAACzO,EAAA,EAAKE,MAAN,CAAY1C,UAAU,OAAO4C,UAAU,cAAvC,UACE,cAACJ,EAAA,EAAKK,MAAN,UAAa9D,EAAE,iBACf,cAACyD,EAAA,EAAKM,QAAN,CACErD,GAAG,WACHuD,KAAK,cACLK,KAAM,EACNJ,MAAO+E,EACP9E,SAAU,SAAC6H,GAAD,OAAOoG,EAAepG,EAAE7B,OAAOjG,aAG7C,cAACO,EAAA,EAAD,CAAQxD,UAAU,eAAe+C,KAAK,SAAtC,SAAgDhE,EAAE,qCC2CzCyS,GAjFS,SAAC,GAAyB,IAAvB1L,EAAsB,EAAtBA,gBACjB/G,EAAMC,cAAND,EAER,EAAwB6F,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0CF,mBAAS,IAAnD,mBAAOmM,EAAP,KAAsBU,EAAtB,KAEArD,IAAM7B,WAAU,WACd7G,KACG3E,MAAK,SAAC2P,GACLe,EAAiBf,MAElB/K,OAAM,SAAC/B,GAGNgC,QAAQC,IAAIjC,QAEf,IAEH,IAAMmB,EAAmB,kBAAMD,GAASD,IAGlC6M,EAA8B,SAACC,GACnCtH,EAAyBsH,GACtB5Q,MAAK,WACJgE,IACAV,EAAWtF,EAAE,iCAEd4G,OAAM,SAAC/B,GAENgC,QAAQC,IAAIjC,GACZmB,IACAtB,EAAS1E,EAAE,gCAiBjB,OACE,sBAAKe,GAAG,kBAAR,UACE,cAAC0D,EAAA,EAAD,CAAQxD,UAAU,YAAYI,QAAS2E,EAAkBjF,GAAG,SAA5D,SACGf,EAAE,2BAEL,eAACiG,EAAA,EAAD,CACEH,KAAMA,EACNI,OAAQF,EACRG,SAAS,SACTC,UAAU,EAJZ,UAME,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMM,MAAP,UAAcvG,EAAE,uBAElB,cAACiG,EAAA,EAAMO,KAAP,UACE,eAACqJ,GAAA,EAAD,CAAMC,iBAAiB,SAAS/O,GAAG,gBAAgBE,UAAU,OAA7D,UACE,cAAC8O,GAAA,EAAD,CAAKzO,SAAS,SAASH,MAAOnB,EAAE,kBAAhC,SACE,cAAC,GAAD,CACEgS,cAAeA,EACfC,mBAAoBU,EACpB5L,gBAAiBA,MAGrB,cAACgJ,GAAA,EAAD,CAAKzO,SAAS,MAAMH,MAAOnB,EAAE,uBAA7B,SACE,cAAC,GAAD,CAAqB6R,gBApCH,SAACgB,GAC7BlM,GAAe,CAAE1C,KAAM4O,EAAmB5O,OACvCjC,MAAK,SAACiO,GACL,IAAM/G,EAAiB+G,EAAI,GAAGlP,GAC9B4R,EAA4B,CAC1B5L,kBACAmC,iBACAD,YAAa4J,EAAmB5J,kCCnC3B6J,GAdW,SAAC,GAAD,IACxB/L,EADwB,EACxBA,gBAAiB9C,EADO,EACPA,KAAMlE,EADC,EACDA,MADC,OAGxB,eAACsI,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,UACE,cAACF,EAAA,EAAKhC,OAAN,UAAcpC,IACd,eAACoE,EAAA,EAAK7B,KAAN,WACE,cAAC,GAAD,CAAkBO,gBAAiBA,IAClChH,GACC,cAAC,GAAD,CAAiBgH,gBAAiBA,WCoB3BgM,GA7Be,SAAC,GAAuB,IAArB/L,EAAoB,EAApBA,OAAQjH,EAAY,EAAZA,MACvC,EAA4D8F,mBAAS,IAArE,mBAAOmN,EAAP,KAA+BC,EAA/B,KAcA,OAZA5D,IAAM7B,WAAU,WACdlC,GAAyBtE,GACtBhF,MAAK,SAACkR,GACLD,EAA0BC,MAE3BtM,OAAM,SAAC/B,GAGNgC,QAAQC,IAAIjC,QAEf,IAGD,qBAAK,cAAY,gBAAjB,SACGmO,EAAuB1I,KAAI,SAACuG,GAAD,OAC1B,cAAC,GAAD,CAEE9J,gBAAiB8J,EAAE9J,gBACnB9C,KAAM4M,EAAE5M,KACRlE,MAAOA,GAHF8Q,EAAE9P,UCpBXc,GAAU,0BAYD,GAVA,WAEb,OADgBC,IAAMC,IAAIF,GAASH,KACpBM,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ9B,GALA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,GAASM,EAAWT,KAChCM,MAAK,SAACC,GAAD,OAAcA,EAASC,SCgD9BiR,GApDkB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,qBAC1BpT,EAAMC,cAAND,EAEFqT,EAA6B1Q,MAAaC,MAAM,CACpDqB,KAAMtB,MACHE,IAAI,EAAG7C,EAAE,iBACT8C,IAAI,IAAK9C,EAAE,gBACX+C,SAAS/C,EAAE,sBAShB,OACE,cAAC,IAAD,CACEkD,cAAe,CACbe,KAAM,IAERd,iBAAkBkQ,EAClBjQ,SAZ+B,SAACC,GAClC+P,EAAqB,CACnBnP,KAAMZ,EAAOY,QAKf,SAOG,gBACCX,EADD,EACCA,aACAC,EAFD,EAECA,aACAF,EAHD,EAGCA,OACAG,EAJD,EAICA,OAJD,OAMC,eAACC,EAAA,EAAD,CAAMC,YAAU,EAACN,SAAUE,EAA3B,UACE,eAACG,EAAA,EAAKE,MAAN,CAAYC,GAAG,IAAIC,UAAU,OAA7B,UACE,cAACJ,EAAA,EAAKK,MAAN,UAAa9D,EAAE,0BACf,cAACyD,EAAA,EAAKM,QAAN,CACEC,KAAK,OACLC,KAAK,OACL2K,YAAa5O,EAAE,SACfkE,MAAOb,EAAOY,KACdE,SAAUZ,EACVa,YAAaZ,EAAOS,OAEtB,cAACR,EAAA,EAAKM,QAAQM,SAAd,CAAuBL,KAAK,UAAU6K,KAAK,QAAQ,aAAW,gBAA9D,SACGrL,EAAOS,UAGZ,cAACQ,EAAA,EAAD,CAAQxD,UAAU,eAAe+C,KAAK,SAAtC,SAAgDhE,EAAE,6CCZ7CsT,GAlCqB,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,mBAAoBC,EAAsC,EAAtCA,wBAAyBxM,EAAa,EAAbA,OAC1EhH,EAAMC,cAAND,EAER,EAAwC6F,mBAAS,IAAjD,mBAAOqM,EAAP,KAAqBC,EAArB,KAaA,OACE,eAAC1O,EAAA,EAAD,CAAML,SAZyB,SAACoE,GAChCA,EAAMC,iBACN,IAAMgM,EAAoBF,EAAmBvJ,QAAO,SAAC6G,GAAD,OAAOA,EAAE5M,OAASiO,EAAa,MAAI,GACvFsB,EAAwB,CACtBxM,SACA0M,oBAAqBD,EAAkB1S,KAGzCoR,EAAgB,KAIhB,UACE,eAAC1O,EAAA,EAAKE,MAAN,WACE,cAACF,EAAA,EAAKK,MAAN,UAAa9D,EAAE,qCACf,cAAC,KAAD,CACEe,GAAG,yBACHuR,SAAS,OACTC,QAASgB,EAAmBjJ,KAAI,SAACuG,GAAD,OAAOA,EAAE5M,QACzC2K,YAAa5O,EAAE,2BACfmE,SAAUgO,EACVK,SAAUN,OAGd,cAACzN,EAAA,EAAD,CAAQxD,UAAU,eAAe+C,KAAK,SAAtC,SAAgDhE,EAAE,0CCwDzC2T,GAhFc,SAAC,GAAgB,IAAd3M,EAAa,EAAbA,OACtBhH,EAAMC,cAAND,EAER,EAAwB6F,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoDF,mBAAS,IAA7D,mBAAO0N,EAAP,KAA2BK,EAA3B,KAEAvE,IAAM7B,WAAU,WACd7G,KACG3E,MAAK,SAACkR,GACLU,EAAsBV,MAEvBtM,OAAM,SAAC/B,GAGNgC,QAAQC,IAAIjC,QAEf,IAEH,IAAMmB,EAAmB,kBAAMD,GAASD,IAGlC+N,EAAmC,SAAC1R,GACxCmJ,GAAyBnJ,GACtBH,MAAK,WACJgE,IACAV,EAAWtF,EAAE,sCAEd4G,OAAM,SAAC/B,GAENgC,QAAQC,IAAIjC,GACZmB,IACAtB,EAAS1E,EAAE,qCAgBjB,OACE,gCACE,cAACyE,EAAA,EAAD,CAAQxD,UAAU,YAAYI,QAAS2E,EAAkBjF,GAAG,SAA5D,SACGf,EAAE,gCAEL,eAACiG,EAAA,EAAD,CACEH,KAAMA,EACNI,OAAQF,EACRG,SAAS,SACTC,UAAU,EAJZ,UAME,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMM,MAAP,UAAcvG,EAAE,4BAElB,cAACiG,EAAA,EAAMO,KAAP,UACE,eAACqJ,GAAA,EAAD,CAAMC,iBAAiB,SAAS/O,GAAG,qBAAqBE,UAAU,OAAlE,UACE,cAAC8O,GAAA,EAAD,CAAKzO,SAAS,SAASH,MAAOnB,EAAE,kBAAhC,SACE,cAAC,GAAD,CACEuT,mBAAoBA,EACpBC,wBAAyBK,EACzB7M,OAAQA,MAGZ,cAAC+I,GAAA,EAAD,CAAKzO,SAAS,MAAMH,MAAOnB,EAAE,uBAA7B,SACE,cAAC,GAAD,CAA0BoT,qBAnCH,SAACU,GAClCnN,GAAe,CAAE1C,KAAM6P,EAAwB7P,OAC5CjC,MAAK,SAACiO,GACL,IAAMyD,EAAsBzD,EAAI,GAAGlP,GACnC8S,EAAiC,CAC/B7M,SACA0M,4CC3BKK,GAnBO,SAAC,GAAe,IAAbhU,EAAY,EAAZA,MACfC,EAAMC,cAAND,EACAe,EAAO6J,cAAP7J,GAER,OACE,sBAAKA,GAAG,UAAR,UACE,6BACGf,EAAE,mBAEJD,GACC,8BACE,cAAC,GAAD,CAAsBiH,OAAQjG,MAGlC,cAAC,GAAD,CAAuBiG,OAAQjG,EAAIhB,MAAOA,QCSjCiU,GA5BE,SAAC,GAAqB,IAAnB5L,EAAkB,EAAlBA,EAAG6L,EAAe,EAAfA,SACbjU,EAAMC,cAAND,EAER,EAAkC6F,mBAASuC,EAAEnF,QAA7C,mBAAOiR,EAAP,KAAkBC,EAAlB,KAeA,OACE,8BACE,uBAAM/Q,SAfqB,SAACoE,GAC9BA,EAAMC,iBACNwM,EAAS,CACP9S,MAAOiH,EAAEjH,MACT6B,UAAWoF,EAAEpF,UACbC,OAAQiR,KAUR,UACE,uBAAOvK,QAAQ,SAAS1I,UAAU,SAAlC,SAAwDjB,EAAZkU,EAAc,2BAAgC,gCAC1F,uBAAOnT,GAAG,aAAaE,UAAU,WAAW+C,KAAK,SAAS3C,QARrC,WACzB8S,GAAcD,IAO6E3M,KAAK,KAAKrD,MAAmBlE,EAAZkU,EAAc,2BAAgC,sCCwC/IE,GA3DS,SAAC,GAA4B,IAA1BhM,EAAyB,EAAzBA,EAAGiM,EAAsB,EAAtBA,gBACpBrU,EAAMC,cAAND,EAER,EAA0B6F,mBAASuC,EAAEjH,OAArC,mBAAOA,EAAP,KAAcmT,EAAd,KAEMC,EAAa5R,MAAaC,MAAM,CACpCzB,MAAOwB,MACJE,IAAI,EAAG7C,EAAE,iBACT8C,IAAI,IAAK9C,EAAE,gBACX+C,SAAS/C,EAAE,sBAahB,OACE,cAAC,IAAD,CACEkD,cAAe,CACb/B,SAEFgC,iBAAkBoR,EAClBnR,SAhBsB,SAACC,GACzBgR,EAAgB,CACdlT,MAAOkC,EAAOlC,MACd6B,UAAWoF,EAAEpF,UACbC,OAAQmF,EAAEnF,SAGZqR,EAASjR,EAAOlC,QAIhB,SAOG,gBACCmC,EADD,EACCA,aACAC,EAFD,EAECA,aACAF,EAHD,EAGCA,OACAG,EAJD,EAICA,OAJD,OAMC,cAACC,EAAA,EAAD,CAAMC,YAAU,EAACN,SAAUE,EAA3B,SACE,eAACG,EAAA,EAAKE,MAAN,CAAY1C,UAAU,OAAO4C,UAAU,cAAcyE,MAAO,CAAEC,MAAO,SAArE,UACE,cAAC9E,EAAA,EAAKM,QAAN,CACE9C,UAAU,mBACV+C,KAAK,OACLC,KAAK,QACLC,MAAOb,EAAOlC,MACdgD,SAAUZ,EACVa,YAAaZ,EAAOrC,QAEtB,cAACsC,EAAA,EAAKgF,KAAN,CAAWxH,UAAU,aAArB,SACGjB,EAAE,0BAEL,cAACyD,EAAA,EAAKM,QAAQM,SAAd,CAAuBL,KAAK,UAAU6K,KAAK,QAAQ,aAAW,gBAA9D,SACGrL,EAAOrC,iBCQPqT,GA1DS,SAAC,GAA4B,IAA1BpM,EAAyB,EAAzBA,EAAGqM,EAAsB,EAAtBA,gBACpBzU,EAAMC,cAAND,EAER,EAAkC6F,mBAASuC,EAAEpF,WAA7C,mBAAOA,EAAP,KAAkB0R,EAAlB,KAEMH,EAAa5R,MAAaC,MAAM,CACpCI,UAAWL,MACRE,IAAI,EAAG7C,EAAE,iBACT8C,IAAI,IAAM9C,EAAE,gBACZ+C,SAAS/C,EAAE,sBAahB,OACE,cAAC,IAAD,CACEkD,cAAe,CACbF,aAEFG,iBAAkBoR,EAClBnR,SAhB0B,SAACC,GAC7BoR,EAAgB,CACdtT,MAAOiH,EAAEjH,MACT6B,UAAWK,EAAOL,UAClBC,OAAQmF,EAAEnF,SAGZyR,EAAarR,EAAOL,YAIpB,SAOG,gBACCM,EADD,EACCA,aACAC,EAFD,EAECA,aACAF,EAHD,EAGCA,OACAG,EAJD,EAICA,OAJD,OAMC,cAACC,EAAA,EAAD,CAAMC,YAAU,EAACN,SAAUE,EAA3B,SACE,eAACG,EAAA,EAAKE,MAAN,CAAY1C,UAAU,OAAO4C,UAAU,kBAAkByE,MAAO,CAAEC,MAAO,SAAzE,UACE,cAAC9E,EAAA,EAAKM,QAAN,CACEC,KAAK,OACLC,KAAK,YACLC,MAAOb,EAAOL,UACdmB,SAAUZ,EACVa,YAAaZ,EAAOR,YAEtB,cAACS,EAAA,EAAKgF,KAAN,CAAWxH,UAAU,aAArB,SACGjB,EAAE,8BAEL,cAACyD,EAAA,EAAKM,QAAQM,SAAd,CAAuBL,KAAK,UAAU6K,KAAK,QAAQ,aAAW,gBAA9D,SACGrL,EAAOR,qBCAP2R,GA9CG,SAAC,GAAsB,IAApB9K,EAAmB,EAAnBA,MAAO9J,EAAY,EAAZA,MAClBC,EAAMC,cAAND,EACAe,EAAO6J,cAAP7J,GACFqH,EAAIyB,EAAM+K,MAAK,SAAC/G,GAAD,OAAOA,EAAE9M,KAAO8T,OAAO9T,MAM5C,EAAsC8E,mBAASuC,GAA/C,mBAAoB0M,GAApB,WAGMC,EAAmB,SAACC,GACxBrO,EAAeyB,EAAErH,GAAIiU,GAClBhT,MAAK,WACJ8S,EAAeE,GACf1P,EAAWtF,EAAE,yBAEd4G,OAAM,SAAC/B,GAENgC,QAAQC,IAAIjC,GACZH,EAAS1E,EAAE,wBAIjB,OACE,sBAAKe,GAAG,UAAR,UACIhB,GAASqI,GACT,sBAAKnH,UAAU,OAAf,UACE,cAAC,GAAD,CAAiBmH,EAAGA,EAAGiM,gBAAiBU,IACxC,cAAC,GAAD,CAAiB3M,EAAGA,EAAGqM,gBAAiBM,IACxC,cAAC,GAAD,CAAU3M,EAAGA,EAAG6L,SAAUc,QAG3BhV,GAASqI,GACV,4BAAIA,EAAEjH,QAENiH,GACA,qBAAKnH,UAAU,YAAf,SACE,4BAAImH,EAAEpF,kBCnCDiS,GAVE,WACf,IAAQjV,EAAMC,cAAND,EAER,OACE,qBAAKe,GAAG,UAAR,SACE,6BAAKf,EAAE,iBC4CEkV,GAnCC,SAAC,GAAD,IAAGnV,EAAH,EAAGA,MAAO8J,EAAV,EAAUA,MAAV,OACd,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsL,KAAK,aAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACGpV,EAAQ,cAAC,GAAD,IAAY,cAAC,IAAD,CAAUa,GAAG,QAEpC,eAAC,IAAD,CAAOuU,KAAK,wBAAZ,UACE,cAAC,GAAD,CAAMtL,MAAOA,EAAO9J,MAAOA,IAC3B,cAAC,GAAD,CAAYA,MAAOA,OAErB,cAAC,IAAD,CAAOoV,KAAK,2BAAZ,SACE,cAAC,GAAD,CAAWpV,MAAOA,MAEpB,eAAC,IAAD,CAAOoV,KAAK,2BAAZ,UACE,cAAC,GAAD,CAAMtL,MAAOA,EAAO9J,MAAOA,IAC3B,cAAC,GAAD,CAAeA,MAAOA,OAExB,eAAC,IAAD,CAAOoV,KAAK,aAAZ,UACE,cAAC,GAAD,CAAMtL,MAAOA,EAAO9J,MAAOA,IAC3B,cAAC,GAAD,CAAW8J,MAAOA,EAAO9J,MAAOA,OAElC,cAAC,IAAD,CAAOoV,KAAK,SAAZ,SACGpV,EAAQ,cAAC,GAAD,IAAe,cAAC,IAAD,CAAUa,GAAG,QAEvC,cAAC,IAAD,CAAOuU,KAAK,IAAZ,SACE,cAAC,GAAD,CAAWpV,MAAOA,EAAO8J,MAAOA,UCQtBuL,GAvCJ,WACV,MAAwBvP,mBAAS,MAAjC,mBAAO/F,EAAP,KAAauV,EAAb,KACA,EAA0BxP,oBAAS,GAAnC,mBAAO9F,EAAP,KAAcuV,EAAd,KACA,EAA0BzP,mBAAS,IAAnC,mBAAOgE,EAAP,KAAc0L,EAAd,KAsBA,OAnBAlG,IAAM7B,WAAU,WACd7G,IAEG3E,MAAK,SAACC,GrDxBW,IAACuT,EqD0BjB3O,QAAQC,IAAI7E,GrD1BKuT,EqD2BRvT,EAASnC,KAAK2B,MrD1B7BA,EAAK,iBAAa+T,GqD2BZF,EAASrT,EAASnC,KAAKC,OACvBsV,EAAQpT,EAASnC,KAAKmE,MACtBsR,EAAStT,EAASC,MAElB2E,QAAQC,IAAIhH,MAEb8G,OAAM,SAAC/B,GAENgC,QAAQC,IAAIjC,QAEf,IAGD,eAAC,IAAD,WACE,cAAC,EAAD,CACE/E,MAAM,EACNC,MAAOA,EACP8J,MAAOA,IAET,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,CAASA,MAAOA,EAAO9J,MAAOA,QCrChB0V,QACW,cAA7BnM,OAAOoM,SAASC,UACoB,UAA7BrM,OAAOoM,SAASC,UAEhBrM,OAAOoM,SAASC,SAASC,MAC1B,2DCVRC,IAASC,OACP,cAAC,GAAD,IACAC,SAASC,eAAe,SD4GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnU,MAAK,SAACoU,GACLA,EAAaC,kB","file":"static/js/main.a844bd4f.chunk.js","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* istanbul ignore file */\r\n/* eslint-disable linebreak-style */\r\nimport i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n// eslint-disable-next-line import/no-unresolved\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\ni18n.use(LanguageDetector).init();\r\n\r\ni18n.use(initReactI18next).init({\r\n  fallbackLng: 'fi',\r\n\r\n  // eslint-disable-next-line no-undef\r\n  lng: localStorage.getItem('i18nextLng') || 'fi',\r\n  resources: {\r\n    fi: {\r\n      // eslint-disable-next-line global-require\r\n      translations: require('./locales/fi/translations.json'),\r\n    },\r\n    en: {\r\n      // eslint-disable-next-line global-require\r\n      translations: require('./locales/en/translations.json'),\r\n    },\r\n  },\r\n  ns: ['translations'],\r\n  defaultNS: 'translations',\r\n});\r\n\r\ni18n.languages = ['fi', 'en'];\r\n\r\nexport default i18n;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavLink,\r\n  NavDropdown,\r\n} from 'react-bootstrap';\r\n\r\n// Import translations\r\nimport { useTranslation } from 'react-i18next';\r\nimport i18n from '../../i18n/config';\r\n\r\nconst Navigationbar = ({\r\n  user, admin,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  /* istanbul ignore next */\r\n  const changeLanguage = (language) => {\r\n    i18n.changeLanguage(language);\r\n  };\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\" sticky=\"top\">\r\n      <Navbar.Brand as={Link} to=\"/\">{t('nameOfTheGame')}</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <NavDropdown title={t('selectLanguage')} id=\"selectLanguage\" className=\"navItems\">\r\n            <NavDropdown.Item onClick={() => changeLanguage('fi')} eventKey=\"fi\">{t('languageFinnish')}</NavDropdown.Item>\r\n            <NavDropdown.Item onClick={() => changeLanguage('en')} eventKey=\"en\">{t('languageEnglish')}</NavDropdown.Item>\r\n          </NavDropdown>\r\n          { admin && (\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/users\" className=\"navItems\">{t('userInformation')}</NavLink>\r\n          </Nav.Item>\r\n          )}\r\n          { admin && (\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/files\" className=\"navItems\">{t('fileBank')}</NavLink>\r\n          </Nav.Item>\r\n          )}\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/howtoplay\" className=\"navItems\">{t('howToPlay')}</NavLink>\r\n          </Nav.Item>\r\n          { user && (\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/profile\" className=\"navItems\">{t('userProfile')}</NavLink>\r\n          </Nav.Item>\r\n          )}\r\n          <Nav.Item>\r\n            <NavLink href=\"https://taudinpurkauspeli-taudinpurkauspeli2021.apps.ocp-prod-0.k8s.it.helsinki.fi/Shibboleth.sso/Logout\" className=\"navItems\">{t('logOut')}</NavLink>\r\n          </Nav.Item>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigationbar;\r\n","let token = null;\r\n\r\nexport const setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nexport const getConfig = () => ({ headers: { Authorization: token } });\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\nimport { getConfig } from '../utils/Helper';\r\n\r\nconst baseUrl = '/api/cases';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject, getConfig());\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove,\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\n\r\nconst Sidebar = () => (\r\n  <div id=\"sidebar\" />\r\n);\r\n\r\nexport default Sidebar;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst newCaseForm = ({ addCase }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const newCaseSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n      .min(2, t('warningShort'))\r\n      .max(999, t('warningLong'))\r\n      .required(t('warningRequired')),\r\n    anamnesis: Yup.string(),\r\n    hidden: Yup.bool(),\r\n  });\r\n\r\n  const handleCaseAdd = (values) => {\r\n    addCase({\r\n      title: values.title,\r\n      anamnesis: values.anamnesis,\r\n      hidden: values.hidden,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        title: '',\r\n        anamnesis: '',\r\n        hidden: false,\r\n      }}\r\n      validationSchema={newCaseSchema}\r\n      onSubmit={handleCaseAdd}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        values,\r\n        errors,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Group md=\"6\" controlId=\"title\">\r\n            <Form.Label>{t('caseTitle')}</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.title}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.title}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"anamnesis\">\r\n            <Form.Label>{t('caseAnamnesis')}</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              name=\"anamnesis\"\r\n              rows={3}\r\n              value={values.anamnesis}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"hidden\">\r\n            <Form.Check\r\n              required\r\n              name=\"hidden\"\r\n              label={t('hideCase')}\r\n              value={values.hidden}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button className=\"submitButton\" id=\"submit-case\" type=\"submit\">{t('buttonSubmitNewCase')}</Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default newCaseForm;\r\n","/* istanbul ignore file */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable no-undef */\r\nimport React from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst MessageBanner = () => (\r\n  <ToastContainer\r\n    position=\"top-center\"\r\n    autoClose={3000}\r\n    hideProgressBar\r\n    newestOnTop={false}\r\n    closeOnClick\r\n    rtl={false}\r\n    pauseOnFocusLoss={false}\r\n    draggable={false}\r\n    pauseOnHover\r\n  />\r\n);\r\n\r\nexport const setError = (message) => {\r\n  toast.error(message, {\r\n    position: 'top-center',\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: false,\r\n    draggable: false,\r\n    progress: undefined,\r\n  });\r\n};\r\n\r\nexport const setSuccess = (message) => {\r\n  toast.success(message, {\r\n    position: 'top-center',\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: false,\r\n    draggable: false,\r\n    progress: undefined,\r\n  });\r\n};\r\n\r\nexport default MessageBanner;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Button, Modal,\r\n} from 'react-bootstrap';\r\n\r\nimport service from '../../services/cases';\r\nimport NewCaseForm from './NewCaseForm';\r\nimport { setSuccess, setError } from '../../utils/MessageBanner';\r\n\r\nconst NewCase = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const toggleVisibility = () => setShow(!show);\r\n\r\n  /* istanbul ignore next */\r\n  const handleCaseAdd = (newCase) => {\r\n    service.create(newCase)\r\n      .then(() => {\r\n        toggleVisibility();\r\n        setSuccess(t('caseAddSuccess'));\r\n      })\r\n      .catch((error) => {\r\n        // eslint-disable-next-line no-console\r\n        console.log(error);\r\n        toggleVisibility();\r\n        setError(t('caseAddError'));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"addButton\" onClick={toggleVisibility} id=\"addNew\">\r\n        {t('buttonNewCase')}\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        onHide={toggleVisibility}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{t('addCase')}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <NewCaseForm addCase={handleCaseAdd} />\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewCase;\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\nimport { getConfig } from '../../utils/Helper';\r\n\r\nconst baseUrl = '/api/differentialsUnderCases';\r\n\r\nconst getAll = (diffGroupCaseId) => {\r\n  const request = axios.get(`${baseUrl}/${diffGroupCaseId}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject, getConfig());\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\nimport { getConfig } from '../../utils/Helper';\r\n\r\nconst baseUrl = '/api/proceduresUnderCases';\r\n\r\nconst getAll = (caseId) => {\r\n  const request = axios.get(`${baseUrl}/${caseId}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject, getConfig());\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n};\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport { Button } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport caseService from '../../services/cases';\r\nimport ducService from '../../services/differentials/differentialsUnderCases';\r\nimport pucService from '../../services/procedures/proceduresUnderCase';\r\n\r\nconst copyCase = ({\r\n  caseToBeCopied, createProcedures, createDifferentials,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const oldCaseId = caseToBeCopied.id;\r\n  // eslint-disable-next-line no-unused-vars\r\n  let newCopyId = 0;\r\n\r\n  /* istanbul ignore next */\r\n  const handleCopy = (event) => {\r\n    event.preventDefault();\r\n    const caseObject = ({\r\n      title: caseToBeCopied.title,\r\n      anamnesis: caseToBeCopied.anamnesis,\r\n      hidden: caseToBeCopied.hidden,\r\n    });\r\n    caseService.create(caseObject)\r\n      .then((copy) => {\r\n        newCopyId = copy.id;\r\n      })\r\n      .then(() => {\r\n        ducService.getAll(oldCaseId)\r\n          .then((result) => {\r\n            createDifferentials(newCopyId, result);\r\n          });\r\n      })\r\n      .then(() => {\r\n        pucService.getAll(oldCaseId)\r\n          .then((result) => {\r\n            createProcedures(newCopyId, result);\r\n          });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Button variant=\"warning\" size=\"sm\" onClick={handleCopy}>{t('copy')}</Button>\r\n  );\r\n};\r\n\r\nexport default copyCase;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport { Button } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst removeCase = ({ caseToBeRemoved, deleteCase }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const handleDelete = (event) => {\r\n    event.preventDefault();\r\n    deleteCase(caseToBeRemoved.id);\r\n  };\r\n\r\n  return (\r\n    <Button className=\"removeButton\" size=\"sm\" variant=\"danger\" onClick={handleDelete}>{t('buttonRemove')}</Button>\r\n  );\r\n};\r\n\r\nexport default removeCase;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Card,\r\n  Button,\r\n  ProgressBar,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport CopyCase from './CopyCase';\r\nimport RemoveCase from './RemoveCase';\r\nimport { setError, setSuccess } from '../../utils/MessageBanner';\r\nimport caseService from '../../services/cases';\r\nimport ducService from '../../services/differentials/differentialsUnderCases';\r\nimport pucService from '../../services/procedures/proceduresUnderCase';\r\n\r\nconst CaseCard = ({ c, admin }) => {\r\n  const { t } = useTranslation();\r\n\r\n  /* istanbul ignore next */\r\n  const createDifferentials = (copyId, result) => {\r\n    for (let i = 0; i < result.length; i += 1) {\r\n      const { id, description } = result[i];\r\n      const object = {\r\n        caseId: copyId,\r\n        differentialId: id,\r\n        description,\r\n      };\r\n      ducService.create(object);\r\n    }\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const createProcedures = (copyId, result) => {\r\n    for (let i = 0; i < result.length; i += 1) {\r\n      const { procedureId, priority } = result[i];\r\n      const object = {\r\n        caseId: copyId,\r\n        procedureId,\r\n        priority,\r\n      };\r\n      pucService.create(object);\r\n    }\r\n  };\r\n\r\n  /* istanbull ignore next */\r\n  const handleCaseRemove = () => {\r\n    // eslint-disable-next-line no-alert\r\n    const confirmBox = window.confirm(t('deleteCaseConfirmation'));\r\n    if (confirmBox === true) {\r\n      caseService.remove(c.id)\r\n        .then(() => setSuccess(t('deleteCaseSuccess')))\r\n        .catch(() => setError(t('deleteCaseError')));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card as={Link} to={`/cases/${c.id}`} style={{ width: '20rem', cursor: 'pointer' }} className=\"caseCard\">\r\n        <Card.Body>\r\n          <Card.Title>{c.title}</Card.Title>\r\n          <Card.Text>{c.anamnesis}</Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <ProgressBar className=\"progsbar\" variant=\"success\" now={25} label={`${25}%`} />\r\n        </Card.Footer>\r\n      </Card>\r\n\r\n      { admin && (\r\n        <div className=\"cardButtons\">\r\n          <Button className=\"editButton\" as={Link} to={`/cases/${c.id}`} size=\"sm\">{t('buttonEdit')}</Button>\r\n          <CopyCase\r\n            caseToBeCopied={c}\r\n            createDifferentials={createDifferentials}\r\n            createProcedures={createProcedures}\r\n          />\r\n          <RemoveCase caseToBeRemoved={c} deleteCase={handleCaseRemove} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CaseCard;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Search = ({ newSearch, searchCases }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"search\">\r\n        {t('searchByTitle')}\r\n        &nbsp;\r\n        <input\r\n          id=\"search\"\r\n          value={newSearch}\r\n          onChange={searchCases}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable array-callback-return */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Col,\r\n  Row,\r\n} from 'react-bootstrap';\r\n\r\nimport NewCase from '../case/NewCase';\r\nimport CaseCard from '../case/CaseCard';\r\nimport Search from './Search';\r\n\r\nconst Frontpage = ({ cases, admin }) => {\r\n  const { t } = useTranslation();\r\n  const [newSearch, setNewSearch] = useState('');\r\n\r\n  const searchCases = (event) => {\r\n    setNewSearch(event.target.value);\r\n  };\r\n\r\n  const casesToShow = !newSearch\r\n    ? cases : cases.filter((c) => c.title.toLowerCase().includes(newSearch.toLowerCase()));\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('frontpageTitle')}</h2>\r\n      <p>{t('frontpageText')}</p>\r\n      <Search newSearch={newSearch} searchCases={searchCases} />\r\n      <br />\r\n      {admin && (\r\n        <div>\r\n          <NewCase />\r\n          <br />\r\n          <h3>{t('caseHidden')}</h3>\r\n          <hr />\r\n        </div>\r\n      )}\r\n      <Row xs=\"auto\" md=\"auto\" className=\"g-4\">\r\n        {admin && (\r\n          casesToShow.filter((c) => c.hidden).map((c) => (\r\n            <Col key={c.id}>\r\n              <CaseCard c={c} admin={admin} />\r\n            </Col>\r\n          ))\r\n        )}\r\n      </Row>\r\n      <br />\r\n      <h3>{t('casePlayable')}</h3>\r\n      <hr />\r\n      <Row xs=\"auto\" md=\"auto\" className=\"g-4\">\r\n        {casesToShow.filter((c) => !c.hidden).map((c) => (\r\n          <Col key={c.id}>\r\n            <CaseCard c={c} admin={admin} />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default Frontpage;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst HowToPlay = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('howToPlay')}</h2>\r\n      <p>{t('gameInstructions')}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HowToPlay;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Profile = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('userProfile')}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Users = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('userInformation')}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Link, useParams,\r\n} from 'react-router-dom';\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\n\r\nconst Case = () => {\r\n  const { t } = useTranslation();\r\n  const { id } = useParams();\r\n  const baseUrl = `/cases/${id}`;\r\n\r\n  return (\r\n\r\n    <div id=\"wrapper\">\r\n      <ButtonGroup>\r\n        <Button className=\"tabs\" as={Link} to={baseUrl} disabled>{t('caseAnamnesis')}</Button>\r\n        <Button className=\"tabs\" as={Link} to={`${baseUrl}/procedures`}>{t('caseProcedures')}</Button>\r\n        <Button className=\"tabs\" as={Link} to={`${baseUrl}/differentials`}>{t('caseDifferentials')}</Button>\r\n      </ButtonGroup>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Case;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst newProcedureForm = ({ addProcedure }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const newProcedureSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n      .min(2, t('warningShort'))\r\n      .max(999, t('warningLong'))\r\n      .required(t('warningRequired')),\r\n  });\r\n\r\n  const handleProcedureAdd = (values) => {\r\n    addProcedure({\r\n      title: values.title,\r\n      anamnesis: values.anamnesis,\r\n      hidden: values.hidden,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        title: '',\r\n      }}\r\n      validationSchema={newProcedureSchema}\r\n      onSubmit={handleProcedureAdd}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        values,\r\n        errors,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Group md=\"6\" controlId=\"title\">\r\n            <Form.Label>{t('procedureTitle')}</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.title}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.title}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Button type=\"submit\" className=\"submitButton\">{t('buttonSubmitNewProcedure')}</Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default newProcedureForm;\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\nimport { getConfig } from '../../utils/Helper';\r\n\r\nconst baseUrl = '/api/procedures';\r\n\r\nconst getAll = (id) => {\r\n  const request = axios.get(`${baseUrl}/${id}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject, getConfig());\r\n\r\nexport default {\r\n  create,\r\n  getAll,\r\n  update,\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Button, Modal,\r\n} from 'react-bootstrap';\r\n\r\nimport NewProcedureForm from './NewProcedureForm';\r\nimport service from '../../services/procedures/procedures';\r\nimport serviceUnderCases from '../../services/procedures/proceduresUnderCase';\r\nimport { setSuccess, setError } from '../../utils/MessageBanner';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst newProcedure = ({ caseId }) => {\r\n  /* istanbul ignore next */\r\n  const { t } = useTranslation();\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const toggleVisibility = () => setShow(!show);\r\n\r\n  /* istanbul ignore next */\r\n  const handleProcedureAdd = (procedureObject) => {\r\n    service.create(procedureObject)\r\n      .then((data) => {\r\n        toggleVisibility();\r\n        setSuccess(t('procedureAddSuccess'));\r\n        const procedureUnderCaseObject = ({\r\n          caseId,\r\n          procedureId: data.id,\r\n          priority: 1,\r\n        });\r\n\r\n        serviceUnderCases.create(procedureUnderCaseObject);\r\n      })\r\n      .catch((error) => {\r\n        // eslint-disable-next-line no-console\r\n        console.log(error);\r\n        toggleVisibility();\r\n        setError(t('procedureAddError'));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"addButton\" onClick={toggleVisibility}>\r\n        {t('buttonNewProcedure')}\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        onHide={toggleVisibility}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{t('addProcedure')}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <NewProcedureForm addProcedure={handleProcedureAdd} />\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default newProcedure;\r\n","/* istanbul ignore file */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-unused-expressions */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport service from '../../services/procedures/procedures';\r\nimport serviceUnderProcedure from '../../services/procedures/proceduresUnderCase';\r\n\r\nconst EditProcedure = ({ procedure, caseId, editProcedureFunc }) => {\r\n  /* istanbul ignore next */\r\n  const [newPriority, setNewPriority] = useState(procedure.proceduresUnderCase.priority);\r\n  /* istanbul ignore next */\r\n  const [newProcedureTitle, setNewProcedureTitle] = useState(procedure.title);\r\n  /* istanbul ignore next */\r\n  const { t } = useTranslation();\r\n  /* istanbul ignore next */\r\n  const history = useHistory();\r\n  const baseUrl = `/cases/${caseId}`;\r\n\r\n  /* istanbul ignore next */\r\n  const handlePriorityChange = (event) => {\r\n    setNewPriority(event.target.value);\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleTitleChange = (event) => {\r\n    setNewProcedureTitle(event.target.value);\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const editProcedure = (event) => {\r\n    event.preventDefault();\r\n    setNewProcedureTitle(event.target[0].value);\r\n    setNewPriority(event.target[1].value);\r\n    // eslint-disable-next-line no-param-reassign\r\n    const procedureUnderCaseObject = ({\r\n      caseId: procedure.proceduresUnderCase.caseId,\r\n      procedureId: procedure.proceduresUnderCase.procedureId,\r\n      priority: event.target[1].value,\r\n    });\r\n\r\n    const procedureObject = ({\r\n      title: event.target[0].value,\r\n    });\r\n\r\n    if (editProcedureFunc != null) {\r\n      editProcedureFunc(procedureUnderCaseObject);\r\n    }\r\n    service.update(procedure.id, procedureObject);\r\n    serviceUnderProcedure.update(procedure.id, procedureUnderCaseObject);\r\n    if (editProcedureFunc == null) {\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"editProcedureForm\" key={procedure.proceduresUnderCase.priority}>\r\n      <h2>{t('editProcedure')}</h2>\r\n      <Button className=\"procedureButton goTo\" as={Link} to={`${baseUrl}/procedure/${procedure.id}`} style={{ margin: 15 }}>{t('goToProcedure')}</Button>\r\n      <form onSubmit={(e) => editProcedure(e)}>\r\n        <p>\r\n          <label htmlFor=\"title\">\r\n            {t('procedureTitle')}\r\n          </label>\r\n          <br />\r\n          <input\r\n            id=\"title\"\r\n            type=\"text\"\r\n            defaultValue={procedure.title}\r\n            onChange={handleTitleChange}\r\n            className=\"formInput\"\r\n          />\r\n        </p>\r\n        <p>\r\n          <label htmlFor=\"priority\">\r\n            {t('procedurePriority')}\r\n          </label>\r\n          <br />\r\n          <input\r\n            id=\"priority\"\r\n            type=\"integer\"\r\n            onChange={handlePriorityChange}\r\n            defaultValue={procedure.proceduresUnderCase.priority}\r\n            className=\"formInput\"\r\n          />\r\n        </p>\r\n        <p>\r\n          <Button input type=\"submit\" id=\"submit\" className=\"submitButton\">{t('buttonSave')}</Button>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProcedure;\r\n","/* istanbul ignore file */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable no-restricted-globals */\r\n/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport service from '../../services/procedures/procedures';\r\nimport EditProcedure from './EditProcedure';\r\nimport serviceUnderProcedure from '../../services/procedures/proceduresUnderCase';\r\n\r\nconst DragNDropList = ({\r\n  proceduresHook, handleDragStart, handleDragEnd, handleDragEnter, t, submitForm,\r\n}) => (\r\n  proceduresHook\r\n    && proceduresHook.map((p, index) => (\r\n      <h4\r\n        onDragStart={(e) => handleDragStart(e, index)}\r\n        onDragEnd={() => handleDragEnd()}\r\n        onDragEnter={(e) => handleDragEnter(e, index)}\r\n        key={index}\r\n        draggable\r\n      >\r\n        <div className=\"rows\">\r\n          <Button className=\"procedureButton\"> {p.proceduresUnderCase.priority} {p.title} </Button>\r\n          <form onSubmit={(e) => submitForm(p, e)} className=\"handleEdits\">\r\n            <Button type=\"submit\" className=\"editButton\" key={index} size=\"sm\">{t('buttonEdit') }</Button>\r\n          </form>\r\n        </div>\r\n      </h4>\r\n    ))\r\n);\r\n\r\nconst ProcedureList = ({ id }) => {\r\n  /* istanbul ignore next */\r\n  const { t } = useTranslation();\r\n  const draggingItem = useRef();\r\n  const dragOverItem = useRef();\r\n  const [proceduresHook, setProceduresHook] = useState([]);\r\n  const [procedureToEdit, setProcedureToEdit] = useState(null);\r\n\r\n  useEffect(() => {\r\n    service\r\n      .getAll(id)\r\n      .then((procedureList) => {\r\n        const list = procedureList[0].procedures;\r\n        list.sort((a, b) => a.proceduresUnderCase.priority - b.proceduresUnderCase.priority);\r\n        setProceduresHook(list);\r\n      });\r\n  }, []);\r\n\r\n  /* istanbul ignore next */\r\n  const handleEditId = (p) => {\r\n    setProcedureToEdit(p);\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const submitForm = (p, e) => {\r\n    e.preventDefault();\r\n    handleEditId(p);\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleDragStart = (e, position) => {\r\n    draggingItem.current = position;\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleDragEnter = (e, position) => {\r\n    dragOverItem.current = position;\r\n    const listCopy = [...proceduresHook];\r\n    const draggingItemContent = listCopy[draggingItem.current];\r\n    listCopy.splice(draggingItem.current, 1);\r\n    listCopy.splice(dragOverItem.current, 0, draggingItemContent);\r\n    draggingItem.current = dragOverItem.current;\r\n    dragOverItem.current = null;\r\n    setProceduresHook(listCopy);\r\n  };\r\n\r\n  const dragDropEditProcedure = (givenProcedure, index) => {\r\n    // eslint-disable-next-line no-param-reassign\r\n    const procedureUnderCaseObject = ({\r\n      caseId: givenProcedure.proceduresUnderCase.caseId,\r\n      procedureId: givenProcedure.proceduresUnderCase.procedureId,\r\n      priority: index + 1,\r\n    });\r\n    // eslint-disable-next-line max-len\r\n    serviceUnderProcedure.update(givenProcedure.proceduresUnderCase.procedureId, procedureUnderCaseObject);\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleDragEnd = () => {\r\n    proceduresHook.map((p, index) => (\r\n      dragDropEditProcedure(p, index)\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DragNDropList\r\n        proceduresHook={proceduresHook}\r\n        handleDragStart={handleDragStart}\r\n        handleDragEnd={handleDragEnd}\r\n        handleDragEnter={handleDragEnter}\r\n        t={t}\r\n        submitForm={submitForm}\r\n      />\r\n      { procedureToEdit ? (\r\n        <EditProcedure procedure={procedureToEdit} caseId={id} />\r\n      ) : (\r\n        <p> </p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedureList;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useParams } from 'react-router-dom';\r\nimport NewProcedure from './NewProcedure';\r\nimport ProcedureList from './ProcedureList';\r\n\r\nconst Procedures = ({ admin }) => {\r\n  /* istanbul ignore next */\r\n  const { t } = useTranslation();\r\n  const { id } = useParams();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('procedures')}</h2>\r\n      { admin && (\r\n        <NewProcedure caseId={id} />\r\n      )}\r\n      <ProcedureList id={id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Procedures;\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\nimport { getConfig } from '../../utils/Helper';\r\n\r\nconst baseUrl = '/api/subProcedures';\r\n\r\nconst getAllId = (id) => {\r\n  const request = axios.get(`${baseUrl}/${id}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject, getConfig());\r\n\r\nexport default {\r\n  create,\r\n  getAllId,\r\n  getAll,\r\n  update,\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\nimport { getConfig } from '../../utils/Helper';\r\n\r\nconst baseUrl = '/api/textSubProcedures';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject, getConfig());\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\n\r\nconst AddTextSubProcedure = ({ handleSubProcedureAdd }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const newTextSubProcedureSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n      .min(2, t('warningShort'))\r\n      .max(999, t('warningLong'))\r\n      .required(t('warningRequired')),\r\n    priority: Yup.string(),\r\n    text: Yup.string(),\r\n  });\r\n\r\n  const innerHandleSubProcedureAdd = (values) => {\r\n    handleSubProcedureAdd({\r\n      priority: values.priority,\r\n      type: 'TEXT',\r\n      title: values.title,\r\n      text: values.text,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        priority: '',\r\n        title: '',\r\n        text: '',\r\n\r\n      }}\r\n      validationSchema={newTextSubProcedureSchema}\r\n      onSubmit={innerHandleSubProcedureAdd}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        values,\r\n        errors,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Group md=\"6\" controlId=\"title\">\r\n            <Form.Label>{t('title')}</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"title\"\r\n              placeholder={t('write')}\r\n              value={values.title}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.title}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n              {errors.title}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group md=\"6\" controlId=\"priority\">\r\n            <Form.Label>{t('subProcedurePriority')}</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"priority\"\r\n              placeholder={t('giveNumber')}\r\n              value={values.priority}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"text\">\r\n            <Form.Label>{t('textToAdd')}</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              name=\"text\"\r\n              rows={10}\r\n              value={values.text}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmit')}</Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddTextSubProcedure;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Button, Modal, Tabs, Tab, Alert,\r\n} from 'react-bootstrap';\r\nimport service from '../../../services/procedures/subProcedures';\r\nimport serviceText from '../../../services/procedures/textSubProcedures';\r\nimport AddTextSubProcedure from './AddTextSubProcedure';\r\n\r\nconst NewTextSubProcedure = ({ proceduresId }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [alertMessage, setAlertMessage] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const [textSubProcedures, setTextSubProcedures] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    service.getAll()\r\n      .then((initialSubs) => {\r\n        setTextSubProcedures(initialSubs);\r\n      })\r\n      .catch((error) => {\r\n        // eslint-disable-next-line\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const toggleVisibility = () => setShow(!show);\r\n\r\n  const handleSuccess = () => {\r\n    toggleVisibility();\r\n    setAlertMessage(t('textSubProcedureUpdateSuccess'));\r\n    setTimeout(() => {\r\n      setAlertMessage(null);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleError = (error) => {\r\n    // eslint-disable-next-line no-console\r\n    console.log(error);\r\n    toggleVisibility();\r\n    setErrorMessage(t('textSubProcedureUpdateError'));\r\n    setTimeout(() => {\r\n      setErrorMessage(null);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleTextSubProcedureAdd = (cowObject) => {\r\n    serviceText.create(cowObject)\r\n      .then(() => handleSuccess())\r\n      .catch((error) => handleError(error));\r\n  };\r\n\r\n  const handleSubProcedureAdd = (subProcedureObject) => {\r\n    service.create({ priority: subProcedureObject.priority, type: subProcedureObject.type })\r\n      .then((res) => {\r\n        const subId = res.id;\r\n        handleTextSubProcedureAdd({\r\n          subProcedureId: subId,\r\n          proceduresUnderCaseProcedureCaseId: proceduresId,\r\n          title: subProcedureObject.title,\r\n          text: subProcedureObject.text,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      { alertMessage !== null && (\r\n      <Alert variant=\"success\">{alertMessage}</Alert>\r\n      )}\r\n      { errorMessage !== null && (\r\n      <Alert variant=\"danger\">{errorMessage}</Alert>\r\n      )}\r\n      <Button className=\"addButton text\" onClick={toggleVisibility} size=\"sm\">\r\n        {t('buttonAddNewText')}\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        onHide={toggleVisibility}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{t('addTextSubProcedure')}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Tabs defaultActiveKey=\"add\" id=\"textSubProcedure\" className=\"mb-3\">\r\n            <Tab eventKey=\"add\" title={t('addNewTextSubProcedure2')}>\r\n              <AddTextSubProcedure handleSubProcedureAdd={handleSubProcedureAdd} />\r\n            </Tab>\r\n          </Tabs>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewTextSubProcedure;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\n\r\nconst UpdateTextSubProcedureForm = ({\r\n  title,\r\n  text,\r\n  handleTextSubProcedureUpdate,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  const updateTextSubProcedureSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n      .min(2, t('warningShort'))\r\n      .max(999, t('warningLong'))\r\n      .required(t('warningRequired')),\r\n    priority: Yup.string(),\r\n    text: Yup.string(),\r\n  });\r\n\r\n  const innerHandleSubProcedureUpdate = (values) => {\r\n    handleTextSubProcedureUpdate({\r\n      title: values.title,\r\n      text: values.text,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        title,\r\n        text,\r\n      }}\r\n      validationSchema={updateTextSubProcedureSchema}\r\n      onSubmit={innerHandleSubProcedureUpdate}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        values,\r\n        errors,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Group md=\"6\" controlId=\"title\">\r\n            <Form.Label>{t('title')}</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"title\"\r\n              placeholder={t('write')}\r\n              value={values.title}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.title}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n              {errors.title}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"text\">\r\n            <Form.Label>{t('textToAdd')}</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              name=\"text\"\r\n              rows={10}\r\n              value={values.text}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\">{t('buttonUpdate')}</Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default UpdateTextSubProcedureForm;\r\n","import React, { useState } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport UpdateTextSubProcedureForm from './UpdateTextSubProcedureForm';\r\nimport service from '../../../services/procedures/textSubProcedures';\r\nimport { setSuccess, setError } from '../../../utils/MessageBanner';\r\n\r\nconst UpdateTextSubProcedure = ({\r\n  title,\r\n  text,\r\n  id,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [show, setShow] = useState(false);\r\n\r\n  const toggleVisibility = () => setShow(!show);\r\n\r\n  /* istanbul ignore next */\r\n  const handleTextSubProcedureUpdate = (updatedObject) => {\r\n    service\r\n      .update(id, updatedObject)\r\n      .then(() => {\r\n        toggleVisibility();\r\n        setSuccess(t('subProcedureUpdateSuccess'));\r\n      })\r\n      .catch(() => {\r\n        toggleVisibility();\r\n        setError(t('subProcedureUpdateError'));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"editButton\" size=\"sm\" onClick={toggleVisibility}>\r\n        {t('buttonEdit')}\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        onHide={toggleVisibility}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{t('updateSubProcedure')}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <UpdateTextSubProcedureForm\r\n            title={title}\r\n            text={text}\r\n            handleTextSubProcedureUpdate={handleTextSubProcedureUpdate}\r\n          />\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateTextSubProcedure;\r\n","import React from 'react';\r\nimport { Accordion, Card } from 'react-bootstrap';\r\nimport UpdateTextSubProcedure from './UpdateTextSubProcedure';\r\n\r\nconst TextSubProcedure = ({\r\n  id, title, text, admin,\r\n}) => (\r\n  <div>\r\n    <Card>\r\n      <Accordion.Toggle as={Card.Header} eventKey={id}>\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          {title}\r\n          {admin && (\r\n            <div className=\"cardButtons\">\r\n              <UpdateTextSubProcedure title={title} text={text} id={id} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Accordion.Toggle>\r\n      <Accordion.Collapse eventKey={id}>\r\n        <Card.Body>{text}</Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n  </div>\r\n);\r\n\r\nexport default TextSubProcedure;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport TextSubProcedure from './textSubProcedure/TextSubProcedure';\r\n\r\n// eslint-disable-next-line consistent-return\r\nconst SubProcedure = ({ d, admin }) => {\r\n  if (d.type === 'TEXT') {\r\n    return (\r\n      <TextSubProcedure\r\n        id={d.id}\r\n        title={d.textSubProcedures.title}\r\n        text={d.textSubProcedures.text}\r\n        admin={admin}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nexport default SubProcedure;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport subProcedures from '../../services/procedures/subProcedures';\r\nimport SubProcedure from './SubProcedure';\r\n\r\nconst SubProcedureList = ({ proceduresId, admin }) => {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [listedSubProcedures, setListedSubProcedures] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    subProcedures.getAllId(proceduresId)\r\n      .then((initialSubProcedures) => {\r\n        const list = initialSubProcedures[0].subProcedures;\r\n        list.sort((a, b) => a.priority - b.priority);\r\n        setListedSubProcedures(list);\r\n      })\r\n      .catch((error) => {\r\n        // eslint-disable-next-line\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Accordion>\r\n      {listedSubProcedures.map((d) => (\r\n        <SubProcedure d={d} admin={admin} />\r\n      ))}\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default SubProcedureList;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable array-callback-return */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  useParams,\r\n} from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\n/* import SubProcedureList from '../subprocedure/SubProcedureList'; */\r\nimport NewTextSubProcedure from '../subprocedure/textSubProcedure/NewTextSubProcedure';\r\nimport SubProcedureList from '../subprocedure/SubProcedureList';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst Procedure = ({ admin, caseId }) => {\r\n  const { t } = useTranslation();\r\n  const { id } = useParams();\r\n  const [show, setShow] = useState(false);\r\n\r\n  /* const hideWhenVisible = { display: show ? 'none' : '' }; */\r\n  const showWhenVisible = { display: show ? '' : 'none' };\r\n\r\n  return (\r\n\r\n    <div id=\"wrapper\">\r\n      <h2>\r\n        {t('subProcedures')}\r\n      </h2>\r\n      {admin && (\r\n        <div>\r\n          <Button className=\"addButton\" onClick={() => setShow(true)} id=\"addNew\">\r\n            {t('buttonNewSubProcedure')}\r\n          </Button>\r\n          <div className=\"rows\" style={showWhenVisible}>\r\n            <NewTextSubProcedure proceduresId={id} />\r\n            <Button className=\"addButton question\" size=\"sm\">{t('buttonAddNewQuestion')}</Button>\r\n            <Button className=\"addButton multichoice\" size=\"sm\">{t('buttonAddNewMultiChoice')}</Button>\r\n            <Button className=\"addButton diagnosis\" size=\"sm\">{t('buttonAddFinalDiagnosis')}</Button>\r\n          </div>\r\n          <SubProcedureList proceduresId={id} admin={admin} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Procedure;\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\nimport { getConfig } from '../../utils/Helper';\r\n\r\nconst baseUrl = '/api/differentialGroupsUnderCases';\r\n\r\nconst getAll = (caseId) => {\r\n  const request = axios.get(`${baseUrl}/${caseId}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { Accordion, Card } from 'react-bootstrap';\r\n\r\nconst Differential = ({ id, name, description }) => (\r\n  <Card>\r\n    <Accordion.Toggle as={Card.Header} eventKey={id} id=\"differentialName\">\r\n      {name}\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey={id}>\r\n      <Card.Body>{description}</Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n);\r\n\r\nexport default Differential;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport serviceUnderCases from '../../services/differentials/differentialsUnderCases';\r\nimport Differential from './Differential';\r\n\r\nconst DifferentialList = ({ diffGroupCaseId }) => {\r\n  const [caseDifferentials, setCaseDifferentials] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    serviceUnderCases.getAll(diffGroupCaseId)\r\n      .then((initialDifferentials) => {\r\n        setCaseDifferentials(initialDifferentials);\r\n      })\r\n      .catch((error) => {\r\n        /* istanbul ignore next */\r\n        // eslint-disable-next-line\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Accordion>\r\n      {caseDifferentials.map((d) => (\r\n        <Differential key={d.id} id={d.id} name={d.name} description={d.description} />\r\n      ))}\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default DifferentialList;\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\nimport { getConfig } from '../../utils/Helper';\r\n\r\nconst baseUrl = '/api/differentials';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject, getConfig());\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove,\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\n\r\nconst AddDifferentialForm = ({ addDifferential }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const newDifferentialSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .min(2, t('warningShort'))\r\n      .max(999, t('warningLong'))\r\n      .required(t('warningRequired')),\r\n    description: Yup.string(),\r\n  });\r\n\r\n  const handleDifferentialAdd = (values) => {\r\n    addDifferential({\r\n      name: values.name,\r\n      description: values.description,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: '',\r\n        description: '',\r\n      }}\r\n      validationSchema={newDifferentialSchema}\r\n      onSubmit={handleDifferentialAdd}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        values,\r\n        errors,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Group md=\"6\" controlId=\"name\">\r\n            <Form.Label>{t('addDifferential')}</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder={t('write')}\r\n              value={values.name}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.name}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n              {errors.name}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"description\">\r\n            <Form.Label>{t('description')}</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              name=\"description\"\r\n              rows={3}\r\n              value={values.description}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddDifferentialForm;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\n\r\nconst SelectDifferentialForm = ({ differentials, selectDifferential, diffGroupCaseId }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [selectedDiff, setSelectedDiff] = useState([]);\r\n  const [description, setDescription] = useState('');\r\n\r\n  const handleDifferentialChoose = (event) => {\r\n    event.preventDefault();\r\n    const differential = differentials.filter((d) => d.name === selectedDiff[0])[0];\r\n    selectDifferential({\r\n      diffGroupCaseId,\r\n      differentialId: differential.id,\r\n      description,\r\n    });\r\n\r\n    setDescription('');\r\n    setSelectedDiff([]);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleDifferentialChoose}>\r\n      <Form.Group>\r\n        <Form.Label>{t('selectExistingDifferential')}</Form.Label>\r\n        <Typeahead\r\n          id=\"basic-typeahead-single\"\r\n          labelKey=\"name\"\r\n          options={differentials.map((d) => d.name)}\r\n          placeholder={t('selectDifferential')}\r\n          onChange={setSelectedDiff}\r\n          selected={selectedDiff}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"description\">\r\n        <Form.Label>{t('description')}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          name=\"description\"\r\n          rows={3}\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SelectDifferentialForm;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Button, Modal, Tabs, Tab,\r\n} from 'react-bootstrap';\r\nimport service from '../../services/differentials/differentials';\r\nimport serviceUnderCases from '../../services/differentials/differentialsUnderCases';\r\nimport AddDifferentialForm from './AddDifferentialForm';\r\nimport SelectDifferentialForm from './SelectDifferentialForm';\r\nimport { setSuccess, setError } from '../../utils/MessageBanner';\r\n\r\nconst NewDifferential = ({ diffGroupCaseId }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [differentials, setDifferentials] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    service.getAll()\r\n      .then((initialDifferentials) => {\r\n        setDifferentials(initialDifferentials);\r\n      })\r\n      .catch((error) => {\r\n        /* istanbul ignore next */\r\n        // eslint-disable-next-line\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const toggleVisibility = () => setShow(!show);\r\n\r\n  /* istanbul ignore next */\r\n  const handleDifferentialSelection = (ducObject) => {\r\n    serviceUnderCases.create(ducObject)\r\n      .then(() => {\r\n        toggleVisibility();\r\n        setSuccess(t('differentialUpdateSuccess'));\r\n      })\r\n      .catch((error) => {\r\n      // eslint-disable-next-line no-console\r\n        console.log(error);\r\n        toggleVisibility();\r\n        setError(t('differentialUpdateError'));\r\n      });\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleDifferentialAdd = (differentialObject) => {\r\n    service.create({ name: differentialObject.name })\r\n      .then((res) => {\r\n        const differentialId = res[0].id;\r\n        handleDifferentialSelection({\r\n          diffGroupCaseId,\r\n          differentialId,\r\n          description: differentialObject.description,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div id=\"newDifferential\">\r\n      <Button className=\"addButton\" onClick={toggleVisibility} id=\"addNew\">\r\n        {t('buttonNewDifferential')}\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        onHide={toggleVisibility}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{t('addDifferential')}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Tabs defaultActiveKey=\"select\" id=\"differentials\" className=\"mb-3\">\r\n            <Tab eventKey=\"select\" title={t('selectExisting')}>\r\n              <SelectDifferentialForm\r\n                differentials={differentials}\r\n                selectDifferential={handleDifferentialSelection}\r\n                diffGroupCaseId={diffGroupCaseId}\r\n              />\r\n            </Tab>\r\n            <Tab eventKey=\"add\" title={t('addNewDifferential2')}>\r\n              <AddDifferentialForm addDifferential={handleDifferentialAdd} />\r\n            </Tab>\r\n          </Tabs>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewDifferential;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport DifferentialList from '../DifferentialList';\r\nimport NewDifferential from '../NewDifferential';\r\n\r\nconst DifferentialGroup = ({\r\n  diffGroupCaseId, name, admin,\r\n}) => (\r\n  <Card style={{ width: '60rem' }}>\r\n    <Card.Header>{name}</Card.Header>\r\n    <Card.Body>\r\n      <DifferentialList diffGroupCaseId={diffGroupCaseId} />\r\n      {admin && (\r\n        <NewDifferential diffGroupCaseId={diffGroupCaseId} />\r\n      )}\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nexport default DifferentialGroup;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport serviceUnderCases from '../../../services/differentials/differentialGroupsUnderCases';\r\nimport DifferentialGroup from './DifferentialGroup';\r\n\r\nconst DifferentialGroupList = ({ caseId, admin }) => {\r\n  const [caseDifferentialGroups, setCaseDifferentialGroups] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    serviceUnderCases.getAll(caseId)\r\n      .then((initialDifferentialGroups) => {\r\n        setCaseDifferentialGroups(initialDifferentialGroups);\r\n      })\r\n      .catch((error) => {\r\n        /* istanbul ignore next */\r\n        // eslint-disable-next-line\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div data-testid=\"diffGroupList\">\r\n      {caseDifferentialGroups.map((d) => (\r\n        <DifferentialGroup\r\n          key={d.id}\r\n          diffGroupCaseId={d.diffGroupCaseId}\r\n          name={d.name}\r\n          admin={admin}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DifferentialGroupList;\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\nimport { getConfig } from '../../utils/Helper';\r\n\r\nconst baseUrl = '/api/differentialGroups';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\n\r\nconst AddDifferentialGroupForm = ({ addDifferentialGroup }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const newDifferentialGroupSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .min(2, t('warningShort'))\r\n      .max(999, t('warningLong'))\r\n      .required(t('warningRequired')),\r\n  });\r\n\r\n  const handleDifferentialGroupAdd = (values) => {\r\n    addDifferentialGroup({\r\n      name: values.name,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: '',\r\n      }}\r\n      validationSchema={newDifferentialGroupSchema}\r\n      onSubmit={handleDifferentialGroupAdd}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        values,\r\n        errors,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Group md=\"6\" controlId=\"name\">\r\n            <Form.Label>{t('addDifferentialGroup')}</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder={t('write')}\r\n              value={values.name}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.name}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n              {errors.name}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewDifferentialGroup')}</Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddDifferentialGroupForm;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\n\r\nconst SelectDifferentialGroupForm = ({ differentialGroups, selectDifferentialGroup, caseId }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [selectedDiff, setSelectedDiff] = useState([]);\r\n\r\n  const handleDifferentialChoose = (event) => {\r\n    event.preventDefault();\r\n    const differentialGroup = differentialGroups.filter((d) => d.name === selectedDiff[0])[0];\r\n    selectDifferentialGroup({\r\n      caseId,\r\n      differentialGroupId: differentialGroup.id,\r\n    });\r\n\r\n    setSelectedDiff([]);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleDifferentialChoose}>\r\n      <Form.Group>\r\n        <Form.Label>{t('selectExistingDifferentialGroup')}</Form.Label>\r\n        <Typeahead\r\n          id=\"basic-typeahead-single\"\r\n          labelKey=\"name\"\r\n          options={differentialGroups.map((d) => d.name)}\r\n          placeholder={t('selectDifferentialGroup')}\r\n          onChange={setSelectedDiff}\r\n          selected={selectedDiff}\r\n        />\r\n      </Form.Group>\r\n      <Button className=\"submitButton\" type=\"submit\">{t('buttonSubmitNewDifferentialGroup')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SelectDifferentialGroupForm;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Button, Modal, Tabs, Tab,\r\n} from 'react-bootstrap';\r\n\r\nimport serviceUnderCases from '../../../services/differentials/differentialGroupsUnderCases';\r\nimport service from '../../../services/differentials/differentialGroups';\r\nimport AddDifferentialGroupForm from './AddDifferentialGroupForm';\r\nimport SelectDifferentialGroupForm from './SelectDifferentialGroupForm';\r\nimport { setSuccess, setError } from '../../../utils/MessageBanner';\r\n\r\nconst NewDifferentialGroup = ({ caseId }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [differentialGroups, setDifferentialGroups] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    service.getAll()\r\n      .then((initialDifferentialGroups) => {\r\n        setDifferentialGroups(initialDifferentialGroups);\r\n      })\r\n      .catch((error) => {\r\n        /* istanbul ignore next */\r\n        // eslint-disable-next-line\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const toggleVisibility = () => setShow(!show);\r\n\r\n  /* istanbul ignore next */\r\n  const handleDifferentialGroupSelection = (newObject) => {\r\n    serviceUnderCases.create(newObject)\r\n      .then(() => {\r\n        toggleVisibility();\r\n        setSuccess(t('differentialGroupUpdateSuccess'));\r\n      })\r\n      .catch((error) => {\r\n        // eslint-disable-next-line no-console\r\n        console.log(error);\r\n        toggleVisibility();\r\n        setError(t('differentialGroupUpdateError'));\r\n      });\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleDifferentialGroupAdd = (differentialGroupObject) => {\r\n    service.create({ name: differentialGroupObject.name })\r\n      .then((res) => {\r\n        const differentialGroupId = res[0].id;\r\n        handleDifferentialGroupSelection({\r\n          caseId,\r\n          differentialGroupId,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"addButton\" onClick={toggleVisibility} id=\"addNew\">\r\n        {t('buttonNewDifferentialGroup')}\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        onHide={toggleVisibility}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{t('addDifferentialGroup')}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Tabs defaultActiveKey=\"select\" id=\"differentialGroups\" className=\"mb-3\">\r\n            <Tab eventKey=\"select\" title={t('selectExisting')}>\r\n              <SelectDifferentialGroupForm\r\n                differentialGroups={differentialGroups}\r\n                selectDifferentialGroup={handleDifferentialGroupSelection}\r\n                caseId={caseId}\r\n              />\r\n            </Tab>\r\n            <Tab eventKey=\"add\" title={t('addNewDifferential2')}>\r\n              <AddDifferentialGroupForm addDifferentialGroup={handleDifferentialGroupAdd} />\r\n            </Tab>\r\n          </Tabs>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewDifferentialGroup;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable array-callback-return */\r\nimport React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n// import NewDifferential from './NewDifferential';\r\nimport DifferentialGroupList from './differentialGroup/DifferentialGroupList';\r\nimport NewDifferentialGroup from './differentialGroup/NewDifferentialGroup';\r\n\r\nconst Differentials = ({ admin }) => {\r\n  const { t } = useTranslation();\r\n  const { id } = useParams();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>\r\n        {t('Differentials')}\r\n      </h2>\r\n      {admin && (\r\n        <div>\r\n          <NewDifferentialGroup caseId={id} />\r\n        </div>\r\n      )}\r\n      <DifferentialGroupList caseId={id} admin={admin} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Differentials;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst HideCase = ({ c, hideCase }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [newHidden, setNewHidden] = useState(c.hidden);\r\n\r\n  const handleVisibilityUpdate = (event) => {\r\n    event.preventDefault();\r\n    hideCase({\r\n      title: c.title,\r\n      anamnesis: c.anamnesis,\r\n      hidden: newHidden,\r\n    });\r\n  };\r\n\r\n  const handleHiddenChange = () => {\r\n    setNewHidden(!newHidden);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleVisibilityUpdate}>\r\n        <label htmlFor=\"submit\" className=\"hidden\">{newHidden ? t('buttonShowCaseToStudents') : t('buttonHideCaseFromStudents')}</label>\r\n        <input id=\"submitHide\" className=\"hideCase\" type=\"submit\" onClick={handleHiddenChange} size=\"sm\" value={newHidden ? t('buttonShowCaseToStudents') : t('buttonHideCaseFromStudents')} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HideCase;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Form } from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst UpdateCaseTitle = ({ c, updateCaseTitle }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [title, setTitle] = useState(c.title);\r\n\r\n  const caseSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n      .min(2, t('warningShort'))\r\n      .max(999, t('warningLong'))\r\n      .required(t('warningRequired')),\r\n  });\r\n\r\n  const handleTitleUpdate = (values) => {\r\n    updateCaseTitle({\r\n      title: values.title,\r\n      anamnesis: c.anamnesis,\r\n      hidden: c.hidden,\r\n    });\r\n\r\n    setTitle(values.title);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        title,\r\n      }}\r\n      validationSchema={caseSchema}\r\n      onSubmit={handleTitleUpdate}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        values,\r\n        errors,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Group className=\"mb-3\" controlId=\"updateTitle\" style={{ width: '30rem' }}>\r\n            <Form.Control\r\n              className=\"titleChangeInput\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.title}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              {t('caseTitleInstruction')}\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n              {errors.title}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default UpdateCaseTitle;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Form } from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst UpdateAnamnesis = ({ c, updateAnamnesis }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [anamnesis, setAnamnesis] = useState(c.anamnesis);\r\n\r\n  const caseSchema = Yup.object().shape({\r\n    anamnesis: Yup.string()\r\n      .min(2, t('warningShort'))\r\n      .max(5000, t('warningLong'))\r\n      .required(t('warningRequired')),\r\n  });\r\n\r\n  const handleAnamnesisUpdate = (values) => {\r\n    updateAnamnesis({\r\n      title: c.title,\r\n      anamnesis: values.anamnesis,\r\n      hidden: c.hidden,\r\n    });\r\n\r\n    setAnamnesis(values.anamnesis);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        anamnesis,\r\n      }}\r\n      validationSchema={caseSchema}\r\n      onSubmit={handleAnamnesisUpdate}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        values,\r\n        errors,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Group className=\"mb-3\" controlId=\"updateAnamnesis\" style={{ width: '30rem' }}>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"anamnesis\"\r\n              value={values.anamnesis}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.anamnesis}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              {t('caseAnamnesisInstruction')}\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n              {errors.anamnesis}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default UpdateAnamnesis;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useParams } from 'react-router-dom';\r\nimport HideCase from '../case/HideCase';\r\nimport service from '../../services/cases';\r\nimport UpdateCaseTitle from '../case/UpdateCaseTitle';\r\nimport { setSuccess, setError } from '../../utils/MessageBanner';\r\nimport UpdateAnamnesis from './UpdateAnamnesis';\r\n\r\nconst Anamnesis = ({ cases, admin }) => {\r\n  const { t } = useTranslation();\r\n  const { id } = useParams();\r\n  const c = cases.find((a) => a.id === Number(id));\r\n  // currentcase was used to fix bug where case title and visibility\r\n  // could not be updated at the same time\r\n  // see https://github.com/taudinpurkauspeli/taudinpurkauspeli2021/commit/24d648f4a684d2acd3d378196c3fc09e6836b1a6#diff-9f9374df7bc962cc29cb590ed33d6b81f84a09bbced9187d2fb750e2f7d645ee\r\n  // temporarily modified to prevent refresh page bug\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [currentCase, setCurrentCase] = useState(c);\r\n\r\n  /* istanbul ignore next */\r\n  const handleCaseUpdate = (updatedCase) => {\r\n    service.update(c.id, updatedCase)\r\n      .then(() => {\r\n        setCurrentCase(updatedCase);\r\n        setSuccess(t('caseUpdateSuccess'));\r\n      })\r\n      .catch((error) => {\r\n        // eslint-disable-next-line no-console\r\n        console.log(error);\r\n        setError(t('caseUpdateError'));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      { admin && c && (\r\n        <div className=\"rows\">\r\n          <UpdateCaseTitle c={c} updateCaseTitle={handleCaseUpdate} />\r\n          <UpdateAnamnesis c={c} updateAnamnesis={handleCaseUpdate} />\r\n          <HideCase c={c} hideCase={handleCaseUpdate} />\r\n        </div>\r\n      )}\r\n      { !admin && c && (\r\n        <p>{c.title}</p>\r\n      )}\r\n      { c && (\r\n        <div className=\"anamnesis\">\r\n          <p>{c.anamnesis}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Anamnesis;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst FileBank = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('fileBank')}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileBank;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport {\r\n  Switch, Route, Redirect,\r\n} from 'react-router-dom';\r\n\r\n// Import components\r\nimport Frontpage from '../frontpage/Frontpage';\r\nimport HowToPlay from '../instructions/HowToPlay';\r\nimport Profile from '../users/Profile';\r\nimport Users from '../users/Users';\r\nimport Case from '../case/Case';\r\nimport Procedures from '../procedure/Procedures';\r\nimport Procedure from '../procedure/Procedure';\r\nimport Differentials from '../differential/Differentials';\r\nimport Anamnesis from '../anamnesis/Anamnesis';\r\nimport FileBank from '../files/FileBank';\r\n\r\nconst Routing = ({ admin, cases }) => (\r\n  <Switch>\r\n    <Route path=\"/howtoplay\">\r\n      <HowToPlay />\r\n    </Route>\r\n    <Route path=\"/profile\">\r\n      <Profile />\r\n    </Route>\r\n    <Route path=\"/users\">\r\n      {admin ? <Users /> : <Redirect to=\"/\" />}\r\n    </Route>\r\n    <Route path=\"/cases/:id/procedures\">\r\n      <Case cases={cases} admin={admin} />\r\n      <Procedures admin={admin} />\r\n    </Route>\r\n    <Route path=\"/cases/:id/procedure/:id\">\r\n      <Procedure admin={admin} />\r\n    </Route>\r\n    <Route path=\"/cases/:id/differentials\">\r\n      <Case cases={cases} admin={admin} />\r\n      <Differentials admin={admin} />\r\n    </Route>\r\n    <Route path=\"/cases/:id\">\r\n      <Case cases={cases} admin={admin} />\r\n      <Anamnesis cases={cases} admin={admin} />\r\n    </Route>\r\n    <Route path=\"/files\">\r\n      {admin ? <FileBank /> : <Redirect to=\"/\" />}\r\n    </Route>\r\n    <Route path=\"/\">\r\n      <Frontpage admin={admin} cases={cases} />\r\n    </Route>\r\n  </Switch>\r\n);\r\n\r\nexport default Routing;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n} from 'react-router-dom';\r\n\r\n// Import components\r\nimport Navigationbar from './components/navigation/Navbar';\r\nimport service from './services/cases';\r\nimport Sidebar from './components/navigation/Sidebar';\r\nimport Routing from './components/navigation/Routing';\r\nimport MessageBanner from './utils/MessageBanner';\r\n\r\nimport { setToken } from './utils/Helper';\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [admin, setAdmin] = useState(false);\r\n  const [cases, setCases] = useState([]);\r\n\r\n  /* istanbul ignore next */\r\n  React.useEffect(() => {\r\n    service\r\n      .getAll()\r\n      .then((response) => {\r\n        // eslint-disable-next-line no-console\r\n        console.log(response);\r\n        setToken(response.user.token);\r\n        setAdmin(response.user.admin);\r\n        setUser(response.user.name);\r\n        setCases(response.data);\r\n        // eslint-disable-next-line no-console\r\n        console.log(user);\r\n      })\r\n      .catch((error) => {\r\n        // eslint-disable-next-line\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Navigationbar\r\n        user={false}\r\n        admin={admin}\r\n        cases={cases}\r\n      />\r\n      <Sidebar />\r\n      <MessageBanner />\r\n      <Routing cases={cases} admin={admin} />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default (App);\r\n","/* eslint-disable linebreak-style */\r\n/* istanbul ignore file */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' // [::1] is the IPv6 localhost address.\r\n      || window.location.hostname === '[::1]'\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      || window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n      ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        // eslint-disable-next-line no-use-before-define\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        // eslint-disable-next-line no-use-before-define\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      // eslint-disable-next-line no-param-reassign\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n\r\n              // Execute callback\r\n              // eslint-disable-next-line no-lonely-if\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n          || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      });\r\n  }\r\n}\r\n","/* eslint-disable linebreak-style */\r\n/* istanbul ignore file */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './i18n/config';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}