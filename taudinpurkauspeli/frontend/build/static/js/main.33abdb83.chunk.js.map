{"version":3,"sources":["i18n/config.js","components/navigation/Navbar.js","services/cases.js","components/case/RemoveCase.js","components/case/CaseCard.js","components/frontpage/Frontpage.js","components/frontpage/GuestFrontpage.js","components/navigation/Sidebar.js","components/instructions/HowToPlay.js","components/user/Profile.js","components/case/HideCase.js","components/case/Case.js","components/case/NewCase.js","App.js","serviceWorker.js","index.js"],"names":["i18n","use","LanguageDetector","init","initReactI18next","fallbackLng","lng","localStorage","getItem","resources","fi","translations","require","en","ns","defaultNS","languages","Navigationbar","user","admin","guest","changeUser","changeAdmin","changeGuest","t","useTranslation","changeLanguage","language","Navbar","collapseOnSelect","expand","variant","sticky","Brand","as","Link","to","Toggle","Collapse","id","Nav","className","NavDropdown","title","Item","onClick","eventKey","NavLink","baseUrl","axios","get","then","response","data","newObject","post","put","delete","removeCase","caseToBeRemoved","removeCaseFunc","Button","size","event","preventDefault","window","confirm","service","message","CaseCard","c","Card","style","width","cursor","Body","Title","Text","anamnesis","Footer","ProgressBar","now","label","RemoveCase","Frontpage","cases","Row","xs","md","filter","hidden","map","Col","GuestFrontpage","Sidebar","HowToPlay","Profile","HideCase","caseToBeHidden","hideCaseFunc","hideStatus","useState","newHidden","setNewHidden","onSubmit","caseObject","htmlFor","type","value","Anamnesis","updateCaseFunc","setTitle","alertMessage","setAlertMessage","caseSchema","Yup","shape","min","max","required","Alert","initialValues","validationSchema","values","updatedCase","undefined","setTimeout","handleSubmit","handleChange","errors","Form","noValidate","Group","controlId","Control","name","onChange","isInvalid","Feedback","role","Procedures","Differentials","Case","useParams","find","a","Number","path","newCase","addCaseFunc","history","useHistory","newCaseSchema","push","Label","rows","Check","App","setUser","setAdmin","setGuest","setCases","React","useEffect","initialCases","catch","error","console","log","NewCase","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.33abdb83.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n// eslint-disable-next-line import/no-unresolved\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n.use(LanguageDetector).init();\n\ni18n.use(initReactI18next).init({\n  fallbackLng: 'fi',\n\n  // eslint-disable-next-line no-undef\n  lng: localStorage.getItem('i18nextLng') || 'fi',\n  resources: {\n    fi: {\n      // eslint-disable-next-line global-require\n      translations: require('./locales/fi/translations.json'),\n    },\n    en: {\n      // eslint-disable-next-line global-require\n      translations: require('./locales/en/translations.json'),\n    },\n  },\n  ns: ['translations'],\n  defaultNS: 'translations',\n});\n\ni18n.languages = ['fi', 'en'];\n\nexport default i18n;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Navbar,\n  Nav,\n  NavLink,\n  NavDropdown,\n} from 'react-bootstrap';\n\n// Import translations\nimport { useTranslation } from 'react-i18next';\nimport i18n from '../../i18n/config';\n\nconst Navigationbar = ({\n  user, admin, guest, changeUser, changeAdmin, changeGuest,\n}) => {\n  const { t } = useTranslation();\n\n  const changeLanguage = (language) => {\n    i18n.changeLanguage(language);\n  };\n\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\" sticky=\"top\">\n      <Navbar.Brand as={Link} to=\"/\">{t('nameOfTheGame')}</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <NavDropdown title={t('selectUser')}>\n            <NavDropdown.Item onClick={() => changeGuest()} eventKey=\"guest\">{t('guest')}</NavDropdown.Item>\n            <NavDropdown.Item onClick={() => changeUser()} eventKey=\"student\">{t('student')}</NavDropdown.Item>\n            <NavDropdown.Item onClick={() => changeAdmin()} eventKey=\"teacher\">{t('teacher')}</NavDropdown.Item>\n          </NavDropdown>\n          <NavDropdown title={t('selectLanguage')}>\n            <NavDropdown.Item onClick={() => changeLanguage('fi')} eventKey=\"fi\">{t('languageFinnish')}</NavDropdown.Item>\n            <NavDropdown.Item onClick={() => changeLanguage('en')} eventKey=\"en\">{t('languageEnglish')}</NavDropdown.Item>\n          </NavDropdown>\n          { admin && (\n          <Nav.Item>\n            <NavLink as={Link} to=\"/users\">{t('userInformation')}</NavLink>\n          </Nav.Item>\n          )}\n          { admin && (\n          <Nav.Item>\n            <NavLink as={Link} to=\"/files\">{t('fileBank')}</NavLink>\n          </Nav.Item>\n          )}\n          { (user || guest || admin) && (\n          <Nav.Item>\n            <NavLink as={Link} to=\"/howtoplay\">{t('howToPlay')}</NavLink>\n          </Nav.Item>\n          )}\n          { user && (\n          <Nav.Item>\n            <NavLink as={Link} to=\"/profile\">{t('userProfile')}</NavLink>\n          </Nav.Item>\n          )}\n          <Nav.Item>\n            { (user || admin)\n              ? <NavLink as={Link} to=\"/logout\">{t('logOut')}</NavLink>\n              : <NavLink as={Link} to=\"/login\">{t('logIn')}</NavLink> }\n          </Nav.Item>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default Navigationbar;\n","import axios from 'axios';\n\nconst baseUrl = 'http://localhost:8080/api/cases';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject);\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove,\n};\n","/* eslint-disable react/react-in-jsx-scope */\nimport { Button } from 'react-bootstrap';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport service from '../../services/cases';\n\nconst removeCase = ({ caseToBeRemoved, removeCaseFunc }) => {\n  const { t } = useTranslation();\n\n  const handleDelete = (event) => {\n    event.preventDefault();\n\n    if (removeCaseFunc != null) {\n      removeCaseFunc(caseToBeRemoved.id);\n      // eslint-disable-next-line no-param-reassign\n      caseToBeRemoved.id = null;\n      removeCaseFunc(caseToBeRemoved.id);\n    } else {\n      // eslint-disable-next-line no-alert\n      const confirmBox = window.confirm(t('deleteCaseConfirmation'));\n      if (confirmBox === true) {\n        service.remove(caseToBeRemoved.id)\n          .then((response) => (response.message));\n      }\n    }\n  };\n\n  return (\n    <Button className=\"removeButton\" size=\"sm\" variant=\"danger\" onClick={handleDelete}>{t('buttonRemove')}</Button>\n  );\n};\n\nexport default removeCase;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Card,\n  Button,\n  ProgressBar,\n} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport RemoveCase from './RemoveCase';\n// import RemoveCase from './RemoveCase';\n\nconst CaseCard = ({ c, admin }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div>\n      <Card as={Link} to={`/cases/${c.id}`} style={{ width: '20rem', cursor: 'pointer' }} className=\"caseCard\">\n        <Card.Body>\n          <Card.Title>{c.title}</Card.Title>\n          <Card.Text>{c.anamnesis}</Card.Text>\n        </Card.Body>\n        <Card.Footer>\n          <ProgressBar className=\"progsbar\" variant=\"success\" now={25} label={`${25}%`} />\n        </Card.Footer>\n      </Card>\n\n      { admin && (\n        <div className=\"cardButtons\">\n          <Button as={Link} to={`/cases/${c.id}`} className=\"editButton\" size=\"sm\">{t('buttonEdit')}</Button>\n          <Button className=\"copyButton\" size=\"sm\" variant=\"warning\">{t('copy')}</Button>\n          <RemoveCase caseToBeRemoved={c} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CaseCard;\n","/* eslint-disable array-callback-return */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Col,\n  Row,\n  Button,\n} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport CaseCard from '../case/CaseCard';\n\nconst Frontpage = ({ cases, admin }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('frontpageTitle')}</h2>\n      <p>{t('frontpageText')}</p>\n      {admin && (\n        <div>\n          <Button as={Link} to=\"/newcase\">{t('buttonNewCase')}</Button>\n          <br />\n          <h3>{t('caseHidden')}</h3>\n          <hr />\n        </div>\n      )}\n      <Row xs=\"auto\" md=\"auto\" className=\"g-4\">\n        {admin && (\n          cases.filter((c) => c.hidden).map((c) => (\n            <Col key={c.id}>\n              <CaseCard c={c} admin={admin} />\n            </Col>\n          ))\n        )}\n      </Row>\n      <br />\n      <h3>{t('casePlayable')}</h3>\n      <hr />\n      <Row xs=\"auto\" md=\"auto\" className=\"g-4\">\n        {cases.filter((c) => !c.hidden).map((c) => (\n          <Col key={c.id}>\n            <CaseCard c={c} admin={admin} />\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\nexport default Frontpage;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst GuestFrontpage = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('GuestFrontpageTitle')}</h2>\n      <p>{t('GuestFrontpageText')}</p>\n    </div>\n  );\n};\nexport default GuestFrontpage;\n","import React from 'react';\n\nconst Sidebar = () => (\n  <div id=\"sidebar\" />\n);\n\nexport default Sidebar;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst HowToPlay = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('howToPlay')}</h2>\n    </div>\n  );\n};\n\nexport default HowToPlay;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst Profile = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('userProfile')}</h2>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport service from '../../services/cases';\n\nconst HideCase = ({ caseToBeHidden, hideCaseFunc }) => {\n  const c = caseToBeHidden;\n  let hideStatus = false;\n\n  if (hideCaseFunc == null) {\n    hideStatus = c.hidden;\n  }\n\n  const [newHidden, setNewHidden] = useState(hideStatus);\n  const { t } = useTranslation();\n\n  const hideCase = (event) => {\n    event.preventDefault();\n    // eslint-disable-next-line no-param-reassign\n    const caseObject = ({\n      title: c.title,\n      anamnesis: c.anamnesis,\n      hidden: newHidden,\n    });\n\n    if (hideCaseFunc != null) {\n      hideCaseFunc(caseObject);\n    } else {\n      service.update(c.id, caseObject);\n    }\n  };\n\n  const handleHiddenChange = () => {\n    setNewHidden(!newHidden);\n  };\n\n  return (\n    <div>\n      <form onSubmit={hideCase} className=\"buttonLeft\">\n        <label htmlFor=\"submit\" className=\"hidden\">{newHidden ? t('buttonShowCaseToStudents') : t('buttonHideCaseFromStudents')}</label>\n        <input type=\"submit\" onClick={handleHiddenChange} id=\"submit\" value={newHidden ? t('buttonShowCaseToStudents') : t('buttonHideCaseFromStudents')} />\n      </form>\n    </div>\n  );\n};\n\nexport default HideCase;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Link, useParams,\n} from 'react-router-dom';\nimport { Button, Form, Alert } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport HideCase from './HideCase';\nimport service from '../../services/cases';\n\nconst Anamnesis = ({ c, admin, updateCaseFunc }) => {\n  const [title, setTitle] = useState(c.title);\n  const [alertMessage, setAlertMessage] = useState(null);\n  const { t } = useTranslation();\n\n  const caseSchema = Yup.object().shape({\n    title: Yup.string()\n      .min(2, t('warningShort'))\n      .max(999, t('warningLong'))\n      .required(t('warningRequired')),\n  });\n\n  const handleTitleUpdate = (values) => {\n    const updatedCase = ({\n      title: values.title,\n      anamnesis: c.anamnesis,\n      hidden: c.hidden,\n    });\n\n    if (updateCaseFunc !== undefined) {\n      updateCaseFunc(updatedCase);\n    } else {\n      service.update(c.id, updatedCase);\n      setTitle(values.title);\n      setAlertMessage(t('caseUpdateSuccess'));\n      setTimeout(() => {\n        setAlertMessage(null);\n      }, 5000);\n    }\n  };\n\n  return (\n    <div>\n      { alertMessage !== null && (\n        <Alert variant=\"success\">{alertMessage}</Alert>\n      )}\n      <p>Casen tiedot löytyvät täältä</p>\n      { admin && (\n        <div>\n          <Formik\n            initialValues={{\n              title,\n            }}\n            validationSchema={caseSchema}\n            onSubmit={handleTitleUpdate}\n          >\n            {({\n              handleSubmit,\n              handleChange,\n              values,\n              errors,\n            }) => (\n              <Form noValidate onSubmit={handleSubmit}>\n                <Form.Group className=\"mb-3\" controlId=\"updateTitle\">\n                  <Form.Control\n                    type=\"text\"\n                    name=\"title\"\n                    value={values.title}\n                    onChange={handleChange}\n                    isInvalid={!!errors.title}\n                  />\n                  <Form.Text className=\"text-muted\">\n                    {t('caseTitleInstruction')}\n                  </Form.Text>\n                  <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\n                    {errors.title}\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Form>\n            )}\n          </Formik>\n          <HideCase caseToBeHidden={c} />\n        </div>\n      )}\n      { !admin && (\n        <p>{c.title}</p>\n      )}\n      <p>{c.anamnesis}</p>\n    </div>\n  );\n};\n\nconst Procedures = () => (\n  <div>\n    <p>Toimenpiteet löytyvät täältä</p>\n  </div>\n);\n\nconst Differentials = () => (\n  <div>\n    <p>Diffit löytyvät täältä</p>\n  </div>\n);\n\nconst Case = ({ cases, admin, updateCaseFunc }) => {\n  const { id } = useParams();\n  const c = cases.find((a) => a.id === Number(id));\n  const baseUrl = `/cases/${id}`;\n  const { t } = useTranslation();\n\n  return (\n    <Router>\n      <div id=\"wrapper\">\n        <Button as={Link} to={baseUrl}>{t('caseAnamnesis')}</Button>\n        <Button as={Link} to={`${baseUrl}/procedures`}>{t('caseProcedures')}</Button>\n        <Button as={Link} to={`${baseUrl}/differentials`}>{t('caseDifferentials')}</Button>\n\n        <Switch>\n          <Route path={`${baseUrl}/procedures`}>\n            <Procedures />\n          </Route>\n          <Route path={`${baseUrl}/differentials`}>\n            <Differentials />\n          </Route>\n          <Route path={baseUrl}>\n            <Anamnesis c={c} admin={admin} updateCaseFunc={updateCaseFunc} />\n          </Route>\n        </Switch>\n\n      </div>\n\n    </Router>\n  );\n};\n\nexport default Case;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Button } from 'react-bootstrap';\nimport service from '../../services/cases';\n\nconst newCase = ({ addCaseFunc }) => {\n  const { t } = useTranslation();\n  const history = useHistory();\n\n  const newCaseSchema = Yup.object().shape({\n    title: Yup.string()\n      .min(2, t('warningShort'))\n      .max(999, t('warningLong'))\n      .required(t('warningRequired')),\n    anamnesis: Yup.string(),\n    hidden: Yup.bool(),\n  });\n\n  const addCase = (values) => {\n    const caseObject = ({\n      title: values.title,\n      anamnesis: values.anamnesis,\n      hidden: values.hidden,\n    });\n\n    if (addCaseFunc !== undefined) {\n      addCaseFunc(caseObject);\n    } else {\n      service.create(caseObject);\n      history.push('/');\n    }\n  };\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('addCase')}</h2>\n\n      <Formik\n        initialValues={{\n          title: '',\n          anamnesis: '',\n          hidden: false,\n        }}\n        validationSchema={newCaseSchema}\n        onSubmit={addCase}\n      >\n        {({\n          handleSubmit,\n          handleChange,\n          values,\n          errors,\n        }) => (\n          <Form noValidate onSubmit={handleSubmit}>\n            <Form.Group md=\"6\" controlId=\"title\">\n              <Form.Label>{t('caseTitle')}</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"title\"\n                value={values.title}\n                onChange={handleChange}\n                isInvalid={!!errors.title}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.title}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"anamnesis\">\n              <Form.Label>{t('caseAnamnesis')}</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                name=\"anamnesis\"\n                rows={3}\n                value={values.anamnesis}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"hidden\">\n              <Form.Check\n                required\n                name=\"hidden\"\n                label={t('hideCase')}\n                value={values.hidden}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <Button type=\"submit\">{t('buttonSubmitNewCase')}</Button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default newCase;\n","import React, { useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n  Switch, Route,\n} from 'react-router-dom';\n\n// Import components\nimport Navigationbar from './components/navigation/Navbar';\nimport service from './services/cases';\nimport Frontpage from './components/frontpage/Frontpage';\nimport GuestFrontpage from './components/frontpage/GuestFrontpage';\nimport Sidebar from './components/navigation/Sidebar';\nimport HowToPlay from './components/instructions/HowToPlay';\nimport Profile from './components/user/Profile';\nimport Case from './components/case/Case';\nimport HideCase from './components/case/HideCase';\nimport NewCase from './components/case/NewCase';\n\nconst App = () => {\n  const [user, setUser] = useState(false);\n  const [admin, setAdmin] = useState(false);\n  const [guest, setGuest] = useState(true);\n  const [cases, setCases] = useState([]);\n\n  const changeUser = () => {\n    setUser(true);\n    setGuest(false);\n    setAdmin(false);\n  };\n\n  const changeGuest = () => {\n    setUser(false);\n    setGuest(true);\n    setAdmin(false);\n  };\n\n  const changeAdmin = () => {\n    setUser(false);\n    setGuest(false);\n    setAdmin(true);\n  };\n\n  React.useEffect(() => {\n    service\n      .getAll()\n      .then((initialCases) => {\n        setCases(initialCases);\n      })\n      .catch((error) => {\n        // eslint-disable-next-line\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <Router>\n      <Navigationbar\n        user={user}\n        admin={admin}\n        guest={guest}\n        changeUser={changeUser}\n        changeAdmin={changeAdmin}\n        changeGuest={changeGuest}\n        cases={cases}\n      />\n      { guest\n        ? ' '\n        : <Sidebar /> }\n\n      <Switch>\n        <Route path=\"/howtoplay\">\n          <HowToPlay />\n        </Route>\n        <Route path=\"/profile\">\n          <Profile />\n        </Route>\n        <Route path=\"/cases/:id\">\n          <Case cases={cases} />\n        </Route>\n        { admin && (\n        <Route path=\"/editcase/:id\">\n          <HideCase cases={cases} />\n        </Route>\n        )}\n        { admin && (\n        <Route path=\"/newcase\">\n          <NewCase />\n        </Route>\n        )}\n\n        <Route path=\"/\">\n          { guest\n            ? <GuestFrontpage />\n            : <Frontpage admin={admin} cases={cases} /> }\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default (App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' // [::1] is the IPv6 localhost address.\n      || window.location.hostname === '[::1]'\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      || window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n      ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        // eslint-disable-next-line no-use-before-define\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        // eslint-disable-next-line no-use-before-define\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n\n              // Execute callback\n              // eslint-disable-next-line no-lonely-if\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n          || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n/config';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}