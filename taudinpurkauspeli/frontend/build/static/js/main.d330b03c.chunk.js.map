{"version":3,"sources":["i18n/config.js","components/navigation/Navbar.js","services/cases.js","components/case/NewCaseForm.js","components/utils/MessageBanner.js","components/case/NewCase.js","components/case/RemoveCase.js","services/differentials/differentialsUnderCases.js","services/proceduresUnderCase.js","components/case/CopyCase.js","components/case/CaseCard.js","components/frontpage/Search.js","components/frontpage/Frontpage.js","components/frontpage/GuestFrontpage.js","components/navigation/Sidebar.js","components/instructions/HowToPlay.js","components/user/Profile.js","services/differentials/differentialGroupsUnderCases.js","components/differential/Differential.js","components/differential/DifferentialList.js","services/differentials/differentials.js","components/differential/AddDifferentialForm.js","components/differential/SelectDifferentialForm.js","components/differential/NewDifferential.js","components/differential/differentialGroup/DifferentialGroup.js","components/differential/differentialGroup/DifferentialGroupList.js","services/differentials/differentialGroups.js","components/differential/differentialGroup/AddDifferentialGroupForm.js","components/differential/differentialGroup/SelectDifferentialGroupForm.js","components/differential/differentialGroup/NewDifferentialGroup.js","components/differential/Differentials.js","components/case/HideCase.js","components/case/UpdateCaseTitle.js","components/anamnesis/Anamnesis.js","services/procedures.js","components/procedure/NewProcedure.js","components/procedure/EditProcedure.js","components/procedure/ProcedureList.js","components/procedure/Procedures.js","components/case/Case.js","App.js","serviceWorker.js","index.js"],"names":["i18n","use","LanguageDetector","init","initReactI18next","fallbackLng","lng","localStorage","getItem","resources","fi","translations","require","en","ns","defaultNS","languages","Navigationbar","user","admin","guest","changeUser","changeAdmin","changeGuest","t","useTranslation","changeLanguage","language","Navbar","collapseOnSelect","expand","variant","sticky","Brand","as","Link","to","Toggle","Collapse","id","Nav","className","NavDropdown","title","Item","onClick","eventKey","NavLink","baseUrl","axios","get","then","response","console","log","headers","data","newObject","post","put","delete","newCase","addCase","newCaseSchema","Yup","shape","min","max","required","anamnesis","hidden","initialValues","validationSchema","onSubmit","values","handleSubmit","handleChange","errors","Form","noValidate","Group","md","controlId","Label","Control","type","name","value","onChange","isInvalid","Feedback","rows","Check","label","Button","setError","message","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","setSuccess","success","MessageBanner","newestOnTop","rtl","pauseOnFocusLoss","NewCase","useState","show","setShow","toggleVisibility","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","NewCaseForm","service","catch","removeCase","caseToBeRemoved","removeCaseFunc","size","event","preventDefault","window","confirm","diffGroupCaseId","caseId","copyCase","caseToBeCopied","createProcedures","createDifferentials","oldCaseId","newCopyId","caseObject","caseService","copy","ducService","result","pucService","CaseCard","c","Card","style","width","cursor","Text","Footer","ProgressBar","now","CopyCase","copyId","i","length","description","differentialId","procedureId","priority","RemoveCase","Search","newSearch","searchCases","htmlFor","Frontpage","cases","setNewSearch","casesToShow","filter","toLowerCase","includes","target","Row","xs","map","Col","GuestFrontpage","Sidebar","HowToPlay","Profile","Differential","Accordion","DifferentialList","caseDifferentials","setCaseDifferentials","React","useEffect","serviceUnderCases","initialDifferentials","d","AddDifferentialForm","addDifferential","newDifferentialSchema","placeholder","role","SelectDifferentialForm","differentials","selectDifferential","selectedDiff","setSelectedDiff","setDescription","differential","labelKey","options","selected","e","NewDifferential","setDifferentials","handleDifferentialSelection","ducObject","Tabs","defaultActiveKey","Tab","differentialObject","res","DifferentialGroup","DifferentialGroupList","caseDifferentialGroups","setCaseDifferentialGroups","initialDifferentialGroups","AddDifferentialGroupForm","addDifferentialGroup","newDifferentialGroupSchema","SelectDifferentialGroupForm","differentialGroups","selectDifferentialGroup","differentialGroup","differentialGroupId","NewDifferentialGroup","setDifferentialGroups","handleDifferentialGroupSelection","differentialGroupObject","Differentials","HideCase","hideCase","newHidden","setNewHidden","UpdateCaseTitle","updateCaseTitle","setTitle","caseSchema","Anamnesis","currentCase","setCurrentCase","handleCaseUpdate","updatedCase","newProcedure","addProcedureFunc","newTitle","setNewTitle","addProcedure","a","procedureObject","receivedID","EditProcedure","procedure","editProcedureFunc","proceduresUnderCase","setNewPriority","setNewProcedureTitle","history","useHistory","procedureUnderCaseObject","serviceUnderProcedure","push","editProcedure","defaultValue","DragNDropList","proceduresHook","handleDragStart","handleDragEnd","handleDragEnter","submitForm","p","index","onDragStart","onDragEnd","onDragEnter","ProcedureList","draggingItem","useRef","dragOverItem","setProceduresHook","procedureToEdit","setProcedureToEdit","procedureList","list","procedures","sort","b","current","givenProcedure","dragDropEditProcedure","listCopy","draggingItemContent","splice","handleEditId","Procedures","NewProcedure","Case","useParams","find","Number","path","App","setUser","setAdmin","setGuest","setCases","initialCases","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d330b03c.chunk.js","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* istanbul ignore file */\r\n/* eslint-disable linebreak-style */\r\nimport i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n// eslint-disable-next-line import/no-unresolved\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\ni18n.use(LanguageDetector).init();\r\n\r\ni18n.use(initReactI18next).init({\r\n  fallbackLng: 'fi',\r\n\r\n  // eslint-disable-next-line no-undef\r\n  lng: localStorage.getItem('i18nextLng') || 'fi',\r\n  resources: {\r\n    fi: {\r\n      // eslint-disable-next-line global-require\r\n      translations: require('./locales/fi/translations.json'),\r\n    },\r\n    en: {\r\n      // eslint-disable-next-line global-require\r\n      translations: require('./locales/en/translations.json'),\r\n    },\r\n  },\r\n  ns: ['translations'],\r\n  defaultNS: 'translations',\r\n});\r\n\r\ni18n.languages = ['fi', 'en'];\r\n\r\nexport default i18n;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavLink,\r\n  NavDropdown,\r\n} from 'react-bootstrap';\r\n\r\n// Import translations\r\nimport { useTranslation } from 'react-i18next';\r\nimport i18n from '../../i18n/config';\r\n\r\nconst Navigationbar = ({\r\n  user, admin, guest, changeUser, changeAdmin, changeGuest,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  /* istanbul ignore next */\r\n  const changeLanguage = (language) => {\r\n    i18n.changeLanguage(language);\r\n  };\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\" sticky=\"top\">\r\n      <Navbar.Brand as={Link} to=\"/\">{t('nameOfTheGame')}</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <NavDropdown title={t('selectUser')}>\r\n            <NavDropdown.Item onClick={() => changeGuest()} eventKey=\"guest\">{t('guest')}</NavDropdown.Item>\r\n            <NavDropdown.Item onClick={() => changeUser()} eventKey=\"student\">{t('student')}</NavDropdown.Item>\r\n            <NavDropdown.Item onClick={() => changeAdmin()} eventKey=\"teacher\">{t('teacher')}</NavDropdown.Item>\r\n          </NavDropdown>\r\n          <NavDropdown title={t('selectLanguage')}>\r\n            <NavDropdown.Item onClick={() => changeLanguage('fi')} eventKey=\"fi\">{t('languageFinnish')}</NavDropdown.Item>\r\n            <NavDropdown.Item onClick={() => changeLanguage('en')} eventKey=\"en\">{t('languageEnglish')}</NavDropdown.Item>\r\n          </NavDropdown>\r\n          { admin && (\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/users\">{t('userInformation')}</NavLink>\r\n          </Nav.Item>\r\n          )}\r\n          { admin && (\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/files\">{t('fileBank')}</NavLink>\r\n          </Nav.Item>\r\n          )}\r\n          { (user || guest || admin) && (\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/howtoplay\">{t('howToPlay')}</NavLink>\r\n          </Nav.Item>\r\n          )}\r\n          { user && (\r\n          <Nav.Item>\r\n            <NavLink as={Link} to=\"/profile\">{t('userProfile')}</NavLink>\r\n          </Nav.Item>\r\n          )}\r\n          <Nav.Item>\r\n            { (user || admin)\r\n              ? <NavLink as={Link} to=\"/logout\">{t('logOut')}</NavLink>\r\n              : <NavLink as={Link} to=\"/login\">{t('logIn')}</NavLink> }\r\n          </Nav.Item>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigationbar;\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:8081/api/cases';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => {\r\n    // eslint-disable-next-line no-console\r\n    console.log('frontend headers', response.headers);\r\n    return (response.data);\r\n  });\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject);\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove,\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst newCase = ({ addCase }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const newCaseSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n      .min(2, t('warningShort'))\r\n      .max(999, t('warningLong'))\r\n      .required(t('warningRequired')),\r\n    anamnesis: Yup.string(),\r\n    hidden: Yup.bool(),\r\n  });\r\n\r\n  const handleCaseAdd = (values) => {\r\n    addCase({\r\n      title: values.title,\r\n      anamnesis: values.anamnesis,\r\n      hidden: values.hidden,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        title: '',\r\n        anamnesis: '',\r\n        hidden: false,\r\n      }}\r\n      validationSchema={newCaseSchema}\r\n      onSubmit={handleCaseAdd}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        values,\r\n        errors,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Group md=\"6\" controlId=\"title\">\r\n            <Form.Label>{t('caseTitle')}</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.title}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.title}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"anamnesis\">\r\n            <Form.Label>{t('caseAnamnesis')}</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              name=\"anamnesis\"\r\n              rows={3}\r\n              value={values.anamnesis}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"hidden\">\r\n            <Form.Check\r\n              required\r\n              name=\"hidden\"\r\n              label={t('hideCase')}\r\n              value={values.hidden}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\">{t('buttonSubmitNewCase')}</Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default newCase;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-undef */\r\nimport React from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst MessageBanner = () => (\r\n  <ToastContainer\r\n    position=\"top-center\"\r\n    autoClose={3000}\r\n    hideProgressBar\r\n    newestOnTop={false}\r\n    closeOnClick\r\n    rtl={false}\r\n    pauseOnFocusLoss={false}\r\n    draggable={false}\r\n    pauseOnHover\r\n  />\r\n);\r\n\r\nexport const setError = (message) => {\r\n  toast.error(message, {\r\n    position: 'top-center',\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: false,\r\n    draggable: false,\r\n    progress: undefined,\r\n  });\r\n};\r\n\r\nexport const setSuccess = (message) => {\r\n  toast.success(message, {\r\n    position: 'top-center',\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: false,\r\n    draggable: false,\r\n    progress: undefined,\r\n  });\r\n};\r\n\r\nexport default MessageBanner;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Button, Modal,\r\n} from 'react-bootstrap';\r\n\r\nimport service from '../../services/cases';\r\nimport NewCaseForm from './NewCaseForm';\r\nimport { setSuccess, setError } from '../utils/MessageBanner';\r\n\r\nconst NewCase = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const toggleVisibility = () => setShow(!show);\r\n\r\n  /* istanbul ignore next */\r\n  const handleCaseAdd = (newCase) => {\r\n    service.create(newCase)\r\n      .then(() => {\r\n        toggleVisibility();\r\n        setSuccess(t('caseAddSuccess'));\r\n      })\r\n      .catch((error) => {\r\n        // eslint-disable-next-line no-console\r\n        console.log(error);\r\n        toggleVisibility();\r\n        setError(t('caseAddError'));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"primary\" onClick={toggleVisibility} id=\"addNew\">\r\n        {t('buttonNewCase')}\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        onHide={toggleVisibility}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{t('addCase')}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <NewCaseForm addCase={handleCaseAdd} />\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewCase;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport { Button } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport service from '../../services/cases';\r\n\r\nconst removeCase = ({ caseToBeRemoved, removeCaseFunc }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const handleDelete = (event) => {\r\n    event.preventDefault();\r\n\r\n    /* istanbul ignore else */\r\n    if (removeCaseFunc != null) {\r\n      removeCaseFunc(caseToBeRemoved.id);\r\n      // eslint-disable-next-line no-param-reassign\r\n      caseToBeRemoved.id = null;\r\n      removeCaseFunc(caseToBeRemoved.id);\r\n    } else {\r\n      // eslint-disable-next-line no-alert\r\n      const confirmBox = window.confirm(t('deleteCaseConfirmation'));\r\n      if (confirmBox === true) {\r\n        service.remove(caseToBeRemoved.id)\r\n          .then((response) => (response.message));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Button className=\"removeButton\" size=\"sm\" variant=\"danger\" onClick={handleDelete}>{t('buttonRemove')}</Button>\r\n  );\r\n};\r\n\r\nexport default removeCase;\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:8081/api/differentialsUnderCases';\r\n\r\nconst getAll = (diffGroupCaseId) => {\r\n  const request = axios.get(`${baseUrl}/${diffGroupCaseId}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject);\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:8081/api/proceduresUnderCases';\r\n\r\nconst getAll = (caseId) => {\r\n  const request = axios.get(`${baseUrl}/${caseId}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject);\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n};\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport { Button } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport caseService from '../../services/cases';\r\nimport ducService from '../../services/differentials/differentialsUnderCases';\r\nimport pucService from '../../services/proceduresUnderCase';\r\n\r\nconst copyCase = ({\r\n  caseToBeCopied, createProcedures, createDifferentials,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const oldCaseId = caseToBeCopied.id;\r\n  // eslint-disable-next-line no-unused-vars\r\n  let newCopyId = 0;\r\n\r\n  const handleCopy = (event) => {\r\n    event.preventDefault();\r\n    const caseObject = ({\r\n      title: caseToBeCopied.title,\r\n      anamnesis: caseToBeCopied.anamnesis,\r\n      hidden: caseToBeCopied.hidden,\r\n    });\r\n    caseService.create(caseObject)\r\n      .then((copy) => {\r\n        newCopyId = copy.id;\r\n      })\r\n      .then(() => {\r\n        ducService.getAll(oldCaseId)\r\n          .then((result) => {\r\n            createDifferentials(newCopyId, result);\r\n          });\r\n      })\r\n      .then(() => {\r\n        pucService.getAll(oldCaseId)\r\n          .then((result) => {\r\n            createProcedures(newCopyId, result);\r\n          });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Button className=\"copyButton\" size=\"sm\" variant=\"warning\" onClick={handleCopy}>{t('copy')}</Button>\r\n  );\r\n};\r\n\r\nexport default copyCase;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Card,\r\n  Button,\r\n  ProgressBar,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport RemoveCase from './RemoveCase';\r\nimport CopyCase from './CopyCase';\r\nimport ducService from '../../services/differentials/differentialsUnderCases';\r\nimport pucService from '../../services/proceduresUnderCase';\r\n\r\nconst CaseCard = ({ c, admin }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const createDifferentials = (copyId, result) => {\r\n    for (let i = 0; i < result.length; i += 1) {\r\n      const { id, description } = result[i];\r\n      const object = {\r\n        caseId: copyId,\r\n        differentialId: id,\r\n        description,\r\n      };\r\n      ducService.create(object);\r\n    }\r\n  };\r\n\r\n  const createProcedures = (copyId, result) => {\r\n    for (let i = 0; i < result.length; i += 1) {\r\n      const { procedureId, priority } = result[i];\r\n      const object = {\r\n        caseId: copyId,\r\n        procedureId,\r\n        priority,\r\n      };\r\n      pucService.create(object);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card as={Link} to={`/cases/${c.id}`} style={{ width: '20rem', cursor: 'pointer' }} className=\"caseCard\">\r\n        <Card.Body>\r\n          <Card.Title>{c.title}</Card.Title>\r\n          <Card.Text>{c.anamnesis}</Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <ProgressBar className=\"progsbar\" variant=\"success\" now={25} label={`${25}%`} />\r\n        </Card.Footer>\r\n      </Card>\r\n\r\n      { admin && (\r\n        <div className=\"cardButtons\">\r\n          <Button as={Link} to={`/cases/${c.id}`} className=\"editButton\" size=\"sm\">{t('buttonEdit')}</Button>\r\n          <CopyCase\r\n            caseToBeCopied={c}\r\n            createDifferentials={createDifferentials}\r\n            createProcedures={createProcedures}\r\n          />\r\n          <RemoveCase caseToBeRemoved={c} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CaseCard;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Search = ({ newSearch, searchCases }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"search\">\r\n        {t('searchByTitle')}\r\n        &nbsp;\r\n        <input\r\n          id=\"search\"\r\n          value={newSearch}\r\n          onChange={searchCases}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable array-callback-return */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Col,\r\n  Row,\r\n} from 'react-bootstrap';\r\n\r\nimport NewCase from '../case/NewCase';\r\nimport CaseCard from '../case/CaseCard';\r\nimport Search from './Search';\r\n\r\nconst Frontpage = ({ cases, admin }) => {\r\n  const { t } = useTranslation();\r\n  const [newSearch, setNewSearch] = useState('');\r\n\r\n  const searchCases = (event) => {\r\n    setNewSearch(event.target.value);\r\n  };\r\n\r\n  const casesToShow = !newSearch\r\n    ? cases : cases.filter((c) => c.title.toLowerCase().includes(newSearch.toLowerCase()));\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('frontpageTitle')}</h2>\r\n      <p>{t('frontpageText')}</p>\r\n      <Search newSearch={newSearch} searchCases={searchCases} />\r\n      <br />\r\n      {admin && (\r\n        <div>\r\n          <NewCase />\r\n          <br />\r\n          <h3>{t('caseHidden')}</h3>\r\n          <hr />\r\n        </div>\r\n      )}\r\n      <Row xs=\"auto\" md=\"auto\" className=\"g-4\">\r\n        {admin && (\r\n          casesToShow.filter((c) => c.hidden).map((c) => (\r\n            <Col key={c.id}>\r\n              <CaseCard c={c} admin={admin} />\r\n            </Col>\r\n          ))\r\n        )}\r\n      </Row>\r\n      <br />\r\n      <h3>{t('casePlayable')}</h3>\r\n      <hr />\r\n      <Row xs=\"auto\" md=\"auto\" className=\"g-4\">\r\n        {casesToShow.filter((c) => !c.hidden).map((c) => (\r\n          <Col key={c.id}>\r\n            <CaseCard c={c} admin={admin} />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default Frontpage;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst GuestFrontpage = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('GuestFrontpageTitle')}</h2>\r\n      <p>{t('GuestFrontpageText')}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default GuestFrontpage;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\n\r\nconst Sidebar = () => (\r\n  <div id=\"sidebar\" />\r\n);\r\n\r\nexport default Sidebar;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst HowToPlay = () => {\r\n  /* istanbul ignore next */\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('howToPlay')}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HowToPlay;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Profile = () => {\r\n  /* istanbul ignore next */\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <h2>{t('userProfile')}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:8081/api/differentialGroupsUnderCases';\r\n\r\nconst getAll = (caseId) => {\r\n  const request = axios.get(`${baseUrl}/${caseId}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { Accordion, Card } from 'react-bootstrap';\r\n\r\nconst Differential = ({ id, name, description }) => (\r\n  <Card>\r\n    <Accordion.Toggle as={Card.Header} eventKey={id} id=\"differentialName\">\r\n      {name}\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey={id}>\r\n      <Card.Body>{description}</Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n);\r\n\r\nexport default Differential;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport serviceUnderCases from '../../services/differentials/differentialsUnderCases';\r\nimport Differential from './Differential';\r\n\r\nconst DifferentialList = ({ diffGroupCaseId }) => {\r\n  /* istanbul ignore next */\r\n  const [caseDifferentials, setCaseDifferentials] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    serviceUnderCases.getAll(diffGroupCaseId)\r\n      .then((initialDifferentials) => {\r\n        setCaseDifferentials(initialDifferentials);\r\n      })\r\n      .catch((error) => {\r\n        // eslint-disable-next-line\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Accordion>\r\n      {caseDifferentials.map((d) => (\r\n        <Differential key={d.id} id={d.id} name={d.name} description={d.description} />\r\n      ))}\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default DifferentialList;\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:8081/api/differentials';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject);\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove,\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\n\r\nconst AddDifferentialForm = ({ addDifferential }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const newDifferentialSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .min(2, t('warningShort'))\r\n      .max(999, t('warningLong'))\r\n      .required(t('warningRequired')),\r\n    description: Yup.string(),\r\n  });\r\n\r\n  const handleDifferentialAdd = (values) => {\r\n    addDifferential({\r\n      name: values.name,\r\n      description: values.description,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: '',\r\n        description: '',\r\n      }}\r\n      validationSchema={newDifferentialSchema}\r\n      onSubmit={handleDifferentialAdd}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        values,\r\n        errors,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Group md=\"6\" controlId=\"name\">\r\n            <Form.Label>{t('addDifferential')}</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder={t('write')}\r\n              value={values.name}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.name}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n              {errors.name}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"description\">\r\n            <Form.Label>{t('description')}</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              name=\"description\"\r\n              rows={3}\r\n              value={values.description}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddDifferentialForm;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\n\r\nconst SelectDifferentialForm = ({ differentials, selectDifferential, diffGroupCaseId }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [selectedDiff, setSelectedDiff] = useState([]);\r\n  const [description, setDescription] = useState('');\r\n\r\n  const handleDifferentialChoose = (event) => {\r\n    event.preventDefault();\r\n    const differential = differentials.filter((d) => d.name === selectedDiff[0])[0];\r\n    selectDifferential({\r\n      diffGroupCaseId,\r\n      differentialId: differential.id,\r\n      description,\r\n    });\r\n\r\n    setDescription('');\r\n    setSelectedDiff([]);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleDifferentialChoose}>\r\n      <Form.Group>\r\n        <Form.Label>{t('selectExistingDifferential')}</Form.Label>\r\n        <Typeahead\r\n          id=\"basic-typeahead-single\"\r\n          labelKey=\"name\"\r\n          options={differentials.map((d) => d.name)}\r\n          placeholder={t('selectDifferential')}\r\n          onChange={setSelectedDiff}\r\n          selected={selectedDiff}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"description\">\r\n        <Form.Label>{t('description')}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          name=\"description\"\r\n          rows={3}\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Button type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SelectDifferentialForm;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Button, Modal, Tabs, Tab,\r\n} from 'react-bootstrap';\r\nimport service from '../../services/differentials/differentials';\r\nimport serviceUnderCases from '../../services/differentials/differentialsUnderCases';\r\nimport AddDifferentialForm from './AddDifferentialForm';\r\nimport SelectDifferentialForm from './SelectDifferentialForm';\r\nimport { setSuccess, setError } from '../utils/MessageBanner';\r\n\r\nconst NewDifferential = ({ diffGroupCaseId }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [differentials, setDifferentials] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    /* istanbul ignore next */\r\n    service.getAll()\r\n      .then((initialDifferentials) => {\r\n        setDifferentials(initialDifferentials);\r\n      })\r\n      .catch((error) => {\r\n        // eslint-disable-next-line\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const toggleVisibility = () => setShow(!show);\r\n\r\n  /* istanbul ignore next */\r\n  const handleDifferentialSelection = (ducObject) => {\r\n    serviceUnderCases.create(ducObject)\r\n      .then(() => {\r\n        toggleVisibility();\r\n        setSuccess(t('differentialUpdateSuccess'));\r\n      })\r\n      .catch((error) => {\r\n      // eslint-disable-next-line no-console\r\n        console.log(error);\r\n        toggleVisibility();\r\n        setError(t('differentialUpdateError'));\r\n      });\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const handleDifferentialAdd = (differentialObject) => {\r\n    service.create({ name: differentialObject.name })\r\n      .then((res) => {\r\n        const differentialId = res[0].id;\r\n        handleDifferentialSelection({\r\n          diffGroupCaseId,\r\n          differentialId,\r\n          description: differentialObject.description,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div id=\"newDifferential\">\r\n      <Button variant=\"primary\" onClick={toggleVisibility} id=\"addNew\">\r\n        {t('buttonNewDifferential')}\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        onHide={toggleVisibility}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{t('addDifferential')}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Tabs defaultActiveKey=\"select\" id=\"differentials\" className=\"mb-3\">\r\n            <Tab eventKey=\"select\" title={t('selectExisting')}>\r\n              <SelectDifferentialForm\r\n                differentials={differentials}\r\n                selectDifferential={handleDifferentialSelection}\r\n                diffGroupCaseId={diffGroupCaseId}\r\n              />\r\n            </Tab>\r\n            <Tab eventKey=\"add\" title={t('addNewDifferential2')}>\r\n              <AddDifferentialForm addDifferential={handleDifferentialAdd} />\r\n            </Tab>\r\n          </Tabs>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewDifferential;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport DifferentialList from '../DifferentialList';\r\nimport NewDifferential from '../NewDifferential';\r\n\r\nconst DifferentialGroup = ({\r\n  diffGroupCaseId, name, admin,\r\n}) => (\r\n  <Card style={{ width: '60rem' }}>\r\n    <Card.Header>{name}</Card.Header>\r\n    <Card.Body>\r\n      <DifferentialList diffGroupCaseId={diffGroupCaseId} />\r\n      {admin && (\r\n        <NewDifferential diffGroupCaseId={diffGroupCaseId} />\r\n      )}\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nexport default DifferentialGroup;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport serviceUnderCases from '../../../services/differentials/differentialGroupsUnderCases';\r\nimport DifferentialGroup from './DifferentialGroup';\r\n\r\nconst DifferentialGroupList = ({ caseId, admin }) => {\r\n  const [caseDifferentialGroups, setCaseDifferentialGroups] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    serviceUnderCases.getAll(caseId)\r\n      .then((initialDifferentialGroups) => {\r\n        setCaseDifferentialGroups(initialDifferentialGroups);\r\n      })\r\n      .catch((error) => {\r\n        // eslint-disable-next-line\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div data-testid=\"diffGroupList\">\r\n      {caseDifferentialGroups.map((d) => (\r\n        <DifferentialGroup\r\n          key={d.id}\r\n          diffGroupCaseId={d.diffGroupCaseId}\r\n          name={d.name}\r\n          admin={admin}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DifferentialGroupList;\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:8081/api/differentialGroups';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\n\r\nconst AddDifferentialGroupForm = ({ addDifferentialGroup }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const newDifferentialGroupSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .min(2, t('warningShort'))\r\n      .max(999, t('warningLong'))\r\n      .required(t('warningRequired')),\r\n  });\r\n\r\n  const handleDifferentialGroupAdd = (values) => {\r\n    addDifferentialGroup({\r\n      name: values.name,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: '',\r\n      }}\r\n      validationSchema={newDifferentialGroupSchema}\r\n      onSubmit={handleDifferentialGroupAdd}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        values,\r\n        errors,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Group md=\"6\" controlId=\"name\">\r\n            <Form.Label>{t('addDifferentialGroup')}</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder={t('write')}\r\n              value={values.name}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.name}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n              {errors.name}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Button type=\"submit\">{t('buttonSubmitNewDifferentialGroup')}</Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddDifferentialGroupForm;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Form, Button,\r\n} from 'react-bootstrap';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\n\r\nconst SelectDifferentialGroupForm = ({ differentialGroups, selectDifferentialGroup, caseId }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [selectedDiff, setSelectedDiff] = useState([]);\r\n\r\n  const handleDifferentialChoose = (event) => {\r\n    event.preventDefault();\r\n    const differentialGroup = differentialGroups.filter((d) => d.name === selectedDiff[0])[0];\r\n    selectDifferentialGroup({\r\n      caseId,\r\n      differentialGroupId: differentialGroup.id,\r\n    });\r\n\r\n    setSelectedDiff([]);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleDifferentialChoose}>\r\n      <Form.Group>\r\n        <Form.Label>{t('selectExistingDifferentialGroup')}</Form.Label>\r\n        <Typeahead\r\n          id=\"basic-typeahead-single\"\r\n          labelKey=\"name\"\r\n          options={differentialGroups.map((d) => d.name)}\r\n          placeholder={t('selectDifferentialGroup')}\r\n          onChange={setSelectedDiff}\r\n          selected={selectedDiff}\r\n        />\r\n      </Form.Group>\r\n      <Button type=\"submit\">{t('buttonSubmitNewDifferentialGroup')}</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SelectDifferentialGroupForm;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Button, Modal, Tabs, Tab,\r\n} from 'react-bootstrap';\r\n\r\nimport serviceUnderCases from '../../../services/differentials/differentialGroupsUnderCases';\r\nimport service from '../../../services/differentials/differentialGroups';\r\nimport AddDifferentialGroupForm from './AddDifferentialGroupForm';\r\nimport SelectDifferentialGroupForm from './SelectDifferentialGroupForm';\r\nimport { setSuccess, setError } from '../../utils/MessageBanner';\r\n\r\nconst NewDifferentialGroup = ({ caseId }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [differentialGroups, setDifferentialGroups] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    service.getAll()\r\n      .then((initialDifferentialGroups) => {\r\n        setDifferentialGroups(initialDifferentialGroups);\r\n      })\r\n      .catch((error) => {\r\n        // eslint-disable-next-line\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const toggleVisibility = () => setShow(!show);\r\n\r\n  const handleDifferentialGroupSelection = (newObject) => {\r\n    serviceUnderCases.create(newObject)\r\n      .then(() => {\r\n        toggleVisibility();\r\n        setSuccess(t('differentialGroupUpdateSuccess'));\r\n      })\r\n      .catch((error) => {\r\n        // eslint-disable-next-line no-console\r\n        console.log(error);\r\n        toggleVisibility();\r\n        setError(t('differentialGroupUpdateError'));\r\n      });\r\n  };\r\n\r\n  const handleDifferentialGroupAdd = (differentialGroupObject) => {\r\n    service.create({ name: differentialGroupObject.name })\r\n      .then((res) => {\r\n        const differentialGroupId = res[0].id;\r\n        handleDifferentialGroupSelection({\r\n          caseId,\r\n          differentialGroupId,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"primary\" onClick={toggleVisibility} id=\"addNew\">\r\n        {t('buttonNewDifferentialGroup')}\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        onHide={toggleVisibility}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{t('addDifferentialGroup')}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Tabs defaultActiveKey=\"select\" id=\"differentialGroups\" className=\"mb-3\">\r\n            <Tab eventKey=\"select\" title={t('selectExisting')}>\r\n              <SelectDifferentialGroupForm\r\n                differentialGroups={differentialGroups}\r\n                selectDifferentialGroup={handleDifferentialGroupSelection}\r\n                caseId={caseId}\r\n              />\r\n            </Tab>\r\n            <Tab eventKey=\"add\" title={t('addNewDifferential2')}>\r\n              <AddDifferentialGroupForm addDifferentialGroup={handleDifferentialGroupAdd} />\r\n            </Tab>\r\n          </Tabs>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewDifferentialGroup;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable array-callback-return */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n// import NewDifferential from './NewDifferential';\r\nimport DifferentialGroupList from './differentialGroup/DifferentialGroupList';\r\nimport NewDifferentialGroup from './differentialGroup/NewDifferentialGroup';\r\n\r\nconst Differentials = ({ admin, caseId }) => {\r\n  /* istanbul ignore next */\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        {t('Differentials')}\r\n      </h2>\r\n      {admin && (\r\n        <div>\r\n          <NewDifferentialGroup caseId={caseId} />\r\n        </div>\r\n      )}\r\n      <DifferentialGroupList caseId={caseId} admin={admin} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Differentials;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst HideCase = ({ c, hideCase }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [newHidden, setNewHidden] = useState(c.hidden);\r\n\r\n  const handleVisibilityUpdate = (event) => {\r\n    event.preventDefault();\r\n    hideCase({\r\n      title: c.title,\r\n      anamnesis: c.anamnesis,\r\n      hidden: newHidden,\r\n    });\r\n  };\r\n\r\n  const handleHiddenChange = () => {\r\n    setNewHidden(!newHidden);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleVisibilityUpdate} className=\"buttonLeft\">\r\n        <label htmlFor=\"submit\" className=\"hidden\">{newHidden ? t('buttonShowCaseToStudents') : t('buttonHideCaseFromStudents')}</label>\r\n        <input type=\"submit\" onClick={handleHiddenChange} id=\"submit\" value={newHidden ? t('buttonShowCaseToStudents') : t('buttonHideCaseFromStudents')} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HideCase;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Form } from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst UpdateCaseTitle = ({ c, updateCaseTitle }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [title, setTitle] = useState(c.title);\r\n\r\n  const caseSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n      .min(2, t('warningShort'))\r\n      .max(999, t('warningLong'))\r\n      .required(t('warningRequired')),\r\n  });\r\n\r\n  const handleTitleUpdate = (values) => {\r\n    updateCaseTitle({\r\n      title: values.title,\r\n      anamnesis: c.anamnesis,\r\n      hidden: c.hidden,\r\n    });\r\n\r\n    setTitle(values.title);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        title,\r\n      }}\r\n      validationSchema={caseSchema}\r\n      onSubmit={handleTitleUpdate}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        values,\r\n        errors,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Group className=\"mb-3\" controlId=\"updateTitle\" style={{ width: '30rem' }}>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.title}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              {t('caseTitleInstruction')}\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\r\n              {errors.title}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default UpdateCaseTitle;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport HideCase from '../case/HideCase';\r\nimport service from '../../services/cases';\r\nimport UpdateCaseTitle from '../case/UpdateCaseTitle';\r\nimport { setSuccess, setError } from '../utils/MessageBanner';\r\n\r\nconst Anamnesis = ({ c, admin }) => {\r\n  const { t } = useTranslation();\r\n  const [currentCase, setCurrentCase] = useState(c);\r\n\r\n  /* istanbul ignore next */\r\n  const handleCaseUpdate = (updatedCase) => {\r\n    service.update(c.id, updatedCase)\r\n      .then(() => {\r\n        setCurrentCase(updatedCase);\r\n        setSuccess(t('caseUpdateSuccess'));\r\n      })\r\n      .catch((error) => {\r\n        // eslint-disable-next-line no-console\r\n        console.log(error);\r\n        setError(t('caseUpdateError'));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>Casen tiedot löytyvät täältä</p>\r\n      { admin && (\r\n        <div>\r\n          <UpdateCaseTitle c={currentCase} updateCaseTitle={handleCaseUpdate} />\r\n          <HideCase c={currentCase} hideCase={handleCaseUpdate} />\r\n        </div>\r\n      )}\r\n      { !admin && (\r\n        <p>{currentCase.title}</p>\r\n      )}\r\n      <p>{currentCase.anamnesis}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Anamnesis;\r\n","/* eslint-disable linebreak-style */\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:8081/api/procedures';\r\n\r\nconst getAll = (id) => {\r\n  const request = axios.get(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject);\r\n\r\nexport default {\r\n  create,\r\n  getAll,\r\n  update,\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport service from '../../services/procedures';\r\nimport serviceUnderCases from '../../services/proceduresUnderCase';\r\nimport { setSuccess, setError } from '../utils/MessageBanner';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst newProcedure = ({ id, addProcedureFunc }) => {\r\n  /* istanbul ignore next */\r\n  const { t } = useTranslation();\r\n  const [newTitle, setNewTitle] = useState('');\r\n  //  const [procedures, setProcedures] = useState([]);\r\n\r\n  /*   useEffect(() => {\r\n    service\r\n      .getAll()\r\n      .then((proceduresList) => {\r\n        setProcedures(proceduresList);\r\n      });\r\n  }); */\r\n\r\n  const handleTitleChange = (event) => {\r\n    setNewTitle(event.target.value);\r\n  };\r\n\r\n  const addProcedure = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const procedureObject = ({\r\n      title: newTitle,\r\n    });\r\n\r\n    /* istanbul ignore else */\r\n    if (addProcedureFunc != null) {\r\n      addProcedureFunc(procedureObject);\r\n    } else {\r\n      const receivedID = await service.create(procedureObject)\r\n        .then((data) => {\r\n          setNewTitle('');\r\n          setSuccess(t('procedureAddSuccess'));\r\n          return data.id;\r\n        })\r\n        .catch((error) => {\r\n          // eslint-disable-next-line no-console\r\n          console.log(error);\r\n          setError(t('procedureAddError'));\r\n        });\r\n\r\n      const procedureUnderCaseObject = ({\r\n        caseId: id,\r\n        procedureId: receivedID,\r\n        priority: 1,\r\n      });\r\n\r\n      serviceUnderCases.create(procedureUnderCaseObject);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{t('addProcedure')}</h2>\r\n\r\n      <form onSubmit={addProcedure}>\r\n        <p>\r\n          <label htmlFor=\"title\">\r\n            {t('procedureTitle')}\r\n          </label>\r\n          <br />\r\n          <input\r\n            id=\"title\"\r\n            type=\"text\"\r\n            value={newTitle}\r\n            onChange={handleTitleChange}\r\n          />\r\n        </p>\r\n        <p>\r\n          <input type=\"submit\" id=\"submit\" value={t('buttonSubmitNewProcedure')} />\r\n        </p>\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default newProcedure;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-unused-expressions */\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router-dom';\r\nimport service from '../../services/procedures';\r\nimport serviceUnderProcedure from '../../services/proceduresUnderCase';\r\n\r\nconst EditProcedure = ({ procedure, editProcedureFunc }) => {\r\n  /* istanbul ignore next */\r\n  const [newPriority, setNewPriority] = useState(procedure.proceduresUnderCase.priority);\r\n  /* istanbul ignore next */\r\n  const [newProcedureTitle, setNewProcedureTitle] = useState(procedure.title);\r\n  /* istanbul ignore next */\r\n  const { t } = useTranslation();\r\n  /* istanbul ignore next */\r\n  const history = useHistory();\r\n\r\n  const handlePriorityChange = (event) => {\r\n    setNewPriority(event.target.value);\r\n  };\r\n\r\n  const handleTitleChange = (event) => {\r\n    setNewProcedureTitle(event.target.value);\r\n  };\r\n\r\n  const editProcedure = (event) => {\r\n    event.preventDefault();\r\n    setNewProcedureTitle(event.target[0].value);\r\n    setNewPriority(event.target[1].value);\r\n    // eslint-disable-next-line no-param-reassign\r\n    const procedureUnderCaseObject = ({\r\n      caseId: procedure.proceduresUnderCase.caseId,\r\n      procedureId: procedure.proceduresUnderCase.procedureId,\r\n      priority: event.target[1].value,\r\n    });\r\n\r\n    const procedureObject = ({\r\n      title: event.target[0].value,\r\n    });\r\n\r\n    if (editProcedureFunc != null) {\r\n      editProcedureFunc(procedureUnderCaseObject);\r\n    }\r\n    service.update(procedure.id, procedureObject);\r\n    serviceUnderProcedure.update(procedure.id, procedureUnderCaseObject);\r\n    if (editProcedureFunc == null) {\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"wrapper\" key={procedure.proceduresUnderCase.priority}>\r\n      <h2>{t('editProcedure')}</h2>\r\n\r\n      <form onSubmit={(e) => editProcedure(e)}>\r\n        <p>\r\n          <label htmlFor=\"title\">\r\n            {t('procedureTitle')}\r\n          </label>\r\n          <br />\r\n          <input\r\n            id=\"title\"\r\n            type=\"text\"\r\n            defaultValue={procedure.title}\r\n            onChange={handleTitleChange}\r\n          />\r\n        </p>\r\n        <p>\r\n          <label htmlFor=\"priority\">\r\n            {t('procedurePriority')}\r\n          </label>\r\n          <br />\r\n          <input\r\n            id=\"priority\"\r\n            type=\"integer\"\r\n            onChange={handlePriorityChange}\r\n            defaultValue={procedure.proceduresUnderCase.priority}\r\n          />\r\n        </p>\r\n        <p>\r\n          <input type=\"submit\" id=\"submit\" value={t('buttonEdit')} />\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProcedure;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-restricted-globals */\r\n/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport service from '../../services/procedures';\r\nimport EditProcedure from './EditProcedure';\r\nimport serviceUnderProcedure from '../../services/proceduresUnderCase';\r\n\r\nconst DragNDropList = ({\r\n  proceduresHook, handleDragStart, handleDragEnd, handleDragEnter, t, submitForm,\r\n}) => (\r\n  proceduresHook\r\n    && proceduresHook.map((p, index) => (\r\n      <h4\r\n        onDragStart={(e) => handleDragStart(e, index)}\r\n        onDragEnd={() => handleDragEnd()}\r\n        onDragEnter={(e) => handleDragEnter(e, index)}\r\n        key={index}\r\n        draggable\r\n      >\r\n        <div>\r\n          <Button className=\"procedureButton\"> {p.proceduresUnderCase.priority} {p.title} </Button>\r\n          <form onSubmit={(e) => submitForm(p, e)} className=\"handleEdits\">\r\n            <Button type=\"submit\" className=\"editButton\" key={index} size=\"sm\">{t('buttonEdit') }</Button>\r\n          </form>\r\n        </div>\r\n      </h4>\r\n    ))\r\n);\r\n\r\nconst ProcedureList = ({ id }) => {\r\n  /* istanbul ignore next */\r\n  const { t } = useTranslation();\r\n  const draggingItem = useRef();\r\n  const dragOverItem = useRef();\r\n  const [proceduresHook, setProceduresHook] = useState([]);\r\n  const [procedureToEdit, setProcedureToEdit] = useState(null);\r\n\r\n  useEffect(() => {\r\n    service\r\n      .getAll(id)\r\n      .then((procedureList) => {\r\n        const list = procedureList[0].procedures;\r\n        list.sort((a, b) => a.proceduresUnderCase.priority - b.proceduresUnderCase.priority);\r\n        setProceduresHook(list);\r\n      });\r\n  }, []);\r\n\r\n  const handleEditId = (p) => {\r\n    setProcedureToEdit(p);\r\n  };\r\n\r\n  const submitForm = (p, e) => {\r\n    e.preventDefault();\r\n    handleEditId(p);\r\n  };\r\n\r\n  const handleDragStart = (e, position) => {\r\n    draggingItem.current = position;\r\n  };\r\n\r\n  const handleDragEnter = (e, position) => {\r\n    dragOverItem.current = position;\r\n    const listCopy = [...proceduresHook];\r\n    const draggingItemContent = listCopy[draggingItem.current];\r\n    listCopy.splice(draggingItem.current, 1);\r\n    listCopy.splice(dragOverItem.current, 0, draggingItemContent);\r\n    draggingItem.current = dragOverItem.current;\r\n    dragOverItem.current = null;\r\n    setProceduresHook(listCopy);\r\n  };\r\n\r\n  const dragDropEditProcedure = (givenProcedure, index) => {\r\n    // eslint-disable-next-line no-param-reassign\r\n    const procedureUnderCaseObject = ({\r\n      caseId: givenProcedure.proceduresUnderCase.caseId,\r\n      procedureId: givenProcedure.proceduresUnderCase.procedureId,\r\n      priority: index + 1,\r\n    });\r\n    // eslint-disable-next-line max-len\r\n    serviceUnderProcedure.update(givenProcedure.proceduresUnderCase.procedureId, procedureUnderCaseObject);\r\n  };\r\n\r\n  const handleDragEnd = () => {\r\n    proceduresHook.map((p, index) => (\r\n      dragDropEditProcedure(p, index)\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DragNDropList\r\n        proceduresHook={proceduresHook}\r\n        handleDragStart={handleDragStart}\r\n        handleDragEnd={handleDragEnd}\r\n        handleDragEnter={handleDragEnter}\r\n        t={t}\r\n        submitForm={submitForm}\r\n      />\r\n      { procedureToEdit ? (\r\n        <EditProcedure procedure={procedureToEdit} />\r\n      ) : (\r\n        <p> </p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedureList;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport NewProcedure from './NewProcedure';\r\nimport ProcedureList from './ProcedureList';\r\n\r\nconst Procedures = ({ id }) => (\r\n  <div>\r\n    <p>Toimenpiteet löytyvät täältä</p>\r\n    <NewProcedure id={id} />\r\n    <ProcedureList id={id} />\r\n  </div>\r\n);\r\n\r\nexport default Procedures;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch, Route, Link, useParams,\r\n} from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport Differentials from '../differential/Differentials';\r\nimport Anamnesis from '../anamnesis/Anamnesis';\r\nimport Procedures from '../procedure/Procedures';\r\n\r\nconst Case = ({ cases, admin }) => {\r\n  const { t } = useTranslation();\r\n  const { id } = useParams();\r\n  const c = cases.find((a) => a.id === Number(id));\r\n  const baseUrl = `/cases/${id}`;\r\n\r\n  return (\r\n    <Router>\r\n      <div id=\"wrapper\">\r\n        <Button as={Link} to={baseUrl}>{t('caseAnamnesis')}</Button>\r\n        <Button as={Link} to={`${baseUrl}/procedures`}>{t('caseProcedures')}</Button>\r\n        <Button as={Link} to={`${baseUrl}/differentials`}>{t('caseDifferentials')}</Button>\r\n\r\n        <Switch>\r\n          <Route path={`${baseUrl}/procedures`}>\r\n            <Procedures id={id} />\r\n          </Route>\r\n          <Route path={`${baseUrl}/differentials`}>\r\n            <Differentials admin={admin} caseId={id} />\r\n          </Route>\r\n          <Route path={baseUrl}>\r\n            <Anamnesis c={c} admin={admin} />\r\n          </Route>\r\n        </Switch>\r\n\r\n      </div>\r\n\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Case;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch, Route,\r\n} from 'react-router-dom';\r\n\r\n// Import components\r\nimport Navigationbar from './components/navigation/Navbar';\r\nimport service from './services/cases';\r\nimport Frontpage from './components/frontpage/Frontpage';\r\nimport GuestFrontpage from './components/frontpage/GuestFrontpage';\r\nimport Sidebar from './components/navigation/Sidebar';\r\nimport HowToPlay from './components/instructions/HowToPlay';\r\nimport Profile from './components/user/Profile';\r\nimport Case from './components/case/Case';\r\nimport HideCase from './components/case/HideCase';\r\nimport MessageBanner from './components/utils/MessageBanner';\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(false);\r\n  const [admin, setAdmin] = useState(false);\r\n  const [guest, setGuest] = useState(true);\r\n  const [cases, setCases] = useState([]);\r\n\r\n  /* istanbul ignore next */\r\n  const changeUser = () => {\r\n    setUser(true);\r\n    setGuest(false);\r\n    setAdmin(false);\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const changeGuest = () => {\r\n    setUser(false);\r\n    setGuest(true);\r\n    setAdmin(false);\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  const changeAdmin = () => {\r\n    setUser(false);\r\n    setGuest(false);\r\n    setAdmin(true);\r\n  };\r\n\r\n  /* istanbul ignore next */\r\n  React.useEffect(() => {\r\n    service\r\n      .getAll()\r\n      .then((initialCases) => {\r\n        setCases(initialCases);\r\n      })\r\n      .catch((error) => {\r\n        // eslint-disable-next-line\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Navigationbar\r\n        user={user}\r\n        admin={admin}\r\n        guest={guest}\r\n        changeUser={changeUser}\r\n        changeAdmin={changeAdmin}\r\n        changeGuest={changeGuest}\r\n        cases={cases}\r\n      />\r\n      { guest\r\n        ? ' '\r\n        : <Sidebar /> }\r\n\r\n      <MessageBanner />\r\n\r\n      <Switch>\r\n        <Route path=\"/howtoplay\">\r\n          <HowToPlay />\r\n        </Route>\r\n        <Route path=\"/profile\">\r\n          <Profile />\r\n        </Route>\r\n        <Route path=\"/cases/:id\">\r\n          <Case cases={cases} admin={admin} />\r\n        </Route>\r\n        { admin && (\r\n          <Route path=\"/editcase/:id\">\r\n            <HideCase cases={cases} />\r\n          </Route>\r\n        )}\r\n        <Route path=\"/\">\r\n          { guest\r\n            ? <GuestFrontpage />\r\n            : <Frontpage admin={admin} cases={cases} /> }\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default (App);\r\n","/* eslint-disable linebreak-style */\r\n/* istanbul ignore file */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' // [::1] is the IPv6 localhost address.\r\n      || window.location.hostname === '[::1]'\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      || window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n      ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        // eslint-disable-next-line no-use-before-define\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        // eslint-disable-next-line no-use-before-define\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      // eslint-disable-next-line no-param-reassign\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n\r\n              // Execute callback\r\n              // eslint-disable-next-line no-lonely-if\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n          || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      });\r\n  }\r\n}\r\n","/* eslint-disable linebreak-style */\r\n/* istanbul ignore file */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './i18n/config';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}