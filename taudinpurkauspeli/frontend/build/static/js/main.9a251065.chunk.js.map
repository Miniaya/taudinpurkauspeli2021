{"version":3,"sources":["i18n/config.js","components/navigation/Navbar.js","services/cases.js","components/navigation/Sidebar.js","components/case/NewCaseForm.js","components/utils/MessageBanner.js","components/case/NewCase.js","components/case/RemoveCase.js","services/differentials/differentialsUnderCases.js","services/proceduresUnderCase.js","components/case/CopyCase.js","components/case/CaseCard.js","components/frontpage/Search.js","components/frontpage/Frontpage.js","components/frontpage/GuestFrontpage.js","components/instructions/HowToPlay.js","components/user/Profile.js","components/case/Case.js","components/case/HideCase.js","services/procedures.js","components/procedure/NewProcedure.js","components/procedure/EditProcedure.js","components/procedure/ProcedureList.js","components/procedure/Procedures.js","services/differentials/differentialGroupsUnderCases.js","components/differential/Differential.js","components/differential/DifferentialList.js","services/differentials/differentials.js","components/differential/AddDifferentialForm.js","components/differential/SelectDifferentialForm.js","components/differential/NewDifferential.js","components/differential/differentialGroup/DifferentialGroup.js","components/differential/differentialGroup/DifferentialGroupList.js","services/differentials/differentialGroups.js","components/differential/differentialGroup/AddDifferentialGroupForm.js","components/differential/differentialGroup/SelectDifferentialGroupForm.js","components/differential/differentialGroup/NewDifferentialGroup.js","components/differential/Differentials.js","components/case/UpdateCaseTitle.js","components/anamnesis/Anamnesis.js","components/navigation/Routing.js","App.js","serviceWorker.js","index.js"],"names":["i18n","use","LanguageDetector","init","initReactI18next","fallbackLng","lng","localStorage","getItem","resources","fi","translations","require","en","ns","defaultNS","languages","Navigationbar","user","admin","guest","changeUser","changeAdmin","changeGuest","t","useTranslation","changeLanguage","language","Navbar","collapseOnSelect","expand","variant","sticky","Brand","as","Link","to","Toggle","Collapse","id","Nav","className","NavDropdown","title","Item","onClick","eventKey","NavLink","baseUrl","axios","get","then","response","console","log","headers","data","newObject","post","put","delete","Sidebar","newCase","addCase","newCaseSchema","Yup","shape","min","max","required","anamnesis","hidden","initialValues","validationSchema","onSubmit","values","handleSubmit","handleChange","errors","Form","noValidate","Group","md","controlId","Label","Control","type","name","value","onChange","isInvalid","Feedback","rows","Check","label","Button","setError","message","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","setSuccess","success","MessageBanner","newestOnTop","rtl","pauseOnFocusLoss","NewCase","useState","show","setShow","toggleVisibility","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","NewCaseForm","service","catch","removeCase","caseToBeRemoved","removeCaseFunc","size","event","preventDefault","window","confirm","diffGroupCaseId","caseId","copyCase","caseToBeCopied","createProcedures","createDifferentials","oldCaseId","newCopyId","caseObject","caseService","copy","ducService","result","pucService","CaseCard","c","Card","style","width","cursor","Text","Footer","ProgressBar","now","CopyCase","copyId","i","length","description","differentialId","procedureId","priority","RemoveCase","Search","newSearch","searchCases","htmlFor","Frontpage","cases","setNewSearch","casesToShow","filter","toLowerCase","includes","target","Row","xs","map","Col","GuestFrontpage","HowToPlay","Profile","Case","useParams","HideCase","hideCase","newHidden","setNewHidden","newProcedure","addProcedureFunc","newTitle","setNewTitle","addProcedure","a","procedureObject","receivedID","serviceUnderCases","EditProcedure","procedure","editProcedureFunc","proceduresUnderCase","setNewPriority","setNewProcedureTitle","history","useHistory","e","procedureUnderCaseObject","serviceUnderProcedure","push","editProcedure","defaultValue","DragNDropList","proceduresHook","handleDragStart","handleDragEnd","handleDragEnter","submitForm","p","index","onDragStart","onDragEnd","onDragEnter","ProcedureList","draggingItem","useRef","dragOverItem","setProceduresHook","procedureToEdit","setProcedureToEdit","useEffect","procedureList","list","procedures","sort","b","current","givenProcedure","dragDropEditProcedure","listCopy","draggingItemContent","splice","handleEditId","Procedures","NewProcedure","Differential","Accordion","DifferentialList","caseDifferentials","setCaseDifferentials","React","initialDifferentials","d","AddDifferentialForm","addDifferential","newDifferentialSchema","placeholder","role","SelectDifferentialForm","differentials","selectDifferential","selectedDiff","setSelectedDiff","setDescription","differential","labelKey","options","selected","NewDifferential","setDifferentials","handleDifferentialSelection","ducObject","Tabs","defaultActiveKey","Tab","differentialObject","res","DifferentialGroup","DifferentialGroupList","caseDifferentialGroups","setCaseDifferentialGroups","initialDifferentialGroups","AddDifferentialGroupForm","addDifferentialGroup","newDifferentialGroupSchema","SelectDifferentialGroupForm","differentialGroups","selectDifferentialGroup","differentialGroup","differentialGroupId","NewDifferentialGroup","setDifferentialGroups","handleDifferentialGroupSelection","differentialGroupObject","Differentials","UpdateCaseTitle","updateCaseTitle","setTitle","caseSchema","Anamnesis","find","Number","setCurrentCase","handleCaseUpdate","updatedCase","Routing","path","App","setUser","setAdmin","setGuest","setCases","initialCases","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a251065.chunk.js","sourcesContent":["/* eslint-disable linebreak-style */\n/* istanbul ignore file */\n/* eslint-disable linebreak-style */\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n// eslint-disable-next-line import/no-unresolved\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n.use(LanguageDetector).init();\n\ni18n.use(initReactI18next).init({\n  fallbackLng: 'fi',\n\n  // eslint-disable-next-line no-undef\n  lng: localStorage.getItem('i18nextLng') || 'fi',\n  resources: {\n    fi: {\n      // eslint-disable-next-line global-require\n      translations: require('./locales/fi/translations.json'),\n    },\n    en: {\n      // eslint-disable-next-line global-require\n      translations: require('./locales/en/translations.json'),\n    },\n  },\n  ns: ['translations'],\n  defaultNS: 'translations',\n});\n\ni18n.languages = ['fi', 'en'];\n\nexport default i18n;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Navbar,\n  Nav,\n  NavLink,\n  NavDropdown,\n} from 'react-bootstrap';\n\n// Import translations\nimport { useTranslation } from 'react-i18next';\nimport i18n from '../../i18n/config';\n\nconst Navigationbar = ({\n  user, admin, guest, changeUser, changeAdmin, changeGuest,\n}) => {\n  const { t } = useTranslation();\n\n  /* istanbul ignore next */\n  const changeLanguage = (language) => {\n    i18n.changeLanguage(language);\n  };\n\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\" sticky=\"top\">\n      <Navbar.Brand as={Link} to=\"/\">{t('nameOfTheGame')}</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <NavDropdown title={t('selectUser')}>\n            <NavDropdown.Item onClick={() => changeGuest()} eventKey=\"guest\">{t('guest')}</NavDropdown.Item>\n            <NavDropdown.Item onClick={() => changeUser()} eventKey=\"student\">{t('student')}</NavDropdown.Item>\n            <NavDropdown.Item onClick={() => changeAdmin()} eventKey=\"teacher\">{t('teacher')}</NavDropdown.Item>\n          </NavDropdown>\n          <NavDropdown title={t('selectLanguage')}>\n            <NavDropdown.Item onClick={() => changeLanguage('fi')} eventKey=\"fi\">{t('languageFinnish')}</NavDropdown.Item>\n            <NavDropdown.Item onClick={() => changeLanguage('en')} eventKey=\"en\">{t('languageEnglish')}</NavDropdown.Item>\n          </NavDropdown>\n          { admin && (\n          <Nav.Item>\n            <NavLink as={Link} to=\"/users\">{t('userInformation')}</NavLink>\n          </Nav.Item>\n          )}\n          { admin && (\n          <Nav.Item>\n            <NavLink as={Link} to=\"/files\">{t('fileBank')}</NavLink>\n          </Nav.Item>\n          )}\n          { (user || guest || admin) && (\n          <Nav.Item>\n            <NavLink as={Link} to=\"/howtoplay\">{t('howToPlay')}</NavLink>\n          </Nav.Item>\n          )}\n          { user && (\n          <Nav.Item>\n            <NavLink as={Link} to=\"/profile\">{t('userProfile')}</NavLink>\n          </Nav.Item>\n          )}\n          <Nav.Item>\n            { (user || admin)\n              ? <NavLink as={Link} to=\"/logout\">{t('logOut')}</NavLink>\n              : <NavLink as={Link} to=\"/login\">{t('logIn')}</NavLink> }\n          </Nav.Item>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default Navigationbar;\n","/* eslint-disable linebreak-style */\nimport axios from 'axios';\n\nconst baseUrl = 'http://localhost:8081/api/cases';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => {\n    // eslint-disable-next-line no-console\n    console.log('frontend headers', response.headers);\n    return (response.data);\n  });\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject);\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove,\n};\n","/* eslint-disable linebreak-style */\nimport React from 'react';\n\nconst Sidebar = () => (\n  <div id=\"sidebar\" />\n);\n\nexport default Sidebar;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Button } from 'react-bootstrap';\n\nconst newCase = ({ addCase }) => {\n  const { t } = useTranslation();\n\n  const newCaseSchema = Yup.object().shape({\n    title: Yup.string()\n      .min(2, t('warningShort'))\n      .max(999, t('warningLong'))\n      .required(t('warningRequired')),\n    anamnesis: Yup.string(),\n    hidden: Yup.bool(),\n  });\n\n  const handleCaseAdd = (values) => {\n    addCase({\n      title: values.title,\n      anamnesis: values.anamnesis,\n      hidden: values.hidden,\n    });\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        title: '',\n        anamnesis: '',\n        hidden: false,\n      }}\n      validationSchema={newCaseSchema}\n      onSubmit={handleCaseAdd}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        values,\n        errors,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group md=\"6\" controlId=\"title\">\n            <Form.Label>{t('caseTitle')}</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"title\"\n              value={values.title}\n              onChange={handleChange}\n              isInvalid={!!errors.title}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.title}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"anamnesis\">\n            <Form.Label>{t('caseAnamnesis')}</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              name=\"anamnesis\"\n              rows={3}\n              value={values.anamnesis}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"hidden\">\n            <Form.Check\n              required\n              name=\"hidden\"\n              label={t('hideCase')}\n              value={values.hidden}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Button type=\"submit\">{t('buttonSubmitNewCase')}</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default newCase;\n","/* eslint-disable linebreak-style */\n/* eslint-disable no-undef */\nimport React from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst MessageBanner = () => (\n  <ToastContainer\n    position=\"top-center\"\n    autoClose={3000}\n    hideProgressBar\n    newestOnTop={false}\n    closeOnClick\n    rtl={false}\n    pauseOnFocusLoss={false}\n    draggable={false}\n    pauseOnHover\n  />\n);\n\nexport const setError = (message) => {\n  toast.error(message, {\n    position: 'top-center',\n    autoClose: 3000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: false,\n    draggable: false,\n    progress: undefined,\n  });\n};\n\nexport const setSuccess = (message) => {\n  toast.success(message, {\n    position: 'top-center',\n    autoClose: 3000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: false,\n    draggable: false,\n    progress: undefined,\n  });\n};\n\nexport default MessageBanner;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button, Modal,\n} from 'react-bootstrap';\n\nimport service from '../../services/cases';\nimport NewCaseForm from './NewCaseForm';\nimport { setSuccess, setError } from '../utils/MessageBanner';\n\nconst NewCase = () => {\n  const { t } = useTranslation();\n\n  const [show, setShow] = useState(false);\n\n  const toggleVisibility = () => setShow(!show);\n\n  /* istanbul ignore next */\n  const handleCaseAdd = (newCase) => {\n    service.create(newCase)\n      .then(() => {\n        toggleVisibility();\n        setSuccess(t('caseAddSuccess'));\n      })\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n        toggleVisibility();\n        setError(t('caseAddError'));\n      });\n  };\n\n  return (\n    <div>\n      <Button variant=\"primary\" onClick={toggleVisibility} id=\"addNew\">\n        {t('buttonNewCase')}\n      </Button>\n      <Modal\n        show={show}\n        onHide={toggleVisibility}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{t('addCase')}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <NewCaseForm addCase={handleCaseAdd} />\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n\nexport default NewCase;\n","/* eslint-disable linebreak-style */\n/* eslint-disable react/react-in-jsx-scope */\nimport { Button } from 'react-bootstrap';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport service from '../../services/cases';\n\nconst removeCase = ({ caseToBeRemoved, removeCaseFunc }) => {\n  const { t } = useTranslation();\n\n  const handleDelete = (event) => {\n    event.preventDefault();\n\n    /* istanbul ignore else */\n    if (removeCaseFunc != null) {\n      removeCaseFunc(caseToBeRemoved.id);\n      // eslint-disable-next-line no-param-reassign\n      caseToBeRemoved.id = null;\n      removeCaseFunc(caseToBeRemoved.id);\n    } else {\n      // eslint-disable-next-line no-alert\n      const confirmBox = window.confirm(t('deleteCaseConfirmation'));\n      if (confirmBox === true) {\n        service.remove(caseToBeRemoved.id)\n          .then((response) => (response.message));\n      }\n    }\n  };\n\n  return (\n    <Button className=\"removeButton\" size=\"sm\" variant=\"danger\" onClick={handleDelete}>{t('buttonRemove')}</Button>\n  );\n};\n\nexport default removeCase;\n","/* eslint-disable linebreak-style */\nimport axios from 'axios';\n\nconst baseUrl = 'http://localhost:8081/api/differentialsUnderCases';\n\nconst getAll = (diffGroupCaseId) => {\n  const request = axios.get(`${baseUrl}/${diffGroupCaseId}`);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject);\n\nexport default {\n  getAll,\n  create,\n  update,\n};\n","/* eslint-disable linebreak-style */\nimport axios from 'axios';\n\nconst baseUrl = 'http://localhost:8081/api/proceduresUnderCases';\n\nconst getAll = (caseId) => {\n  const request = axios.get(`${baseUrl}/${caseId}`);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject);\n\nexport default {\n  getAll,\n  create,\n  update,\n};\n","/* eslint-disable linebreak-style */\n/* eslint-disable react/react-in-jsx-scope */\nimport { Button } from 'react-bootstrap';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport caseService from '../../services/cases';\nimport ducService from '../../services/differentials/differentialsUnderCases';\nimport pucService from '../../services/proceduresUnderCase';\n\nconst copyCase = ({\n  caseToBeCopied, createProcedures, createDifferentials,\n}) => {\n  const { t } = useTranslation();\n  const oldCaseId = caseToBeCopied.id;\n  // eslint-disable-next-line no-unused-vars\n  let newCopyId = 0;\n\n  /* istanbul ignore next */\n  const handleCopy = (event) => {\n    event.preventDefault();\n    const caseObject = ({\n      title: caseToBeCopied.title,\n      anamnesis: caseToBeCopied.anamnesis,\n      hidden: caseToBeCopied.hidden,\n    });\n    caseService.create(caseObject)\n      .then((copy) => {\n        newCopyId = copy.id;\n      })\n      .then(() => {\n        ducService.getAll(oldCaseId)\n          .then((result) => {\n            createDifferentials(newCopyId, result);\n          });\n      })\n      .then(() => {\n        pucService.getAll(oldCaseId)\n          .then((result) => {\n            createProcedures(newCopyId, result);\n          });\n      });\n  };\n\n  return (\n    <Button className=\"copyButton\" size=\"sm\" variant=\"warning\" onClick={handleCopy}>{t('copy')}</Button>\n  );\n};\n\nexport default copyCase;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Card,\n  Button,\n  ProgressBar,\n} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport RemoveCase from './RemoveCase';\nimport CopyCase from './CopyCase';\nimport ducService from '../../services/differentials/differentialsUnderCases';\nimport pucService from '../../services/proceduresUnderCase';\n\nconst CaseCard = ({ c, admin }) => {\n  const { t } = useTranslation();\n\n  /* istanbul ignore next */\n  const createDifferentials = (copyId, result) => {\n    for (let i = 0; i < result.length; i += 1) {\n      const { id, description } = result[i];\n      const object = {\n        caseId: copyId,\n        differentialId: id,\n        description,\n      };\n      ducService.create(object);\n    }\n  };\n\n  /* istanbul ignore next */\n  const createProcedures = (copyId, result) => {\n    for (let i = 0; i < result.length; i += 1) {\n      const { procedureId, priority } = result[i];\n      const object = {\n        caseId: copyId,\n        procedureId,\n        priority,\n      };\n      pucService.create(object);\n    }\n  };\n\n  return (\n    <div>\n      <Card as={Link} to={`/cases/${c.id}`} style={{ width: '20rem', cursor: 'pointer' }} className=\"caseCard\">\n        <Card.Body>\n          <Card.Title>{c.title}</Card.Title>\n          <Card.Text>{c.anamnesis}</Card.Text>\n        </Card.Body>\n        <Card.Footer>\n          <ProgressBar className=\"progsbar\" variant=\"success\" now={25} label={`${25}%`} />\n        </Card.Footer>\n      </Card>\n\n      { admin && (\n        <div className=\"cardButtons\">\n          <Button as={Link} to={`/cases/${c.id}`} className=\"editButton\" size=\"sm\">{t('buttonEdit')}</Button>\n          <CopyCase\n            caseToBeCopied={c}\n            createDifferentials={createDifferentials}\n            createProcedures={createProcedures}\n          />\n          <RemoveCase caseToBeRemoved={c} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CaseCard;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst Search = ({ newSearch, searchCases }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div>\n      <label htmlFor=\"search\">\n        {t('searchByTitle')}\n        &nbsp;\n        <input\n          id=\"search\"\n          value={newSearch}\n          onChange={searchCases}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Search;\n","/* eslint-disable linebreak-style */\n/* eslint-disable array-callback-return */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Col,\n  Row,\n} from 'react-bootstrap';\n\nimport NewCase from '../case/NewCase';\nimport CaseCard from '../case/CaseCard';\nimport Search from './Search';\n\nconst Frontpage = ({ cases, admin }) => {\n  const { t } = useTranslation();\n  const [newSearch, setNewSearch] = useState('');\n\n  const searchCases = (event) => {\n    setNewSearch(event.target.value);\n  };\n\n  const casesToShow = !newSearch\n    ? cases : cases.filter((c) => c.title.toLowerCase().includes(newSearch.toLowerCase()));\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('frontpageTitle')}</h2>\n      <p>{t('frontpageText')}</p>\n      <Search newSearch={newSearch} searchCases={searchCases} />\n      <br />\n      {admin && (\n        <div>\n          <NewCase />\n          <br />\n          <h3>{t('caseHidden')}</h3>\n          <hr />\n        </div>\n      )}\n      <Row xs=\"auto\" md=\"auto\" className=\"g-4\">\n        {admin && (\n          casesToShow.filter((c) => c.hidden).map((c) => (\n            <Col key={c.id}>\n              <CaseCard c={c} admin={admin} />\n            </Col>\n          ))\n        )}\n      </Row>\n      <br />\n      <h3>{t('casePlayable')}</h3>\n      <hr />\n      <Row xs=\"auto\" md=\"auto\" className=\"g-4\">\n        {casesToShow.filter((c) => !c.hidden).map((c) => (\n          <Col key={c.id}>\n            <CaseCard c={c} admin={admin} />\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\nexport default Frontpage;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst GuestFrontpage = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('GuestFrontpageTitle')}</h2>\n      <p>{t('GuestFrontpageText')}</p>\n    </div>\n  );\n};\nexport default GuestFrontpage;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst HowToPlay = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('howToPlay')}</h2>\n    </div>\n  );\n};\n\nexport default HowToPlay;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst Profile = () => {\n  /* istanbul ignore next */\n  const { t } = useTranslation();\n\n  return (\n    <div id=\"wrapper\">\n      <h2>{t('userProfile')}</h2>\n    </div>\n  );\n};\n\nexport default Profile;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Link, useParams,\n} from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nconst Case = () => {\n  const { t } = useTranslation();\n  const { id } = useParams();\n  const baseUrl = `/cases/${id}`;\n\n  return (\n    <div id=\"wrapper\">\n      <Button as={Link} to={baseUrl}>{t('caseAnamnesis')}</Button>\n      <Button as={Link} to={`${baseUrl}/procedures`}>{t('caseProcedures')}</Button>\n      <Button as={Link} to={`${baseUrl}/differentials`}>{t('caseDifferentials')}</Button>\n    </div>\n  );\n};\n\nexport default Case;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst HideCase = ({ c, hideCase }) => {\n  const { t } = useTranslation();\n\n  const [newHidden, setNewHidden] = useState(c.hidden);\n\n  const handleVisibilityUpdate = (event) => {\n    event.preventDefault();\n    hideCase({\n      title: c.title,\n      anamnesis: c.anamnesis,\n      hidden: newHidden,\n    });\n  };\n\n  const handleHiddenChange = () => {\n    setNewHidden(!newHidden);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleVisibilityUpdate} className=\"buttonLeft\">\n        <label htmlFor=\"submit\" className=\"hidden\">{newHidden ? t('buttonShowCaseToStudents') : t('buttonHideCaseFromStudents')}</label>\n        <input type=\"submit\" onClick={handleHiddenChange} id=\"submit\" value={newHidden ? t('buttonShowCaseToStudents') : t('buttonHideCaseFromStudents')} />\n      </form>\n    </div>\n  );\n};\n\nexport default HideCase;\n","/* eslint-disable linebreak-style */\nimport axios from 'axios';\n\nconst baseUrl = 'http://localhost:8081/api/procedures';\n\nconst getAll = (id) => {\n  const request = axios.get(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject);\n\nexport default {\n  create,\n  getAll,\n  update,\n};\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport service from '../../services/procedures';\nimport serviceUnderCases from '../../services/proceduresUnderCase';\nimport { setSuccess, setError } from '../utils/MessageBanner';\n\n// eslint-disable-next-line no-unused-vars\nconst newProcedure = ({ id, addProcedureFunc }) => {\n  /* istanbul ignore next */\n  const { t } = useTranslation();\n  const [newTitle, setNewTitle] = useState('');\n  //  const [procedures, setProcedures] = useState([]);\n\n  /*   useEffect(() => {\n    service\n      .getAll()\n      .then((proceduresList) => {\n        setProcedures(proceduresList);\n      });\n  }); */\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value);\n  };\n\n  const addProcedure = async (event) => {\n    event.preventDefault();\n\n    const procedureObject = ({\n      title: newTitle,\n    });\n\n    /* istanbul ignore else */\n    if (addProcedureFunc != null) {\n      addProcedureFunc(procedureObject);\n    } else {\n      const receivedID = await service.create(procedureObject)\n        .then((data) => {\n          setNewTitle('');\n          setSuccess(t('procedureAddSuccess'));\n          return data.id;\n        })\n        .catch((error) => {\n          // eslint-disable-next-line no-console\n          console.log(error);\n          setError(t('procedureAddError'));\n        });\n\n      const procedureUnderCaseObject = ({\n        caseId: id,\n        procedureId: receivedID,\n        priority: 1,\n      });\n\n      serviceUnderCases.create(procedureUnderCaseObject);\n    }\n  };\n\n  return (\n    <div>\n      <h2>{t('addProcedure')}</h2>\n\n      <form onSubmit={addProcedure}>\n        <p>\n          <label htmlFor=\"title\">\n            {t('procedureTitle')}\n          </label>\n          <br />\n          <input\n            id=\"title\"\n            type=\"text\"\n            value={newTitle}\n            onChange={handleTitleChange}\n          />\n        </p>\n        <p>\n          <input type=\"submit\" id=\"submit\" value={t('buttonSubmitNewProcedure')} />\n        </p>\n      </form>\n\n    </div>\n  );\n};\n\nexport default newProcedure;\n","/* eslint-disable linebreak-style */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-unused-expressions */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\nimport service from '../../services/procedures';\nimport serviceUnderProcedure from '../../services/proceduresUnderCase';\n\nconst EditProcedure = ({ procedure, editProcedureFunc }) => {\n  /* istanbul ignore next */\n  const [newPriority, setNewPriority] = useState(procedure.proceduresUnderCase.priority);\n  /* istanbul ignore next */\n  const [newProcedureTitle, setNewProcedureTitle] = useState(procedure.title);\n  /* istanbul ignore next */\n  const { t } = useTranslation();\n  /* istanbul ignore next */\n  const history = useHistory();\n\n  /* istanbul ignore next */\n  const handlePriorityChange = (event) => {\n    setNewPriority(event.target.value);\n  };\n\n  /* istanbul ignore next */\n  const handleTitleChange = (event) => {\n    setNewProcedureTitle(event.target.value);\n  };\n\n  /* istanbul ignore next */\n  const editProcedure = (event) => {\n    event.preventDefault();\n    setNewProcedureTitle(event.target[0].value);\n    setNewPriority(event.target[1].value);\n    // eslint-disable-next-line no-param-reassign\n    const procedureUnderCaseObject = ({\n      caseId: procedure.proceduresUnderCase.caseId,\n      procedureId: procedure.proceduresUnderCase.procedureId,\n      priority: event.target[1].value,\n    });\n\n    const procedureObject = ({\n      title: event.target[0].value,\n    });\n\n    if (editProcedureFunc != null) {\n      editProcedureFunc(procedureUnderCaseObject);\n    }\n    service.update(procedure.id, procedureObject);\n    serviceUnderProcedure.update(procedure.id, procedureUnderCaseObject);\n    if (editProcedureFunc == null) {\n      history.push('/');\n    }\n  };\n\n  return (\n    <div id=\"wrapper\" key={procedure.proceduresUnderCase.priority}>\n      <h2>{t('editProcedure')}</h2>\n\n      <form onSubmit={(e) => editProcedure(e)}>\n        <p>\n          <label htmlFor=\"title\">\n            {t('procedureTitle')}\n          </label>\n          <br />\n          <input\n            id=\"title\"\n            type=\"text\"\n            defaultValue={procedure.title}\n            onChange={handleTitleChange}\n          />\n        </p>\n        <p>\n          <label htmlFor=\"priority\">\n            {t('procedurePriority')}\n          </label>\n          <br />\n          <input\n            id=\"priority\"\n            type=\"integer\"\n            onChange={handlePriorityChange}\n            defaultValue={procedure.proceduresUnderCase.priority}\n          />\n        </p>\n        <p>\n          <input type=\"submit\" id=\"submit\" value={t('buttonEdit')} />\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default EditProcedure;\n","/* eslint-disable linebreak-style */\n/* eslint-disable no-restricted-globals */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/jsx-one-expression-per-line */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport service from '../../services/procedures';\nimport EditProcedure from './EditProcedure';\nimport serviceUnderProcedure from '../../services/proceduresUnderCase';\n\nconst DragNDropList = ({\n  proceduresHook, handleDragStart, handleDragEnd, handleDragEnter, t, submitForm,\n}) => (\n  proceduresHook\n    && proceduresHook.map((p, index) => (\n      <h4\n        onDragStart={(e) => handleDragStart(e, index)}\n        onDragEnd={() => handleDragEnd()}\n        onDragEnter={(e) => handleDragEnter(e, index)}\n        key={index}\n        draggable\n      >\n        <div>\n          <Button className=\"procedureButton\"> {p.proceduresUnderCase.priority} {p.title} </Button>\n          <form onSubmit={(e) => submitForm(p, e)} className=\"handleEdits\">\n            <Button type=\"submit\" className=\"editButton\" key={index} size=\"sm\">{t('buttonEdit') }</Button>\n          </form>\n        </div>\n      </h4>\n    ))\n);\n\nconst ProcedureList = ({ id }) => {\n  /* istanbul ignore next */\n  const { t } = useTranslation();\n  const draggingItem = useRef();\n  const dragOverItem = useRef();\n  const [proceduresHook, setProceduresHook] = useState([]);\n  const [procedureToEdit, setProcedureToEdit] = useState(null);\n\n  useEffect(() => {\n    service\n      .getAll(id)\n      .then((procedureList) => {\n        const list = procedureList[0].procedures;\n        list.sort((a, b) => a.proceduresUnderCase.priority - b.proceduresUnderCase.priority);\n        setProceduresHook(list);\n      });\n  }, []);\n\n  const handleEditId = (p) => {\n    setProcedureToEdit(p);\n  };\n\n  const submitForm = (p, e) => {\n    e.preventDefault();\n    handleEditId(p);\n  };\n\n  const handleDragStart = (e, position) => {\n    draggingItem.current = position;\n  };\n\n  const handleDragEnter = (e, position) => {\n    dragOverItem.current = position;\n    const listCopy = [...proceduresHook];\n    const draggingItemContent = listCopy[draggingItem.current];\n    listCopy.splice(draggingItem.current, 1);\n    listCopy.splice(dragOverItem.current, 0, draggingItemContent);\n    draggingItem.current = dragOverItem.current;\n    dragOverItem.current = null;\n    setProceduresHook(listCopy);\n  };\n\n  const dragDropEditProcedure = (givenProcedure, index) => {\n    // eslint-disable-next-line no-param-reassign\n    const procedureUnderCaseObject = ({\n      caseId: givenProcedure.proceduresUnderCase.caseId,\n      procedureId: givenProcedure.proceduresUnderCase.procedureId,\n      priority: index + 1,\n    });\n    // eslint-disable-next-line max-len\n    serviceUnderProcedure.update(givenProcedure.proceduresUnderCase.procedureId, procedureUnderCaseObject);\n  };\n\n  const handleDragEnd = () => {\n    proceduresHook.map((p, index) => (\n      dragDropEditProcedure(p, index)\n    ));\n  };\n\n  return (\n    <>\n      <DragNDropList\n        proceduresHook={proceduresHook}\n        handleDragStart={handleDragStart}\n        handleDragEnd={handleDragEnd}\n        handleDragEnter={handleDragEnter}\n        t={t}\n        submitForm={submitForm}\n      />\n      { procedureToEdit ? (\n        <EditProcedure procedure={procedureToEdit} />\n      ) : (\n        <p> </p>\n      )}\n    </>\n  );\n};\n\nexport default ProcedureList;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport NewProcedure from './NewProcedure';\nimport ProcedureList from './ProcedureList';\n\nconst Procedures = () => {\n  const { id } = useParams();\n\n  return (\n    <div id=\"wrapper\">\n      <p>Toimenpiteet löytyvät täältä</p>\n      <NewProcedure id={id} />\n      <ProcedureList id={id} />\n    </div>\n  );\n};\n\nexport default Procedures;\n","/* eslint-disable linebreak-style */\nimport axios from 'axios';\n\nconst baseUrl = 'http://localhost:8081/api/differentialGroupsUnderCases';\n\nconst getAll = (caseId) => {\n  const request = axios.get(`${baseUrl}/${caseId}`);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n};\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { Accordion, Card } from 'react-bootstrap';\n\nconst Differential = ({ id, name, description }) => (\n  <Card>\n    <Accordion.Toggle as={Card.Header} eventKey={id} id=\"differentialName\">\n      {name}\n    </Accordion.Toggle>\n    <Accordion.Collapse eventKey={id}>\n      <Card.Body>{description}</Card.Body>\n    </Accordion.Collapse>\n  </Card>\n);\n\nexport default Differential;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { Accordion } from 'react-bootstrap';\nimport serviceUnderCases from '../../services/differentials/differentialsUnderCases';\nimport Differential from './Differential';\n\nconst DifferentialList = ({ diffGroupCaseId }) => {\n  const [caseDifferentials, setCaseDifferentials] = useState([]);\n\n  React.useEffect(() => {\n    serviceUnderCases.getAll(diffGroupCaseId)\n      .then((initialDifferentials) => {\n        setCaseDifferentials(initialDifferentials);\n      })\n      .catch((error) => {\n        /* istanbul ignore next */\n        // eslint-disable-next-line\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <Accordion>\n      {caseDifferentials.map((d) => (\n        <Differential key={d.id} id={d.id} name={d.name} description={d.description} />\n      ))}\n    </Accordion>\n  );\n};\n\nexport default DifferentialList;\n","/* eslint-disable linebreak-style */\nimport axios from 'axios';\n\nconst baseUrl = 'http://localhost:8081/api/differentials';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject);\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove,\n};\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Form, Button,\n} from 'react-bootstrap';\n\nconst AddDifferentialForm = ({ addDifferential }) => {\n  const { t } = useTranslation();\n\n  const newDifferentialSchema = Yup.object().shape({\n    name: Yup.string()\n      .min(2, t('warningShort'))\n      .max(999, t('warningLong'))\n      .required(t('warningRequired')),\n    description: Yup.string(),\n  });\n\n  const handleDifferentialAdd = (values) => {\n    addDifferential({\n      name: values.name,\n      description: values.description,\n    });\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        description: '',\n      }}\n      validationSchema={newDifferentialSchema}\n      onSubmit={handleDifferentialAdd}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        values,\n        errors,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group md=\"6\" controlId=\"name\">\n            <Form.Label>{t('addDifferential')}</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"name\"\n              placeholder={t('write')}\n              value={values.name}\n              onChange={handleChange}\n              isInvalid={!!errors.name}\n            />\n            <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\n              {errors.name}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"description\">\n            <Form.Label>{t('description')}</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              name=\"description\"\n              rows={3}\n              value={values.description}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Button type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddDifferentialForm;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Form, Button,\n} from 'react-bootstrap';\nimport { Typeahead } from 'react-bootstrap-typeahead';\n\nconst SelectDifferentialForm = ({ differentials, selectDifferential, diffGroupCaseId }) => {\n  const { t } = useTranslation();\n\n  const [selectedDiff, setSelectedDiff] = useState([]);\n  const [description, setDescription] = useState('');\n\n  const handleDifferentialChoose = (event) => {\n    event.preventDefault();\n    const differential = differentials.filter((d) => d.name === selectedDiff[0])[0];\n    selectDifferential({\n      diffGroupCaseId,\n      differentialId: differential.id,\n      description,\n    });\n\n    setDescription('');\n    setSelectedDiff([]);\n  };\n\n  return (\n    <Form onSubmit={handleDifferentialChoose}>\n      <Form.Group>\n        <Form.Label>{t('selectExistingDifferential')}</Form.Label>\n        <Typeahead\n          id=\"basic-typeahead-single\"\n          labelKey=\"name\"\n          options={differentials.map((d) => d.name)}\n          placeholder={t('selectDifferential')}\n          onChange={setSelectedDiff}\n          selected={selectedDiff}\n        />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"description\">\n        <Form.Label>{t('description')}</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          name=\"description\"\n          rows={3}\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n      </Form.Group>\n      <Button type=\"submit\">{t('buttonSubmitNewDifferential')}</Button>\n    </Form>\n  );\n};\n\nexport default SelectDifferentialForm;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button, Modal, Tabs, Tab,\n} from 'react-bootstrap';\nimport service from '../../services/differentials/differentials';\nimport serviceUnderCases from '../../services/differentials/differentialsUnderCases';\nimport AddDifferentialForm from './AddDifferentialForm';\nimport SelectDifferentialForm from './SelectDifferentialForm';\nimport { setSuccess, setError } from '../utils/MessageBanner';\n\nconst NewDifferential = ({ diffGroupCaseId }) => {\n  const { t } = useTranslation();\n\n  const [show, setShow] = useState(false);\n  const [differentials, setDifferentials] = useState([]);\n\n  React.useEffect(() => {\n    service.getAll()\n      .then((initialDifferentials) => {\n        setDifferentials(initialDifferentials);\n      })\n      .catch((error) => {\n        /* istanbul ignore next */\n        // eslint-disable-next-line\n        console.log(error);\n      });\n  }, []);\n\n  const toggleVisibility = () => setShow(!show);\n\n  /* istanbul ignore next */\n  const handleDifferentialSelection = (ducObject) => {\n    serviceUnderCases.create(ducObject)\n      .then(() => {\n        toggleVisibility();\n        setSuccess(t('differentialUpdateSuccess'));\n      })\n      .catch((error) => {\n      // eslint-disable-next-line no-console\n        console.log(error);\n        toggleVisibility();\n        setError(t('differentialUpdateError'));\n      });\n  };\n\n  /* istanbul ignore next */\n  const handleDifferentialAdd = (differentialObject) => {\n    service.create({ name: differentialObject.name })\n      .then((res) => {\n        const differentialId = res[0].id;\n        handleDifferentialSelection({\n          diffGroupCaseId,\n          differentialId,\n          description: differentialObject.description,\n        });\n      });\n  };\n\n  return (\n    <div id=\"newDifferential\">\n      <Button variant=\"primary\" onClick={toggleVisibility} id=\"addNew\">\n        {t('buttonNewDifferential')}\n      </Button>\n      <Modal\n        show={show}\n        onHide={toggleVisibility}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{t('addDifferential')}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Tabs defaultActiveKey=\"select\" id=\"differentials\" className=\"mb-3\">\n            <Tab eventKey=\"select\" title={t('selectExisting')}>\n              <SelectDifferentialForm\n                differentials={differentials}\n                selectDifferential={handleDifferentialSelection}\n                diffGroupCaseId={diffGroupCaseId}\n              />\n            </Tab>\n            <Tab eventKey=\"add\" title={t('addNewDifferential2')}>\n              <AddDifferentialForm addDifferential={handleDifferentialAdd} />\n            </Tab>\n          </Tabs>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n\nexport default NewDifferential;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport DifferentialList from '../DifferentialList';\nimport NewDifferential from '../NewDifferential';\n\nconst DifferentialGroup = ({\n  diffGroupCaseId, name, admin,\n}) => (\n  <Card style={{ width: '60rem' }}>\n    <Card.Header>{name}</Card.Header>\n    <Card.Body>\n      <DifferentialList diffGroupCaseId={diffGroupCaseId} />\n      {admin && (\n        <NewDifferential diffGroupCaseId={diffGroupCaseId} />\n      )}\n    </Card.Body>\n  </Card>\n);\n\nexport default DifferentialGroup;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport serviceUnderCases from '../../../services/differentials/differentialGroupsUnderCases';\nimport DifferentialGroup from './DifferentialGroup';\n\nconst DifferentialGroupList = ({ caseId, admin }) => {\n  const [caseDifferentialGroups, setCaseDifferentialGroups] = useState([]);\n\n  React.useEffect(() => {\n    serviceUnderCases.getAll(caseId)\n      .then((initialDifferentialGroups) => {\n        setCaseDifferentialGroups(initialDifferentialGroups);\n      })\n      .catch((error) => {\n        /* istanbul ignore next */\n        // eslint-disable-next-line\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <div data-testid=\"diffGroupList\">\n      {caseDifferentialGroups.map((d) => (\n        <DifferentialGroup\n          key={d.id}\n          diffGroupCaseId={d.diffGroupCaseId}\n          name={d.name}\n          admin={admin}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default DifferentialGroupList;\n","/* eslint-disable linebreak-style */\nimport axios from 'axios';\n\nconst baseUrl = 'http://localhost:8081/api/differentialGroups';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n};\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Form, Button,\n} from 'react-bootstrap';\n\nconst AddDifferentialGroupForm = ({ addDifferentialGroup }) => {\n  const { t } = useTranslation();\n\n  const newDifferentialGroupSchema = Yup.object().shape({\n    name: Yup.string()\n      .min(2, t('warningShort'))\n      .max(999, t('warningLong'))\n      .required(t('warningRequired')),\n  });\n\n  const handleDifferentialGroupAdd = (values) => {\n    addDifferentialGroup({\n      name: values.name,\n    });\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n      }}\n      validationSchema={newDifferentialGroupSchema}\n      onSubmit={handleDifferentialGroupAdd}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        values,\n        errors,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group md=\"6\" controlId=\"name\">\n            <Form.Label>{t('addDifferentialGroup')}</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"name\"\n              placeholder={t('write')}\n              value={values.name}\n              onChange={handleChange}\n              isInvalid={!!errors.name}\n            />\n            <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\n              {errors.name}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Button type=\"submit\">{t('buttonSubmitNewDifferentialGroup')}</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddDifferentialGroupForm;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Form, Button,\n} from 'react-bootstrap';\nimport { Typeahead } from 'react-bootstrap-typeahead';\n\nconst SelectDifferentialGroupForm = ({ differentialGroups, selectDifferentialGroup, caseId }) => {\n  const { t } = useTranslation();\n\n  const [selectedDiff, setSelectedDiff] = useState([]);\n\n  const handleDifferentialChoose = (event) => {\n    event.preventDefault();\n    const differentialGroup = differentialGroups.filter((d) => d.name === selectedDiff[0])[0];\n    selectDifferentialGroup({\n      caseId,\n      differentialGroupId: differentialGroup.id,\n    });\n\n    setSelectedDiff([]);\n  };\n\n  return (\n    <Form onSubmit={handleDifferentialChoose}>\n      <Form.Group>\n        <Form.Label>{t('selectExistingDifferentialGroup')}</Form.Label>\n        <Typeahead\n          id=\"basic-typeahead-single\"\n          labelKey=\"name\"\n          options={differentialGroups.map((d) => d.name)}\n          placeholder={t('selectDifferentialGroup')}\n          onChange={setSelectedDiff}\n          selected={selectedDiff}\n        />\n      </Form.Group>\n      <Button type=\"submit\">{t('buttonSubmitNewDifferentialGroup')}</Button>\n    </Form>\n  );\n};\n\nexport default SelectDifferentialGroupForm;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button, Modal, Tabs, Tab,\n} from 'react-bootstrap';\n\nimport serviceUnderCases from '../../../services/differentials/differentialGroupsUnderCases';\nimport service from '../../../services/differentials/differentialGroups';\nimport AddDifferentialGroupForm from './AddDifferentialGroupForm';\nimport SelectDifferentialGroupForm from './SelectDifferentialGroupForm';\nimport { setSuccess, setError } from '../../utils/MessageBanner';\n\nconst NewDifferentialGroup = ({ caseId }) => {\n  const { t } = useTranslation();\n\n  const [show, setShow] = useState(false);\n  const [differentialGroups, setDifferentialGroups] = useState([]);\n\n  React.useEffect(() => {\n    service.getAll()\n      .then((initialDifferentialGroups) => {\n        setDifferentialGroups(initialDifferentialGroups);\n      })\n      .catch((error) => {\n        /* istanbul ignore next */\n        // eslint-disable-next-line\n        console.log(error);\n      });\n  }, []);\n\n  const toggleVisibility = () => setShow(!show);\n\n  /* istanbul ignore next */\n  const handleDifferentialGroupSelection = (newObject) => {\n    serviceUnderCases.create(newObject)\n      .then(() => {\n        toggleVisibility();\n        setSuccess(t('differentialGroupUpdateSuccess'));\n      })\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n        toggleVisibility();\n        setError(t('differentialGroupUpdateError'));\n      });\n  };\n\n  /* istanbul ignore next */\n  const handleDifferentialGroupAdd = (differentialGroupObject) => {\n    service.create({ name: differentialGroupObject.name })\n      .then((res) => {\n        const differentialGroupId = res[0].id;\n        handleDifferentialGroupSelection({\n          caseId,\n          differentialGroupId,\n        });\n      });\n  };\n\n  return (\n    <div>\n      <Button variant=\"primary\" onClick={toggleVisibility} id=\"addNew\">\n        {t('buttonNewDifferentialGroup')}\n      </Button>\n      <Modal\n        show={show}\n        onHide={toggleVisibility}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{t('addDifferentialGroup')}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Tabs defaultActiveKey=\"select\" id=\"differentialGroups\" className=\"mb-3\">\n            <Tab eventKey=\"select\" title={t('selectExisting')}>\n              <SelectDifferentialGroupForm\n                differentialGroups={differentialGroups}\n                selectDifferentialGroup={handleDifferentialGroupSelection}\n                caseId={caseId}\n              />\n            </Tab>\n            <Tab eventKey=\"add\" title={t('addNewDifferential2')}>\n              <AddDifferentialGroupForm addDifferentialGroup={handleDifferentialGroupAdd} />\n            </Tab>\n          </Tabs>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n\nexport default NewDifferentialGroup;\n","/* eslint-disable linebreak-style */\n/* eslint-disable array-callback-return */\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n// import NewDifferential from './NewDifferential';\nimport DifferentialGroupList from './differentialGroup/DifferentialGroupList';\nimport NewDifferentialGroup from './differentialGroup/NewDifferentialGroup';\n\nconst Differentials = ({ admin }) => {\n  const { t } = useTranslation();\n  const { id } = useParams();\n\n  return (\n    <div id=\"wrapper\">\n      <h2>\n        {t('Differentials')}\n      </h2>\n      {admin && (\n        <div>\n          <NewDifferentialGroup caseId={id} />\n        </div>\n      )}\n      <DifferentialGroupList caseId={id} admin={admin} />\n    </div>\n  );\n};\n\nexport default Differentials;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Form } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nconst UpdateCaseTitle = ({ c, updateCaseTitle }) => {\n  const { t } = useTranslation();\n\n  const [title, setTitle] = useState(c.title);\n\n  const caseSchema = Yup.object().shape({\n    title: Yup.string()\n      .min(2, t('warningShort'))\n      .max(999, t('warningLong'))\n      .required(t('warningRequired')),\n  });\n\n  const handleTitleUpdate = (values) => {\n    updateCaseTitle({\n      title: values.title,\n      anamnesis: c.anamnesis,\n      hidden: c.hidden,\n    });\n\n    setTitle(values.title);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        title,\n      }}\n      validationSchema={caseSchema}\n      onSubmit={handleTitleUpdate}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        values,\n        errors,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group className=\"mb-3\" controlId=\"updateTitle\" style={{ width: '30rem' }}>\n            <Form.Control\n              type=\"text\"\n              name=\"title\"\n              value={values.title}\n              onChange={handleChange}\n              isInvalid={!!errors.title}\n            />\n            <Form.Text className=\"text-muted\">\n              {t('caseTitleInstruction')}\n            </Form.Text>\n            <Form.Control.Feedback type=\"invalid\" role=\"alert\" aria-label=\"from feedback\">\n              {errors.title}\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default UpdateCaseTitle;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\nimport HideCase from '../case/HideCase';\nimport service from '../../services/cases';\nimport UpdateCaseTitle from '../case/UpdateCaseTitle';\nimport { setSuccess, setError } from '../utils/MessageBanner';\n\nconst Anamnesis = ({ cases, admin }) => {\n  const { t } = useTranslation();\n  const { id } = useParams();\n  const c = cases.find((a) => a.id === Number(id));\n  // currentcase was used to fix bug where case title and visibility\n  // could not be updated at the same time\n  // see https://github.com/taudinpurkauspeli/taudinpurkauspeli2021/commit/24d648f4a684d2acd3d378196c3fc09e6836b1a6#diff-9f9374df7bc962cc29cb590ed33d6b81f84a09bbced9187d2fb750e2f7d645ee\n  // temporarily modified to prevent refresh page bug\n  // eslint-disable-next-line no-unused-vars\n  const [currentCase, setCurrentCase] = useState(c);\n\n  /* istanbul ignore next */\n  const handleCaseUpdate = (updatedCase) => {\n    service.update(c.id, updatedCase)\n      .then(() => {\n        setCurrentCase(updatedCase);\n        setSuccess(t('caseUpdateSuccess'));\n      })\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n        setError(t('caseUpdateError'));\n      });\n  };\n\n  return (\n    <div id=\"wrapper\">\n      <p>Casen tiedot löytyvät täältä</p>\n      { admin && c && (\n        <div>\n          <UpdateCaseTitle c={c} updateCaseTitle={handleCaseUpdate} />\n          <HideCase c={c} hideCase={handleCaseUpdate} />\n        </div>\n      )}\n      { !admin && c && (\n        <p>{c.title}</p>\n      )}\n      { c && (\n        <p>{c.anamnesis}</p>\n      )}\n    </div>\n  );\n};\n\nexport default Anamnesis;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport {\n  Switch, Route,\n} from 'react-router-dom';\n\n// Import components\nimport Frontpage from '../frontpage/Frontpage';\nimport GuestFrontpage from '../frontpage/GuestFrontpage';\nimport HowToPlay from '../instructions/HowToPlay';\nimport Profile from '../user/Profile';\nimport Case from '../case/Case';\nimport HideCase from '../case/HideCase';\nimport NewCase from '../case/NewCase';\nimport Procedures from '../procedure/Procedures';\nimport Differentials from '../differential/Differentials';\nimport Anamnesis from '../anamnesis/Anamnesis';\n\nconst Routing = ({ admin, guest, cases }) => (\n  <Switch>\n    <Route path=\"/howtoplay\">\n      <HowToPlay />\n    </Route>\n    <Route path=\"/profile\">\n      <Profile />\n    </Route>\n    <Route path=\"/cases/:id/procedures\">\n      <Case cases={cases} admin={admin} />\n      <Procedures />\n    </Route>\n    <Route path=\"/cases/:id/differentials\">\n      <Case cases={cases} admin={admin} />\n      <Differentials admin={admin} />\n    </Route>\n    <Route path=\"/cases/:id\">\n      <Case cases={cases} admin={admin} />\n      <Anamnesis cases={cases} admin={admin} />\n    </Route>\n    {admin && (\n      <Route path=\"/editcase/:id\">\n        <HideCase cases={cases} />\n      </Route>\n    )}\n    {admin && (\n      <Route path=\"/newcase\">\n        <NewCase />\n      </Route>\n    )}\n    <Route path=\"/\">\n      {guest\n        ? <GuestFrontpage />\n        : <Frontpage admin={admin} cases={cases} />}\n    </Route>\n  </Switch>\n);\n\nexport default Routing;\n","/* eslint-disable linebreak-style */\nimport React, { useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n} from 'react-router-dom';\n\n// Import components\nimport Navigationbar from './components/navigation/Navbar';\nimport service from './services/cases';\nimport Sidebar from './components/navigation/Sidebar';\nimport Routing from './components/navigation/Routing';\nimport MessageBanner from './components/utils/MessageBanner';\n\nconst App = () => {\n  const [user, setUser] = useState(false);\n  const [admin, setAdmin] = useState(false);\n  const [guest, setGuest] = useState(true);\n  const [cases, setCases] = useState([]);\n\n  /* istanbul ignore next */\n  const changeUser = () => {\n    setUser(true);\n    setGuest(false);\n    setAdmin(false);\n  };\n\n  /* istanbul ignore next */\n  const changeGuest = () => {\n    setUser(false);\n    setGuest(true);\n    setAdmin(false);\n  };\n\n  /* istanbul ignore next */\n  const changeAdmin = () => {\n    setUser(false);\n    setGuest(false);\n    setAdmin(true);\n  };\n\n  /* istanbul ignore next */\n  React.useEffect(() => {\n    service\n      .getAll()\n      .then((initialCases) => {\n        setCases(initialCases);\n      })\n      .catch((error) => {\n        // eslint-disable-next-line\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <Router>\n      <Navigationbar\n        user={user}\n        admin={admin}\n        guest={guest}\n        changeUser={changeUser}\n        changeAdmin={changeAdmin}\n        changeGuest={changeGuest}\n        cases={cases}\n      />\n      { guest ? ' ' : <Sidebar /> }\n      <MessageBanner />\n      <Routing cases={cases} admin={admin} guest={guest} />\n    </Router>\n  );\n};\n\nexport default (App);\n","/* eslint-disable linebreak-style */\n/* istanbul ignore file */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' // [::1] is the IPv6 localhost address.\n      || window.location.hostname === '[::1]'\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      || window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n      ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        // eslint-disable-next-line no-use-before-define\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        // eslint-disable-next-line no-use-before-define\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n\n              // Execute callback\n              // eslint-disable-next-line no-lonely-if\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n          || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      });\n  }\n}\n","/* eslint-disable linebreak-style */\n/* istanbul ignore file */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n/config';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}